{
  "name": "wix-members-followers-backend-v3",
  "displayName": "wix-members-followers-backend.v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-members-followers-backend.v3",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "biLoggerFactory",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-members-followers-backend-v3.BiLogger"
          }
        ],
        "doc": null
      },
      "docs": {
        "description": []
      },
      "isVeloEvent": false,
      "syntaxName": "biLoggerFactory"
    },
    {
      "name": "followMember",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "followMember example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function followMember(memberId) {",
              "   try {",
              "     const result = await .followMember(memberId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "followMember"
    },
    {
      "name": "listCurrentMemberFollowers",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ListCurrentMemberFollowersOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.ListCurrentMemberFollowersResult"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listCurrentMemberFollowers example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function listCurrentMemberFollowers(options) {",
              "   try {",
              "     const result = await .listCurrentMemberFollowers(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listCurrentMemberFollowers"
    },
    {
      "name": "listCurrentMemberFollowing",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ListCurrentMemberFollowingOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.ListCurrentMemberFollowingResult"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listCurrentMemberFollowing example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function listCurrentMemberFollowing(options) {",
              "   try {",
              "     const result = await .listCurrentMemberFollowing(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listCurrentMemberFollowing"
    },
    {
      "name": "listMemberFollowers",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ListMemberFollowersOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.ListMemberFollowersResult"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listMemberFollowers example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function listMemberFollowers(memberId, options) {",
              "   try {",
              "     const result = await .listMemberFollowers(memberId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listMemberFollowers"
    },
    {
      "name": "listMemberFollowing",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ListMemberFollowingOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.ListMemberFollowingResult"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listMemberFollowing example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function listMemberFollowing(memberId, options) {",
              "   try {",
              "     const result = await .listMemberFollowing(memberId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listMemberFollowing"
    },
    {
      "name": "queryCurrentMemberConnections",
      "params": [
        {
          "name": "connectedMemberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.QueryMyMemberConnectionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "queryCurrentMemberConnections example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function queryCurrentMemberConnections(connectedMemberIds) {",
              "   try {",
              "     const result = await .queryCurrentMemberConnections(connectedMemberIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "queryCurrentMemberConnections"
    },
    {
      "name": "queryMemberConnections",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "connectedMemberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-members-followers-backend-v3.QueryMemberConnectionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "queryMemberConnections example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function queryMemberConnections(memberId, connectedMemberIds) {",
              "   try {",
              "     const result = await .queryMemberConnections(memberId, connectedMemberIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "queryMemberConnections"
    },
    {
      "name": "unfollowMember",
      "params": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "unfollowMember example",
            "body": [
              "import * as wixMembersFollowersBackendV3 from 'wix-members-followers-backend.v3';",
              "  ",
              " async function unfollowMember(memberId) {",
              "   try {",
              "     const result = await .unfollowMember(memberId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "unfollowMember"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConnectedMembers",
      "members": [
        {
          "name": "connectedMemberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Site member ID."
        },
        {
          "name": "followedByMember",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if the listed member is followed by the requested member."
        },
        {
          "name": "followingMember",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if the listed member is following the requested member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "cursor returned from last query response"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items to load"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FollowMemberRequest",
      "members": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FollowMemberResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Follower",
      "members": [
        {
          "name": "affectedMemberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID of the member being followed or unfollowed."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID of the member who performed the action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCurrentMemberFollowersOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCurrentMemberFollowersResult",
      "members": [
        {
          "name": "memberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "metadata",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCurrentMemberFollowingOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCurrentMemberFollowingResult",
      "members": [
        {
          "name": "memberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "metadata",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowersOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowersRequest",
      "members": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowersResponse",
      "members": [
        {
          "name": "memberIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of members who are following the request member."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowersResult",
      "members": [
        {
          "name": "memberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "metadata",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowingOptions",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowingRequest",
      "members": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowingResponse",
      "members": [
        {
          "name": "memberIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of site members who are followed by the requested member."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMemberFollowingResult",
      "members": [
        {
          "name": "memberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "metadata",
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMyMemberFollowersRequest",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMyMemberFollowersResponse",
      "members": [
        {
          "name": "memberIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of members who are following the current member."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMyMemberFollowingRequest",
      "members": [
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.CursorPaging"
            }
          ],
          "doc": "Pagination parameters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMyMemberFollowingResponse",
      "members": [
        {
          "name": "memberIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of site members who are followed by the current member."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberFollowed",
      "members": [
        {
          "name": "memberConnection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.Follower"
            }
          ],
          "doc": "Member who is following the other member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MemberUnfollowed",
      "members": [
        {
          "name": "memberConnection",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.Follower"
            }
          ],
          "doc": "Member who is unfollowing the other member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items starting from given cursor."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-members-followers-backend-v3.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMemberConnectionsRequest",
      "members": [
        {
          "name": "connectedMemberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of member IDs whose connections to the requested member\nwill be retrieved."
        },
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the requested member."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMemberConnectionsResponse",
      "members": [
        {
          "name": "connectedMembers",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-followers-backend-v3.ConnectedMembers"
                  }
                ]
              }
            }
          ],
          "doc": "List of site members whose connections to the requested member were retrieved."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMyMemberConnectionsRequest",
      "members": [
        {
          "name": "connectedMemberIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of member IDs whose connections to the current member\nwill be retrieved."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryMyMemberConnectionsResponse",
      "members": [
        {
          "name": "connectedMembers",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-members-followers-backend-v3.ConnectedMembers"
                  }
                ]
              }
            }
          ],
          "doc": "List of site members whose connections to the current member were retrieved."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnfollowMemberRequest",
      "members": [
        {
          "name": "memberId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Member ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnfollowMemberResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
