{
  "name": "TimeSlots",
  "memberOf": "wix-bookings-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-bookings.v2-time_slot",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "calculateEventBasedAvailability",
      "params": [
        {
          "name": "serviceIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CalculateEventBasedAvailabilityOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.from",
        "options.timeZone",
        "options.to",
        "serviceIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.CalculateEventBasedAvailabilityResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "calculateEventBasedAvailability example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function calculateEventBasedAvailability(serviceIds, options) {",
              "   try {",
              "     const result = await timeSlots.calculateEventBasedAvailability(serviceIds, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "calculateEventBasedAvailability",
      "isAdminMethod": true
    },
    {
      "name": "getAvailabilityTimeSlot",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service ID for which the time slots are being returned.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.GetAvailabilityTimeSlotOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.localEndDate",
        "options.localStartDate",
        "options.location",
        "options.timeZone",
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.GetAvailabilityTimeSlotResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns an available time slot that satisfy the requested criteria\npassed as request parameters.\nThrows `SlotNotFound` if there is no such available time slot.\nSupported only for services of type `APPOINTMENT`.",
        "description": [
          "Returns all `AvailableResources` with the full available resources list.\n\n+ Notes:\n+ There are edge cases where certain times either do not exist or exist twice for a local time zone.\nRead about [DST Handling](//todo: link to introduction.md)\n+ Returns the first available time slot in the given range, or throws if no such time slot. // todo: refactor"
        ],
        "examples": [
          {
            "title": "getAvailabilityTimeSlot example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function getAvailabilityTimeSlot(serviceId, options) {",
              "   try {",
              "     const result = await timeSlots.getAvailabilityTimeSlot(serviceId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getAvailabilityTimeSlot",
      "isAdminMethod": true
    },
    {
      "name": "getMultiServiceAvailabilityTimeSlot",
      "params": [
        {
          "name": "services",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Service"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being returned.\nIf the resources are empty, the calculation will include all the assigned resources in these services.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.GetMultiServiceAvailabilityTimeSlotOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "options",
        "options.localEndDate",
        "options.localStartDate",
        "options.location",
        "options.location.locationType",
        "options.timeZone",
        "services",
        "services.serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.GetMultiServiceAvailabilityTimeSlotResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns an available multi service time slot that satisfy the provided criteria\npassed as request parameters.\nThrows `SlotNotFound` if there is no such available time slot.\nSupported only for services of type `APPOINTMENT`.",
        "description": [
          "Returns all `AvailableResources` of the `NestedTimeSlots` with the full available resources list.\nIf you are only interested in specific resources you can learn more about [resources filters](//todo: link to supported criteria filters parameters)\nyou can pass in request.\n\n+ Notes:\n+ All nested time slots share the same location.\n+ You can pass up to 8 services.\n+ There are edge cases where certain times either do not exist or exist twice for a local time zone.\nRead about [DST Handling](//todo: link to Introduction.md)"
        ],
        "examples": [
          {
            "title": "getMultiServiceAvailabilityTimeSlot example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function getMultiServiceAvailabilityTimeSlot(services, options) {",
              "   try {",
              "     const result = await timeSlots.getMultiServiceAvailabilityTimeSlot(services, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getMultiServiceAvailabilityTimeSlot",
      "isAdminMethod": true
    },
    {
      "name": "listAvailabilityTimeSlots",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.ListAvailabilityTimeSlotsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.ListAvailabilityTimeSlotsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns a list of time slots that satisfy the provided criteria\npassed as request parameters.\nSupported only for services of type `APPOINTMENT`.",
        "description": [
          "`AvailableResources` are not returned in the response unless were requested in the request filters.\nIf your flow requires available resources you can learn more about [resources filters](//todo: link to supported filters).\n\nYou MUST pass either:\n+ `fromLocalDate`, `toLocalDate`, `timeZone`, and `serviceId`.\nor\n+ A valid `cursorPaging` from former response. Learn more about [cursorPaging](//todo: link).\n\n+ Notes:\n+ If you don't pass any locations in request,\nthe time slots will be calculated for all possible locations for the requested service.\n+ The returned time slots in response will have a `localStartDate` within the range of [request.fromLocalDate, request.toLocalDate)\n+ There are edge cases where certain times either do not exist or exist twice for a local time zone.\nRead about [DST Handling](//todo: link to introduction.md)"
        ],
        "examples": [
          {
            "title": "listAvailabilityTimeSlots example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function listAvailabilityTimeSlots(options) {",
              "   try {",
              "     const result = await timeSlots.listAvailabilityTimeSlots(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listAvailabilityTimeSlots",
      "isAdminMethod": true
    },
    {
      "name": "listEventTimeSlots",
      "params": [
        {
          "name": "serviceIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being returned.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.ListEventTimeSlotsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.fromLocalDate",
        "options.timeZone",
        "options.toLocalDate",
        "serviceIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.ListEventTimeSlotsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "TODO explain the sorting tie breaker\nReturn a list of available slots, for Event based services\ncan be called only for services with tag \"GROUP\"",
        "description": [],
        "examples": [
          {
            "title": "listEventTimeSlots example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function listEventTimeSlots(serviceIds, options) {",
              "   try {",
              "     const result = await timeSlots.listEventTimeSlots(serviceIds, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listEventTimeSlots",
      "isAdminMethod": true
    },
    {
      "name": "listMultiServiceAvailabilityTimeSlots",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.ListMultiServiceAvailabilityTimeSlotsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.TimeSlots.ListMultiServiceAvailabilityTimeSlotsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listMultiServiceAvailabilityTimeSlots example",
            "body": [
              "import { timeSlots } from 'wix-bookings.v2';",
              "  ",
              " async function listMultiServiceAvailabilityTimeSlots(options) {",
              "   try {",
              "     const result = await timeSlots.listMultiServiceAvailabilityTimeSlots(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listMultiServiceAvailabilityTimeSlots",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "AvailableResources",
      "members": [
        {
          "name": "hasMoreAvailableResources",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO: readOnly is necessary?"
        },
        {
          "name": "resources",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Resource"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.resourceIds.values.maxSize = 100\n!= v2.service.staffMembers.maxSize = 220 != v1 = 135 (did not find on proto files), minSize = 0"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BookingPolicyViolations",
      "members": [
        {
          "name": "bookOnlineDisabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Bookings policy violation. Online booking is disabled for this slot."
        },
        {
          "name": "tooEarlyToBook",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Bookings policy violation. Too early to book this slot."
        },
        {
          "name": "tooLateToBook",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Bookings policy violation. Too late to book this slot."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CalculateEventBasedAvailabilityOptions",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`."
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "from",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored"
        },
        {
          "name": "openSpots",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "if not empty, return slots with openSpots >= X"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "slotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of slots to load for each date. For example, if `slots_per_day` is set to `3`,\nat most 3 available slots are returned for each day in the date range specified in the query's\n`filter`.\n\nWhen a day has both bookable and non-bookable slots, bookable slots are returned first.\nNon-bookable slots are returned according to the specified filters, after all\nbookable slots are already included.\n"
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "to",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CalculateEventBasedAvailabilityRequest",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`."
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "from",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored"
        },
        {
          "name": "openSpots",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "if not empty, return slots with openSpots >= X"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "serviceIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "slotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of slots to load for each date. For example, if `slots_per_day` is set to `3`,\nat most 3 available slots are returned for each day in the date range specified in the query's\n`filter`.\n\nWhen a day has both bookable and non-bookable slots, bookable slots are returned first.\nNon-bookable slots are returned according to the specified filters, after all\nbookable slots are already included.\n"
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "to",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CalculateEventBasedAvailabilityResponse",
      "members": [
        {
          "name": "cursorPagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPagingMetadata"
            }
          ],
          "doc": ""
        },
        {
          "name": "slots",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventInfo",
      "members": [],
      "docs": {
        "description": [
          "TODO: Exposure: Class is not supported yet.\nrelevant for event based slots, and not for availability based slots // Class not yet supported"
        ]
      }
    },
    {
      "name": "GetAvailabilityTimeSlotOptions",
      "members": [
        {
          "name": "localEndDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\"."
        },
        {
          "name": "localStartDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\"."
        },
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored\nIf locationType is `OWNER_BUSINESS`, must have location_id\nIf an empty list is passed, will use the locations that are defined on the service"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "These are the resources for which the time slots are being calculated.\nThe returned time slots will contain up to 10 available resources out of the provided list."
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetAvailabilityTimeSlotRequest",
      "members": [
        {
          "name": "localEndDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\"."
        },
        {
          "name": "localStartDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\"."
        },
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored\nIf locationType is `OWNER_BUSINESS`, must have location_id\nIf an empty list is passed, will use the locations that are defined on the service"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "These are the resources for which the time slots are being calculated.\nThe returned time slots will contain up to 10 available resources out of the provided list."
        },
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service ID for which the time slots are being returned."
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetAvailabilityTimeSlotResponse",
      "members": [
        {
          "name": "timeSlot",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
            }
          ],
          "doc": ""
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMultiServiceAvailabilityTimeSlotOptions",
      "members": [
        {
          "name": "localEndDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "localStartDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored\nmust be set, and must have locationType. If locationType is `OWNER_BUSINESS`, must have location_id"
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMultiServiceAvailabilityTimeSlotRequest",
      "members": [
        {
          "name": "localEndDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "localStartDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored\nmust be set, and must have locationType. If locationType is `OWNER_BUSINESS`, must have location_id"
        },
        {
          "name": "services",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Service"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being returned.\nIf the resources are empty, the calculation will include all the assigned resources in these services."
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetMultiServiceAvailabilityTimeSlotResponse",
      "members": [
        {
          "name": "timeSlot",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
            }
          ],
          "doc": ""
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAvailabilityTimeSlotsOptions",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the slot is available. The availability is determined by checking a\nsession's open slots and policies.\nLocks are not taken into account. // TODO: Aliza's suggestion to consider locks in bookable\nTODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return also slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`.\nThis filtering is relevant only when bookable is false"
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "locations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize != v2.service.locations.maxSize = 100, minSize = 0"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.resourceIds.values.maxSize = 100\n!= v2.service.staffMembers.maxSize = 220 != v1 = 135 (did not find on proto files), minSize = 0"
        },
        {
          "name": "serviceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service ID for which the time slots are being returned."
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxVal = ???, minVal = ???"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        },
        {
          "name": "toLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAvailabilityTimeSlotsRequest",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the slot is available. The availability is determined by checking a\nsession's open slots and policies.\nLocks are not taken into account. // TODO: Aliza's suggestion to consider locks in bookable\nTODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return also slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`.\nThis filtering is relevant only when bookable is false"
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "locations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize != v2.service.locations.maxSize = 100, minSize = 0"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.resourceIds.values.maxSize = 100\n!= v2.service.staffMembers.maxSize = 220 != v1 = 135 (did not find on proto files), minSize = 0"
        },
        {
          "name": "serviceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service ID for which the time slots are being returned."
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxVal = ???, minVal = ???"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        },
        {
          "name": "toLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAvailabilityTimeSlotsResponse",
      "members": [
        {
          "name": "cursorPagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPagingMetadata"
            }
          ],
          "doc": ""
        },
        {
          "name": "timeSlots",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = ???, minSize = 0"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventTimeSlotsOptions",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`."
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which event time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored"
        },
        {
          "name": "remainingCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "if not empty, return slots with remainingCapacity >= X"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxsize && do we need include_resource_type_id here? also is the behavior is the same as availabilityTimeSlots, we won't return resources by default?"
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of slots to load for each date. For example, if `slots_per_day` is set to `3`,\nat most 3 available slots are returned for each day in the date range specified in the query's\n`filter`.\n\nWhen a day has both bookable and non-bookable slots, bookable slots are returned first.\nNon-bookable slots are returned according to the specified filters, after all\nbookable slots are already included.\n"
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The time zone, in IANA time zone format.\nDefault is the Wix Business time zone."
        },
        {
          "name": "toLocalDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which event time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventTimeSlotsRequest",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO good definition of what bookable means https://github.com/wix-private/scheduler/pull/18267/files?file-filters%5B%5D=.proto&show-viewed-files=true#r1199809006"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "each nested field is checked on its own. i.e. if `too_early_to_book` is defined and `too_late_to_book` is not defined\nwe will return slots for which `too_early_to_book` is same as on the request, regardless of `too_late_to_book`."
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which event time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Location"
                  }
                ]
              }
            }
          ],
          "doc": "support filtering by location type, or by locationId. Other fields like `name` are ignored"
        },
        {
          "name": "remainingCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "if not empty, return slots with remainingCapacity >= X"
        },
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxsize && do we need include_resource_type_id here? also is the behavior is the same as availabilityTimeSlots, we won't return resources by default?"
        },
        {
          "name": "serviceIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being returned."
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of slots to load for each date. For example, if `slots_per_day` is set to `3`,\nat most 3 available slots are returned for each day in the date range specified in the query's\n`filter`.\n\nWhen a day has both bookable and non-bookable slots, bookable slots are returned first.\nNon-bookable slots are returned according to the specified filters, after all\nbookable slots are already included.\n"
        },
        {
          "name": "timeZone",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The time zone, in IANA time zone format.\nDefault is the Wix Business time zone."
        },
        {
          "name": "toLocalDate",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which event time slots are returned, in ISO-8601 format.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListEventTimeSlotsResponse",
      "members": [
        {
          "name": "cursorPagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPagingMetadata"
            }
          ],
          "doc": ""
        },
        {
          "name": "timeSlots",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxsize"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The time zone, in IANA time zone format."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMultiServiceAvailabilityTimeSlotsOptions",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO: Locks are not taken into account. // Class is not supported yet. (relevant only for classes with waiting list)\nAliza's suggestion to consider locks in bookable"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "TODO: refactor"
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "Support filtering by location type, or by locationId. Other fields like `name` are ignored.\nLocation with LocationType is required unless `cursorPaging` is provided.\nIf you passed `BUSINESS` as locationType, you must provide the locationId as well."
        },
        {
          "name": "services",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Service"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being calculated for.\nYou can either pass specific resources to calculate the service availability for.\nIf `service.resource_ids` is empty, the calculation will include all possible assigned resources of the service.\nSize must be at least 2 and 8 at most."
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxVal = ???, minVal = ???"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        },
        {
          "name": "toLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMultiServiceAvailabilityTimeSlotsRequest",
      "members": [
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO: Locks are not taken into account. // Class is not supported yet. (relevant only for classes with waiting list)\nAliza's suggestion to consider locks in bookable"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "TODO: refactor"
        },
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPaging"
            }
          ],
          "doc": ""
        },
        {
          "name": "fromLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local start date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T13:30:00\".\nRequired, unless `cursorPaging` is provided."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "Support filtering by location type, or by locationId. Other fields like `name` are ignored.\nLocation with LocationType is required unless `cursorPaging` is provided.\nIf you passed `BUSINESS` as locationType, you must provide the locationId as well."
        },
        {
          "name": "services",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.Service"
                  }
                ]
              }
            }
          ],
          "doc": "The services for which the time slots are being calculated for.\nYou can either pass specific resources to calculate the service availability for.\nIf `service.resource_ids` is empty, the calculation will include all possible assigned resources of the service.\nSize must be at least 2 and 8 at most."
        },
        {
          "name": "timeSlotsPerDay",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxVal = ???, minVal = ???"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        },
        {
          "name": "toLocalDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Local end date for which the time slots are returned, in ISO-8601 format. Optional.\nE.g, \"2024-01-30T14:30:00\".\nRequired, unless `cursorPaging` is provided."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListMultiServiceAvailabilityTimeSlotsResponse",
      "members": [
        {
          "name": "cursorPagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.CursorPagingMetadata"
            }
          ],
          "doc": ""
        },
        {
          "name": "timeSlots",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.TimeSlot"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = ???, minSize = 0"
        },
        {
          "name": "timeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: format: maxLength = ???, minLength = ???"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business Location ID. Present if the location is a business location. // todo: link to business location"
        },
        {
          "name": "formattedAddress",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A string representation for the full address of the location."
        },
        {
          "name": "locationType",
          "optional": true,
          "type": [
            {
              "nativeType": "'UNKNOWN_LOCATION_TYPE'"
            },
            {
              "nativeType": "'BUSINESS'"
            },
            {
              "nativeType": "'CUSTOM'"
            },
            {
              "nativeType": "'CUSTOMER'"
            }
          ],
          "doc": "The type of location:\n- `CUSTOM`: The location is specific to this service, and is not derived from the business location.\n- `BUSINESS`: A business location, either the default business address, or locations defined for the business by the Business Info. // todo: link to businessInfo\n- `CUSTOMER`: Determined by the customer."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: maxLength = v2.service.location.name.maxLength = 150 != v1.location.maxLength = NOT_SET. , minLength = NOT_SET"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "NestedTimeSlot",
      "members": [
        {
          "name": "availableResources",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.AvailableResources"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.maxSize, minSize = 0"
        },
        {
          "name": "localEndDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The local end date of the nested time slot."
        },
        {
          "name": "localStartDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The local start date of the nested time slot."
        },
        {
          "name": "serviceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The service ID of the nested time slot."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Resource",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The resource ID."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TODO: maxLength = v2.resource.maxLength = 40 != v1.resource.maxLength = 1200. , minLength = v2.resource.minLength = 1 != v1.resource.minLength = 0 (none)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Service",
      "members": [
        {
          "name": "resourceIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.resourceIds.values.maxSize = 100\n!= v2.service.staffMembers.maxSize = 220 != v1 = 135 (did not find on proto files), minSize = 0"
        },
        {
          "name": "serviceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TimeSlot",
      "members": [
        {
          "name": "availableResources",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.AvailableResources"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = v2.service.serviceResource.maxSize ??? , minSize = 0"
        },
        {
          "name": "bookable",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "TODO: Locks are not taken into account. // Class is not supported yet. (relevant only for classes with waiting list)\nAliza's suggestion to consider locks in bookable"
        },
        {
          "name": "bookingPolicyViolations",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.BookingPolicyViolations"
            }
          ],
          "doc": "Indicators for booking policy violations for the slot.\nWhen returned from `ListMultiServiceAvailabilityTimeSlots`\nindicates that at least one of the nested time slots does not meet with at least one of the booking policies."
        },
        {
          "name": "localEndDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The local end date of the time slot.\nWhen returned from `ListMultiServiceAvailabilityTimeSlots` or `GetMultiServiceAvailabilityTimeSlots`\nrepresents the latest endDate among all returned nested time slots."
        },
        {
          "name": "localStartDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The local start date of the time slot.\nWhen returned from `ListMultiServiceAvailabilityTimeSlots` or `GetMultiServiceAvailabilityTimeSlots`.\nrepresents the earliest startDate among all returned nested time slots."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.TimeSlots.Location"
            }
          ],
          "doc": "The geographic location of the slot.\nWhen returned from `ListMultiServiceAvailabilityTimeSlots` or `GetMultiServiceAvailabilityTimeSlots`\nthe geographic location of all nested time slots of this slot.\nIf you wish to use the returned available location to `createBooking`,\nyou MUST map the timeSlot.location.locationType to the [Booking.location.locationType](https://dev.wix.com/docs/rest/api-reference/wix-bookings/time-slots-and-bookings/bookings-v2/bookings-v2-and-confirmation/booking-object)"
        },
        {
          "name": "nestedTimeSlots",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.TimeSlots.NestedTimeSlot"
                  }
                ]
              }
            }
          ],
          "doc": "TODO: maxSize = max size for bulk operations"
        },
        {
          "name": "remainingCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxSize = v2.service.defaultCapacity.maxSize, minSize = 0"
        },
        {
          "name": "serviceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service id.\nNot returned from `ListMultiServiceAvailabilityTimeSlots` or `GetMultiServiceAvailabilityTimeSlots`\nInstead, each nested time slot has its own serviceId."
        },
        {
          "name": "totalCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "TODO: maxSize = v2.service.defaultCapacity.maxSize, minSize = 1"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "WaitingList",
      "members": [
        {
          "name": "remainingCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of remaining spots for this wait list.\nFor example, a Yoga event with 10 waitList spots and 3 registered\non the waitList has 10 `total_capacity` and 7 `remaining_capacity`."
        },
        {
          "name": "totalCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of spots in this wait list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
