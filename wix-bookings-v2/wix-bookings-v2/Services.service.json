{
  "name": "Services",
  "memberOf": "wix-bookings-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-bookings.v2-service",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "addStaffMembersToService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to add the staff members to.",
          "required": true
        },
        {
          "name": "staffMembersIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members to add to the service.",
          "required": true
        }
      ],
      "requiredFields": [
        "serviceId",
        "staffMembersIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.AddStaffMembersToServiceResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adds staff members that can provide the service to an appointment-type service.",
        "description": [
          "Make sure staff member resources were already created with tag \"staff\" using the Resources API](https://example.com)."
        ],
        "examples": [
          {
            "title": "AddStaffMembersToService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function addStaffMembersToService(serviceId, staffMembersIds) {",
              "   try {",
              "     const result = await services.addStaffMembersToService(serviceId, staffMembersIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "connectPricingPlansToService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to add the pricing plans to.",
          "required": true
        },
        {
          "name": "pricingPlansIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the pricing plans to connect to the service.",
          "required": true
        }
      ],
      "requiredFields": [
        "pricingPlansIds",
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.ConnectPricingPlansToServiceResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Connects pricing plans to the service, enabling customers to pay for the service using one of the added pricing plans.",
        "description": [],
        "examples": [
          {
            "title": "ConnectPricingPlansToService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function connectPricingPlansToService(serviceId, pricingPlansIds) {",
              "   try {",
              "     const result = await services.connectPricingPlansToService(serviceId, pricingPlansIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "countServices",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CountServicesOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.CountServicesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Counts services according to given criteria.",
        "description": [],
        "examples": [
          {
            "title": "CountServices example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function countServices(options) {",
              "   try {",
              "     const result = await services.countServices(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "createService",
      "params": [
        {
          "name": "service",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "Service to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "service"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.Service"
                }
              ]
            }
          }
        ],
        "doc": "The created service.\n"
      },
      "docs": {
        "summary": "Creates a service.",
        "description": [],
        "examples": [
          {
            "title": "CreateService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function createService(service) {",
              "   try {",
              "     const result = await services.createService(service);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "deleteService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to delete.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.DeleteServiceOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a service.",
        "description": [
          "Each time the service is updated, `revision` increments by 1. You must include the\nnumber of the existing revision when\ndeleting the service. This ensures you're working with the\nlatest service information and prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "DeleteService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function deleteService(serviceId, options) {",
              "   try {",
              "     const result = await services.deleteService(serviceId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "disconnectPricingPlansFromService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to disconnect the pricing plans from.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.DisconnectPricingPlansFromServiceOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Disconnects pricing plans from the service. Customers no longer will be able to pay for the service using a removed pricing plan. Existing payments with a removed plan are not affected.",
        "description": [],
        "examples": [
          {
            "title": "DisconnectPricingPlansFromService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function disconnectPricingPlansFromService(serviceId, options) {",
              "   try {",
              "     const result = await services.disconnectPricingPlansFromService(serviceId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "getService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.Service"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved service.\n"
      },
      "docs": {
        "summary": "Retrieves a service.",
        "description": [],
        "examples": [
          {
            "title": "GetService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function getService(serviceId) {",
              "   try {",
              "     const result = await services.getService(serviceId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "queryServices",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-bookings-v2.Services.ServicesQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "To learn about working with Query endpoints, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language), [Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging), and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).",
        "description": [
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`type`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome)|",
          "|`name`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`startsWith()`](wix-bookings.v2.Services.ServicesQueryBuilder#startsWith)|",
          "|`description`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`startsWith()`](wix-bookings.v2.Services.ServicesQueryBuilder#startsWith)|",
          "|`tagLine`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`startsWith()`](wix-bookings.v2.Services.ServicesQueryBuilder#startsWith)|",
          "|`defaultCapacity`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`lt()`](wix-bookings.v2.Services.ServicesQueryBuilder#lt),[`le()`](wix-bookings.v2.Services.ServicesQueryBuilder#le),[`gt()`](wix-bookings.v2.Services.ServicesQueryBuilder#gt),[`ge()`](wix-bookings.v2.Services.ServicesQueryBuilder#ge)|",
          "|`category.id`|[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists)|",
          "|`form.id`|[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists)|",
          "|`schedule.availabilityConstraints.timeBetweenSessions`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`lt()`](wix-bookings.v2.Services.ServicesQueryBuilder#lt),[`le()`](wix-bookings.v2.Services.ServicesQueryBuilder#le),[`gt()`](wix-bookings.v2.Services.ServicesQueryBuilder#gt),[`ge()`](wix-bookings.v2.Services.ServicesQueryBuilder#ge)|",
          "|`mainSlug.name`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome),[`startsWith()`](wix-bookings.v2.Services.ServicesQueryBuilder#startsWith)|",
          "|`urls.servicePage`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome)|",
          "|`urls.bookingPage`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome)|",
          "|`urls.calendarPage`|[`eq()`](wix-bookings.v2.Services.ServicesQueryBuilder#eq),[`ne()`](wix-bookings.v2.Services.ServicesQueryBuilder#ne),[`exists()`](wix-bookings.v2.Services.ServicesQueryBuilder#exists),[`in()`](wix-bookings.v2.Services.ServicesQueryBuilder#in),[`hasSome()`](wix-bookings.v2.Services.ServicesQueryBuilder#hasSome)|"
        ],
        "examples": [
          {
            "title": "QueryServices example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function queryServices() {",
              "   const { items } = services.queryServices().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "removeStaffMembersFromService",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to remove the staff members from.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.RemoveStaffMembersFromServiceOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "serviceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Removes staff members from an appointment-type service.",
        "description": [
          "You can only remove staff member resources that have already been added as providers to the service."
        ],
        "examples": [
          {
            "title": "RemoveStaffMembersFromService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function removeStaffMembersFromService(serviceId, options) {",
              "   try {",
              "     const result = await services.removeStaffMembersFromService(serviceId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "setCustomSlug",
      "params": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to assign the custom slug to.",
          "required": true
        },
        {
          "name": "slugName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The custom name to set as the active slug for the service.",
          "required": true
        }
      ],
      "requiredFields": [
        "serviceId",
        "slugName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.SetCustomSlugResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Sets a custom (user-defined) slug for the various service pages.\nThe call may fail if there's another service with the same slug, either by past name or by a custom slug.",
        "description": [],
        "examples": [
          {
            "title": "SetCustomSlug example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function setCustomSlug(serviceId, slugName) {",
              "   try {",
              "     const result = await services.setCustomSlug(serviceId, slugName);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "updateService",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service ID.",
          "required": true
        },
        {
          "name": "service",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.UpdateService"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.UpdateServiceOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "service",
        "service.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.Service"
                }
              ]
            }
          }
        ],
        "doc": "The updated service.\n"
      },
      "docs": {
        "summary": "Updates a service.",
        "description": [
          "[Partial updates](https:\\\\example.com) are supported.\n\nEach time the service is updated, `revision` increments by 1. You must include the\nnumber of the existing revision when\nupdating the service. This ensures you're working with the\nlatest service information and prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "UpdateService example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function updateService(id, service, options) {",
              "   try {",
              "     const result = await services.updateService(id, service, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "validateSlug",
      "params": [
        {
          "name": "slugName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The custom name to validate as a slug for the service.",
          "required": true
        }
      ],
      "requiredFields": [
        "slugName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-bookings-v2.Services.ValidateSlugResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Validate a custom (user-defined) slug, making sure no other service uses the same slug.\nThe call may fail if there's another service with the same slug, either by past name or by a custom set slug.",
        "description": [],
        "examples": [
          {
            "title": "ValidateSlug example",
            "body": [
              "import { services } from 'wix-bookings.v2';",
              "  ",
              " async function validateSlug(slugName) {",
              "   try {",
              "     const result = await services.validateSlug(slugName);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddStaffMembersToServiceRequest",
      "members": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to add the staff members to."
        },
        {
          "name": "staffMembersIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members to add to the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddStaffMembersToServiceResponse",
      "members": [
        {
          "name": "staffMembers",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.StaffMember"
                  }
                ]
              }
            }
          ],
          "doc": "The added staff members."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number as free text."
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number as free text."
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "City name."
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in an [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Postal or zip code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.StreetAddress"
            }
          ],
          "doc": "Street name and number."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address latitude."
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Address longitude."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line, usually street and number as free text."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.StreetAddress"
            }
          ],
          "doc": "Street name and number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AvailabilityConstraints",
      "members": [
        {
          "name": "sessionDurations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "number"
                  }
                ]
              }
            }
          ],
          "doc": "A list of duration options for sessions, in minutes.\n\nMin: 1 minute\n\nThe availability calculation generates slots for sessions with these durations, unless there is a conflict with existing sessions or other availability constraints exist.\nRequired for services of type `APPOINTMENT` to allow the customer to book a session of the service. Not relevant for other service types.\n"
        },
        {
          "name": "timeBetweenSessions",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of minutes between the end of a session and the start of the next.\n\nMin: 0 minutes\nMax: 720 minutes\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BookAfterStartPolicy",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if booking is allowed after the start of the schedule, otherwise `false`."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy on whether an entity can be booked after the start of the schedule. By default\n`enabled` is set to `false`.\nNote that this policy and `LimitLateBookingPolicy` cannot be enabled both at the same time. So if this policy\nis enabled then `LimitLateBookingPolicy` must be disabled."
        ]
      }
    },
    {
      "name": "BookingPolicy",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the policy was created. This is a system field."
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The ID referencing the policy for the booking."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the policy was updated. This is a system field."
        },
        {
          "name": "bookAfterStartPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.BookAfterStartPolicy"
            }
          ],
          "doc": "Policy on booking an entity after the start of the schedule."
        },
        {
          "name": "cancellationPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CancellationPolicy"
            }
          ],
          "doc": "Policy for canceling a booked entity."
        },
        {
          "name": "customPolicyDescription",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.PolicyDescription"
            }
          ],
          "doc": "Custom description for the policy. This policy is displayed to the participant."
        },
        {
          "name": "default",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if the policy is the default for the meta site. Otherwise, `false`."
        },
        {
          "name": "limitEarlyBookingPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.LimitEarlyBookingPolicy"
            }
          ],
          "doc": "Policy for limiting early bookings."
        },
        {
          "name": "limitLateBookingPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.LimitLateBookingPolicy"
            }
          ],
          "doc": "Policy for limiting late bookings."
        },
        {
          "name": "name",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the policy."
        },
        {
          "name": "participantsPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ParticipantsPolicy"
            }
          ],
          "doc": "Policy regarding the participants per booking."
        },
        {
          "name": "reschedulePolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ReschedulePolicy"
            }
          ],
          "doc": "Policy for rescheduling a booked entity."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the policy is updated. To prevent conflicting changes, the existing revision must be used when updating a policy."
        },
        {
          "name": "waitlistPolicy",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.WaitlistPolicy"
            }
          ],
          "doc": "Waitlist policy for the service."
        }
      ],
      "docs": {
        "description": [
          "`BookingPolicy` is the main entity of `BookingPolicyService` and specifies a set of rules for booking a service\nby visitors and members."
        ]
      }
    },
    {
      "name": "BusinessLocationOptions",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business location ID."
        },
        {
          "name": "address",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Address"
            }
          ],
          "doc": "Business location address. The address is derived from the business location and is read-only."
        },
        {
          "name": "default",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this is the default location. There can only be one default location per site. The default location can't be archived."
        },
        {
          "name": "name",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Business location name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancellationPolicy",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if cancelling a booking is allowed, otherwise `false`."
        },
        {
          "name": "latestCancellationInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Minimum number of minutes before the start of the booked entity that a booking can be cancelled."
        },
        {
          "name": "limitLatestCancellation",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if there is a limit on the latest cancellation time, otherwise `false`."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy on cancelling a booked entity. By default both `enabled` and\n`limit_latest_cancellation` are set to `false` and `latest_cancellation_in_minutes` is set to 1440 minutes (1 day)."
        ]
      }
    },
    {
      "name": "Category",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID. Read-only."
        },
        {
          "name": "customProperties",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Custom properties that can be associated with the category."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "sortOrder",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Sorting order of the category for Wix Bookings UI."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category status Read-only."
        }
      ],
      "docs": {
        "description": [
          "Categories are used to group multiple services together. A service must be associated with a category in order to be exposed in the Wix Bookings UI."
        ]
      }
    },
    {
      "name": "CategoryNotification",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Category"
            }
          ],
          "doc": ""
        },
        {
          "name": "event",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'Created'`\n- `'Deleted'`\n- `'Updated'`"
        }
      ],
      "docs": {
        "description": [
          "An event sent every time a category entity is changed."
        ]
      }
    },
    {
      "name": "Conferencing",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether a conference link is generated for the service's sessions."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConnectPricingPlansToServiceRequest",
      "members": [
        {
          "name": "pricingPlansIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the pricing plans to connect to the service."
        },
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to add the pricing plans to."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConnectPricingPlansToServiceResponse",
      "members": [
        {
          "name": "pricingPlansIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the pricing plans connect to the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountServicesOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "The filters for performing the count."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountServicesRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "The filters for performing the count."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountServicesResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of services matching the given filter."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateServiceRequest",
      "members": [
        {
          "name": "service",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "Service to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateServiceResponse",
      "members": [
        {
          "name": "service",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "The created service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Cursors"
            }
          ],
          "doc": "Use these cursor to paginate between results. [Read more](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_cursor-paging)."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CustomLocationOptions",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Address"
            }
          ],
          "doc": "A custom address for the location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CustomPayment",
      "members": [
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A custom description explaining the customer how to pay for the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteServiceOptions",
      "members": [
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteServiceRequest",
      "members": [
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the service."
        },
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteServiceResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DisconnectPricingPlansFromServiceOptions",
      "members": [
        {
          "name": "pricingPlansIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "ID of the pricing plans to disconnect from the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DisconnectPricingPlansFromServiceRequest",
      "members": [
        {
          "name": "pricingPlansIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "ID of the pricing plans to disconnect from the service."
        },
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to disconnect the pricing plans from."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DisconnectPricingPlansFromServiceResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFields",
      "members": [
        {
          "name": "namespaces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "Object"
                  }
                ]
              }
            }
          ],
          "doc": "Data Extensions extended fields\nKey: Namespace\nValue: extended fields data in Struct format"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FixedPayment",
      "members": [
        {
          "name": "deposit",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The deposit price required to book the service. Required when `rateType` is `FIXED` and `paymentOptions.deposit` is `true`."
        },
        {
          "name": "price",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The fixed price required to book the service.\nRequired when `rateType` is `FIXED`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Form",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the form associated with the service.\nForm information submitted when booking, including contact details, participants, and other form fields, set up for the service.\nManaging the service booking form fields is done via the [Bookings forms API](https://dev.wix.com/api/rest/wix-bookings/services/form/form-object)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FormSettings",
      "members": [
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the service booking form should be hidden from the site. if `true`, the form is hidden. Otherwise, the form is visible."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetServiceRequest",
      "members": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetServiceResponse",
      "members": [
        {
          "name": "service",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "The retrieved service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidPricingPlan",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The invalid pricing plan id."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reason for the pricing plan considered as invalid"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidStaffMember",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The invalid staff member id."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reason for the staff member considered as invalid"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Keyword",
      "members": [
        {
          "name": "isMain",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the keyword is the main focused"
        },
        {
          "name": "term",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Keyword value"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LimitEarlyBookingPolicy",
      "members": [
        {
          "name": "earliestBookingInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of minutes before the start of the entity that a booking can be made. This value must be greater\nthan `latest_booking_in_minutes` in `LimitLateBookingPolicy`."
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if this policy is enabled, otherwise `false`. When not enabled then there is no limit on the earliest\nbooking time."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy for limiting early bookings. By default `enabled` set to `false` and\n`earliest_booking_in_minutes` set to 10080 minutes (7 days)."
        ]
      }
    },
    {
      "name": "LimitLateBookingPolicy",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if this policy is enabled, otherwise `false`. When not enabled then there is no limit on the latest\nbooking time."
        },
        {
          "name": "latestBookingInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Minimum number of minutes before the start of the entity that a booking can be made.\nFor a schedule, this is relative to the start time of the next booked entity, excluding past booked entities.\nThis value must be less than `earliest_booking_in_minutes` in `LimitEarlyBookingPolicy`."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy for limiting late bookings. By default `enabled` set to `false` and\n`latest_booking_in_minutes` set to 1440 minutes (1 day).\nNote that this policy and `BookAfterStartPolicy` cannot be enabled both at the same time. So if this policy\nis enabled then `BookAfterStartPolicy` must be disabled."
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "business",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.BusinessLocationOptions"
            }
          ],
          "doc": "The service is offered at the referenced business location."
        },
        {
          "name": "calculatedAddress",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Address"
            }
          ],
          "doc": "The location address, based on the location `type`. If `type` is `CUSTOMER`, this address is empty."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CustomLocationOptions"
            }
          ],
          "doc": "The service is offered at a custom location."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The type of location:\n- `CUSTOM`: The location is specific to this service, and is not derived from the business location.\n- `BUSINESS`: A business location, as defined for the by the Business Info [Locations API](https://dev.wix.com/api/rest/business-info/locations)..\n- `CUSTOMER`: Will be determined by the customer. For appointments only."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfLocationOptionsOneOf",
            "members": [
              "business",
              "custom"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LocationOptionsOneOf",
      "members": [
        {
          "name": "business",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.BusinessLocationOptions"
            }
          ],
          "doc": "The service is offered at the referenced business location."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CustomLocationOptions"
            }
          ],
          "doc": "The service is offered at a custom location."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Media",
      "members": [
        {
          "name": "coverMedia",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.MediaItem"
            }
          ],
          "doc": "Cover media associated with the service."
        },
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.MediaItem"
                  }
                ]
              }
            }
          ],
          "doc": "Media items associated with the service."
        },
        {
          "name": "mainMedia",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.MediaItem"
            }
          ],
          "doc": "Primary media associated with the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MediaItem",
      "members": [
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Details of the image associated with the service, such as URL and size."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfMediaItemItemOneOf",
            "members": [
              "image"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MediaItemItemOneOf",
      "members": [
        {
          "name": "image",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Details of the image associated with the service, such as URL and size."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Money",
      "members": [
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Currency code. Must be valid ISO 4217 currency code (e.g., USD)."
        },
        {
          "name": "formattedValue",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string in local format (e.g., 1 000,30). Optionally, a single (-), to indicate that the amount is negative."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative."
        }
      ],
      "docs": {
        "description": [
          "Money.\nDefault format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003."
        ]
      }
    },
    {
      "name": "OnlineBooking",
      "members": [
        {
          "name": "allowMultipleRequests",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Multiple customers can request to book the same time slot. Relevant when `requireManualApproval` is `true`."
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this service can be booked online.\nWhen set to `true`, customers can book the service online. Configuring the payment options is done via `service.payment` property.\nWhen set to `false`, customers cannot book the service online, and the service can only be paid for in person."
        },
        {
          "name": "requireManualApproval",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Booking the service requires approval by the business owner."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ParticipantsPolicy",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if a policy with respect to the participants applies, otherwise `false`."
        },
        {
          "name": "maxParticipantsPerBooking",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of participants. Defaults to 1 participant."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy for the participants per booking (for example, setting the maximum number\nof participants). By default `enabled` is set to false and `max_participants_per_booking` is set to 1."
        ]
      }
    },
    {
      "name": "Payment",
      "members": [
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CustomPayment"
            }
          ],
          "doc": "The details for the custom price of the service.\nRequired when `rateType` is `CUSTOM`."
        },
        {
          "name": "fixed",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.FixedPayment"
            }
          ],
          "doc": "The details for the fixed price of the service.\nRequired when `rateType` is `FIXED`."
        },
        {
          "name": "options",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.PaymentOptions"
            }
          ],
          "doc": "The payment options a customer can use to pay for the service."
        },
        {
          "name": "pricingPlansIds",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of pricing plans that can be used as payment for the service."
        },
        {
          "name": "rateType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The rate the customer is expected to pay for the service.\nCan be:\n- `FIXED`: The service has a fixed price.\n- `CUSTOM`: The service has a custom price, expressed as a price description.\n- `VARIED`: This service is offered with a set of different prices based on different terms.\n- `NO_FEE`: This service is offered free of charge."
        },
        {
          "name": "varied",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.VariedPayment"
            }
          ],
          "doc": "The details for the varied pricing of the service.\nRequired when `rateType` is `VARIED`. Read more about [varied price options](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online#offering-varied-price-options)"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfPaymentRateOneOf",
            "members": [
              "custom",
              "fixed",
              "varied"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PaymentOptions",
      "members": [
        {
          "name": "deposit",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "This service requires a deposit to be made online in order to book it.\nWhen `true`:\n+ `rateType` must be `VARIED` or `FIXED`.\n+ A `deposit` must be specified."
        },
        {
          "name": "inPerson",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Customers can pay for the service in person."
        },
        {
          "name": "online",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Customers can pay for the service online.\nWhen `true`:\n+ `rateType` must be either `FIXED` or `VARIED`.\n+ `fixed.price` or `varied.default_price` must be specified respectively. Read more about [getting paid online](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online)"
        },
        {
          "name": "pricingPlan",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Customers can pay for the service using a pricing plan."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PaymentRateOneOf",
      "members": [
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CustomPayment"
            }
          ],
          "doc": "The details for the custom price of the service.\nRequired when `rateType` is `CUSTOM`."
        },
        {
          "name": "fixed",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.FixedPayment"
            }
          ],
          "doc": "The details for the fixed price of the service.\nRequired when `rateType` is `FIXED`."
        },
        {
          "name": "varied",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.VariedPayment"
            }
          ],
          "doc": "The details for the varied pricing of the service.\nRequired when `rateType` is `VARIED`. Read more about [varied price options](https://support.wix.com/en/article/wix-bookings-about-getting-paid-online#offering-varied-price-options)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyDescription",
      "members": [
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Policy description to be displayed"
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if a policy description should be displayed, otherwise `false`."
        }
      ],
      "docs": {
        "description": [
          "This object specifies a policy description to be displayed to participants. By default `enabled` is set to `false`\nand `description` is left empty, implying that this BookingPolicy does not have a description."
        ]
      }
    },
    {
      "name": "QueryServicesRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CursorQuery"
            }
          ],
          "doc": "WQL expression."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryServicesResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata, including offset, count and [cursors](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_cursor-paging)."
        },
        {
          "name": "services",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Service"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved services."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveStaffMembersFromServiceOptions",
      "members": [
        {
          "name": "staffMembersIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members to remove from the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveStaffMembersFromServiceRequest",
      "members": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to remove the staff members from."
        },
        {
          "name": "staffMembersIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members to remove from the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveStaffMembersFromServiceResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReschedulePolicy",
      "members": [
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if rescheduling a booking is allowed, otherwise `false`."
        },
        {
          "name": "latestRescheduleInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Minimum number of minutes before the start of the booked entity that a booking can be rescheduled."
        },
        {
          "name": "limitLatestReschedule",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if there is a limit on the latest reschedule time, otherwise `false`."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy on rescheduling a booked entity. By default both `enabled` and\n`limit_latest_reschedule` are set to `false` and `latest_reschedule_in_minutes` is set to 1440 minutes (1 day)."
        ]
      }
    },
    {
      "name": "Schedule",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Schedule ID, used to manage the service's sessions."
        },
        {
          "name": "availabilityConstraints",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.AvailabilityConstraints"
            }
          ],
          "doc": "Limitations dictating the way session availability is calculated. Relevant only for appointments."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SeoSchema",
      "members": [
        {
          "name": "settings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Settings"
            }
          ],
          "doc": "SEO general settings."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "SEO tags information."
        }
      ],
      "docs": {
        "description": [
          "The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\nThe search engines use this information for ranking purposes, or to display snippets in the search results.\nThis data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself."
        ]
      }
    },
    {
      "name": "Service",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the service was created. This is a system field."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the service was updated. This is a system field."
        },
        {
          "name": "bookingPolicy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.BookingPolicy"
            }
          ],
          "doc": "Policy determining under what conditions this service can be booked. For example, whether the service can only be booked up to 30 minutes before it begins."
        },
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.V2Category"
            }
          ],
          "doc": "The category the service is associated with."
        },
        {
          "name": "conferencing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Conferencing"
            }
          ],
          "doc": "Conferencing options for this service."
        },
        {
          "name": "defaultCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Default maximum number of customers that can book the service. The service cannot be booked beyond this capacity."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service description, Such as `High-class hair styling, cuts, straightening and color`"
        },
        {
          "name": "form",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Form"
            }
          ],
          "doc": "The form used when booking the service."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the service is hidden from the site. if `true`, the service is hidden. Otherwise, the service is visible."
        },
        {
          "name": "locations",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Location"
                  }
                ]
              }
            }
          ],
          "doc": "The locations this service is offered at. For courses only: Currently, only 1 location is supported."
        },
        {
          "name": "mainSlug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Slug"
            }
          ],
          "doc": "The main slug for the service. `mainSlug` is either taken from the current service name or is a custom slug set by the business owner.\n`mainSlug` is used to construct the service's URLs."
        },
        {
          "name": "media",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Media"
            }
          ],
          "doc": "Media associated with the service."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service name."
        },
        {
          "name": "onlineBooking",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.OnlineBooking"
            }
          ],
          "doc": "Online booking settings."
        },
        {
          "name": "payment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Payment"
            }
          ],
          "doc": "Payment options for booking the service."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the service is updated. To prevent conflicting changes, the existing revision must be used when updating a service."
        },
        {
          "name": "schedule",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Schedule"
            }
          ],
          "doc": "The service's schedule, which can be used to manage the service's sessions."
        },
        {
          "name": "seoData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.SeoSchema"
            }
          ],
          "doc": "Custom SEO data for the service."
        },
        {
          "name": "sortOrder",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Order of a service within a category."
        },
        {
          "name": "staffMembersIds",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members providing the service. For appointments only."
        },
        {
          "name": "supportedSlugs",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Slug"
                  }
                ]
              }
            }
          ],
          "doc": "A slug is the last part of the URL address that serves as a unique identifier of the service.\nThe list of supported slugs includes past service names for backwards compatibility, and a custom slug if one was set by the business owner."
        },
        {
          "name": "tagLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Short service description, Such as `Hair styling`"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service type."
        },
        {
          "name": "urls",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.URLs"
            }
          ],
          "doc": "The URLs to various service-related pages, such as the calendar page and the booking page."
        }
      ],
      "docs": {
        "description": [
          "The `Service` object represents the business offering that a business provides to its customers."
        ]
      }
    },
    {
      "name": "SetCustomSlugRequest",
      "members": [
        {
          "name": "serviceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the service to assign the custom slug to."
        },
        {
          "name": "slugName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The custom name to set as the active slug for the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SetCustomSlugResponse",
      "members": [
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Slug"
            }
          ],
          "doc": "The new slug set as the active slug for the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Settings",
      "members": [
        {
          "name": "keywords",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Keyword"
                  }
                ]
              }
            }
          ],
          "doc": "User-selected keyword terms for a specific page"
        },
        {
          "name": "preventAutoRedirect",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the auto redirects feature creating `301 redirects` on a slug change is enabled.\n\nDefault: enabled\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Slug",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the slug was created. This is a system field."
        },
        {
          "name": "custom",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the slug was generated or customized. If `true`, the slug was set manually by the business owner. Otherwise, the slug was generated from the service name."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The unique part of service's URL that identifies the service's information page. For example, `service-1` in `https:/example.com/services/service-1`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StaffMember",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Staff member id, can be used to retrieve resource information using wix-bookings-backend resources API."
        },
        {
          "name": "description",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Staff member's description."
        },
        {
          "name": "email",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Staff member's email address."
        },
        {
          "name": "phone",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Staff member's phone number."
        },
        {
          "name": "schedules",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Schedule"
                  }
                ]
              }
            }
          ],
          "doc": "Staff member's schedules"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "apt",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Apartment number."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street name."
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Street number."
        }
      ],
      "docs": {
        "description": [
          "Street address. Includes street name, number, and apartment number in separate fields."
        ]
      }
    },
    {
      "name": "Tag",
      "members": [
        {
          "name": "children",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag inner content. For example, `<title> inner content </title>`."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is a custom tag."
        },
        {
          "name": "disabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is disabled."
        },
        {
          "name": "meta",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "SEO tag meta data. For example, `{height: 300, width: 240}`."
        },
        {
          "name": "props",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A `{'key':'value'} pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\nFor example: `{'name': 'description', 'content': 'the description itself'}`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag type.\n\nSupported values: `title`, `meta`, `script`, `link`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "URLs",
      "members": [
        {
          "name": "bookingPage",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The URL for the booking entry point. It can be either to the calendar or to the service page."
        },
        {
          "name": "calendarPage",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The URL for the calendar. Can be empty if no calendar exists."
        },
        {
          "name": "servicePage",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The URL for the service page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateService",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the service was created. This is a system field."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the service was updated. This is a system field."
        },
        {
          "name": "bookingPolicy",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.BookingPolicy"
            }
          ],
          "doc": "Policy determining under what conditions this service can be booked. For example, whether the service can only be booked up to 30 minutes before it begins."
        },
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.V2Category"
            }
          ],
          "doc": "The category the service is associated with."
        },
        {
          "name": "conferencing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Conferencing"
            }
          ],
          "doc": "Conferencing options for this service."
        },
        {
          "name": "defaultCapacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Default maximum number of customers that can book the service. The service cannot be booked beyond this capacity."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service description, Such as `High-class hair styling, cuts, straightening and color`"
        },
        {
          "name": "form",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Form"
            }
          ],
          "doc": "The form used when booking the service."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the service is hidden from the site. if `true`, the service is hidden. Otherwise, the service is visible."
        },
        {
          "name": "locations",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Location"
                  }
                ]
              }
            }
          ],
          "doc": "The locations this service is offered at. For courses only: Currently, only 1 location is supported."
        },
        {
          "name": "mainSlug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Slug"
            }
          ],
          "doc": "The main slug for the service. `mainSlug` is either taken from the current service name or is a custom slug set by the business owner.\n`mainSlug` is used to construct the service's URLs."
        },
        {
          "name": "media",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Media"
            }
          ],
          "doc": "Media associated with the service."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service name."
        },
        {
          "name": "onlineBooking",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.OnlineBooking"
            }
          ],
          "doc": "Online booking settings."
        },
        {
          "name": "payment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Payment"
            }
          ],
          "doc": "Payment options for booking the service."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the service is updated. To prevent conflicting changes, the existing revision must be used when updating a service."
        },
        {
          "name": "schedule",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Schedule"
            }
          ],
          "doc": "The service's schedule, which can be used to manage the service's sessions."
        },
        {
          "name": "seoData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.SeoSchema"
            }
          ],
          "doc": "Custom SEO data for the service."
        },
        {
          "name": "sortOrder",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Order of a service within a category."
        },
        {
          "name": "staffMembersIds",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of the staff members providing the service. For appointments only."
        },
        {
          "name": "supportedSlugs",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-bookings-v2.Services.Slug"
                  }
                ]
              }
            }
          ],
          "doc": "A slug is the last part of the URL address that serves as a unique identifier of the service.\nThe list of supported slugs includes past service names for backwards compatibility, and a custom slug if one was set by the business owner."
        },
        {
          "name": "tagLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Short service description, Such as `Hair styling`"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Service type."
        },
        {
          "name": "urls",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.URLs"
            }
          ],
          "doc": "The URLs to various service-related pages, such as the calendar page and the booking page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateServiceOptions",
      "members": [
        {
          "name": "mask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Explicit list of fields to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateServiceRequest",
      "members": [
        {
          "name": "mask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Explicit list of fields to update."
        },
        {
          "name": "service",
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "Service to update. [Partial updates](https:\\\\example.com) are supported."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateServiceResponse",
      "members": [
        {
          "name": "service",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Service"
            }
          ],
          "doc": "The updated service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "V2Category",
      "members": [
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "name",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "sortOrder",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Order of a category within a category list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidateSlugRequest",
      "members": [
        {
          "name": "slugName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The custom name to validate as a slug for the service."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidateSlugResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "If the slug is invalid, this field is populated with the reasons why the slug is invalid. Validation errors may include `SLUG_IS_TOO_LONG`, `SLUG_CONTAIN_ILLEGAL_CHARACTERS`, and `SLUG_ALREADY_EXISTS`."
        },
        {
          "name": "slugName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The requested custom slug name to validate. If valid, the slug name can be set as a slug for the service and is populated with the requested slug. Otherwise, `slugName` is empty."
        },
        {
          "name": "valid",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested slug name is valid."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VariedPayment",
      "members": [
        {
          "name": "defaultPrice",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The default price for the service without any variants. It will also be used as the default price for any new variant."
        },
        {
          "name": "deposit",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The deposit price required to book the service. Required when `rateType` is `VARIED` and `paymentOptions.deposit` is `true`."
        },
        {
          "name": "maxPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The maximum price a customer may pay for this service, based on its variants."
        },
        {
          "name": "minPrice",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-bookings-v2.Services.Money"
            }
          ],
          "doc": "The minimal price a customer may pay for this service, based on its variants."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "WaitlistPolicy",
      "members": [
        {
          "name": "capacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of spots available in the waitlist. Defaults to 10 spots."
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "`true` if the entity has a waitlist, otherwise `false`."
        },
        {
          "name": "reservationTimeInMinutes",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount of time a participant is given to book, once notified that a spot is available. Defaults to 10 minutes."
        }
      ],
      "docs": {
        "description": [
          "This object specifies the policy for the waitlist. By default `enabled` is set to false\n(indicating that waitlisting is disabled), and both `capacity` and `reservation_time_in_minutes` are set to 10."
        ]
      }
    }
  ]
}
