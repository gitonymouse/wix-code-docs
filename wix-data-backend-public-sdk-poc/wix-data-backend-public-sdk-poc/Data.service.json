{
  "name": "Data",
  "memberOf": "wix-data-backend-public-sdk-poc",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-data-backend-public-sdk-poc-data_service",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "aggregate",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.AggregateOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.AggregationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "This function is not a universal function and runs only on the backend.",
        "description": [],
        "examples": [
          {
            "title": "aggregate example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function aggregate(options) {",
              "   try {",
              "     const result = await data.aggregate(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "aggregate",
      "isAdminMethod": true
    },
    {
      "name": "bulkInsert",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkInsertOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.items"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkInsertResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adds multiple items to a collection.",
        "description": [
          "When each item is inserted into a collection, the following properties and values are added to it:\n* `_id`: A unique identifier for an item in a collection. You can optionally provide your own ID when inserting the item. If you specify an ID that already exists in the collection, the insertion will fail.\n* `_createdDate`: The date the item was added to the collection.\n* `_updatedDate`: The date the item was last modified. When the item is first inserted, `_createdDate` and `_updatedDate` have the same value.\n\nThe endpoint returns a list of the IDs of items successfully inserted in `insertedItemIds`.\nWhen any items can't be inserted, error details are provided for each failed item in `errors`.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkInsert example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkInsert(options) {",
              "   try {",
              "     const result = await data.bulkInsert(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkInsert",
      "isAdminMethod": true
    },
    {
      "name": "bulkInsertReferences",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkInsertReferencesOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.references",
        "options.references.propertyName",
        "options.references.referencedItemId",
        "options.references.referringItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Inserts one or more references in the specified properties of items in a collection.",
        "description": [
          "The Bulk Insert References endpoint adds one or more references to a collection.\nEach new reference in the `references` field specifies a referring item's ID, the property in which to insert the reference, and the ID of the referenced item.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkInsertReferences example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkInsertReferences(options) {",
              "   try {",
              "     const result = await data.bulkInsertReferences(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkInsertReferences",
      "isAdminMethod": true
    },
    {
      "name": "bulkRemove",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkRemoveOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkRemoveResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Removes multiple items from a collection.",
        "description": [
          "If any items in other collections reference the removed items in reference or multi-reference fields, the fields are cleared.\n\nThe endpoint returns a list of the IDs of items successfully removed in `removedItemIds`.\nWhen any items can't be removed, error details are provided for each failed item in `errors`.\n\n**Note:** Once an item has been removed from a collection, it can't be restored.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkRemove example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkRemove(options) {",
              "   try {",
              "     const result = await data.bulkRemove(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkRemove",
      "isAdminMethod": true
    },
    {
      "name": "bulkRemoveReferences",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkRemoveReferencesOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.references",
        "options.references.propertyName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Removes one or more references.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkRemoveReferences example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkRemoveReferences(options) {",
              "   try {",
              "     const result = await data.bulkRemoveReferences(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkRemoveReferences",
      "isAdminMethod": true
    },
    {
      "name": "bulkReplaceReferences",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkReplaceReferencesOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.propertyName",
        "options.referringItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Replaces references in a specified property of a specified data item.",
        "description": [
          "The Bulk Replace References endpoint replaces the existing reference or references contained in the property specified in `propertyName` within the data item specified in `referringItemId`.\nThe endpoint removes existing references and in their place it adds references to the items specified in `newReferencedItemIds`.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkReplaceReferences example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkReplaceReferences(options) {",
              "   try {",
              "     const result = await data.bulkReplaceReferences(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkReplaceReferences",
      "isAdminMethod": true
    },
    {
      "name": "bulkSave",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkSaveOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.items"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkSaveResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Inserts or updates multiple items in a collection.",
        "description": [
          "The Bulk Save Data Items endpoint inserts or updates each item, depending on whether it already exists in the collection. For each item:\n\n* If you don't provide an ID, a new item is created.\n\n* If you provide an ID that doesn't exist in the collection, a new item is created with that ID.\n\n* If an item with the ID you provide already exists in the collection, that item is updated. When an item is updated, its `_updatedDate` property is changed to the current date.\n\nThe endpoint returns a list of the IDs of items successfully inserted in `insertedItemIds` and a list of the IDs of items successfully updated in `updatedItemIds`.\nWhen any items can't be inserted or updated, error details are provided for each failed item in `errors`.\n\n***Note:*** When you provide an item with an ID that already exists in the collection, the item you provide completely replaces the existing item with that ID.\nThis means that all of the item's previous properties and values are lost.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkSave example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkSave(options) {",
              "   try {",
              "     const result = await data.bulkSave(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkSave",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdate",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkUpdateOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.items"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkUpdateResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates multiple items in a collection.",
        "description": [
          "Each item in the request must include an ID. If an item is found in the specified collection with\nthe same ID, that item is updated. If the collection doesn't contain an item with that ID, the update fails.\n\nWhen an item is updated, its `_updatedDate` property is changed to the current date.\n\nThe endpoint returns a list of the IDs of items successfully updated in `updatedItemIds`.\nWhen any items can't be inserted, error details are provided for each failed item in `errors`.\n\n**Note:**\nAfter each item is updated, it only contains the properties included in the Update Data Item request. If the existing item has properties with values and those properties\naren't included in the updated item, their values are lost.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkUpdate example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function bulkUpdate(options) {",
              "   try {",
              "     const result = await data.bulkUpdate(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdate",
      "isAdminMethod": true
    },
    {
      "name": "count",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.CountOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.CountResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns the number of items in a collection that match a query.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "count example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function count(options) {",
              "   try {",
              "     const result = await data.count(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "count",
      "isAdminMethod": true
    },
    {
      "name": "distinct",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.DistinctOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.propertyName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.DistinctResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of distinct values for a given property in all items that match a query, without duplicates.",
        "description": [
          "As with the [Query Data Items]() endpoint, this endpoint retrieves items based on the filtering, sorting, and paging preferences you provide.\nHowever, the Query Distinct Values endpoint doesn't return all of the full items that match the query.\nRather, it returns all unique values of the property you specify in `propertyName` for items that match the query.\nIf more than one item has the same value for that property, that value appears only once.\n\nFor more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "distinct example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function distinct(options) {",
              "   try {",
              "     const result = await data.distinct(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "distinct",
      "isAdminMethod": true
    },
    {
      "name": "get",
      "params": [
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item to retrieve.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.GetOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "itemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.GetResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves an item from a collection.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "get example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function get(itemId, options) {",
              "   try {",
              "     const result = await data.get(itemId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "get",
      "isAdminMethod": true
    },
    {
      "name": "insert",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.InsertOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.InsertResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adds an item to a collection.",
        "description": [
          "When an item is inserted into a collection, the following properties and values are added to it:\n* `_id`: A unique identifier for an item in a collection. You can optionally provide your own ID when inserting the item. If you specify an ID that already exists in the collection, the insertion will fail.\n* `_createdDate`: The date the item was added to the collection.\n* `_updatedDate`: The date the item was last modified. When the item is first inserted, `_createdDate` and `_updatedDate` have the same value.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "insert example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function insert(options) {",
              "   try {",
              "     const result = await data.insert(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "insert",
      "isAdminMethod": true
    },
    {
      "name": "isReferenced",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.IsReferencedOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.propertyName",
        "options.referencedItemId",
        "options.referringItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.IsReferencedResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Checks if a specific property of a referring item contains a reference to another specific item.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "isReferenced example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function isReferenced(options) {",
              "   try {",
              "     const result = await data.isReferenced(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "isReferenced",
      "isAdminMethod": true
    },
    {
      "name": "query",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of items, on the basis of the filtering, sorting, and paging preferences you provide.",
        "description": [
          "For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "query example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function query(options) {",
              "   try {",
              "     const result = await data.query(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "query",
      "isAdminMethod": true
    },
    {
      "name": "queryReferenced",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryReferencedOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.propertyName",
        "options.referringItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryReferencedResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets the full items referenced in the specified property of an item.",
        "description": [
          "For example, suppose you have a **Movies** collection with an **Actors** field that contains references to items in a **People** collection.\nQuerying the **Movies** collection using the Query Referenced Data Items endpoint returns the relevant **People** items referenced in the **Actors** field of the specified **Movie** item.\nThis gives you information from the **People** collection about each of the actors in the specified movie.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "queryReferenced example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function queryReferenced(options) {",
              "   try {",
              "     const result = await data.queryReferenced(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryReferenced",
      "isAdminMethod": true
    },
    {
      "name": "remove",
      "params": [
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item to remove.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.RemoveOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "itemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.RemoveResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Removes an item from a collection.",
        "description": [
          "If any items in other collections reference the removed item in a reference or multi-reference field, the field is cleared.\n\n**Note:**\nOnce an item has been removed from a collection, it can't be restored.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "remove example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function remove(itemId, options) {",
              "   try {",
              "     const result = await data.remove(itemId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "remove",
      "isAdminMethod": true
    },
    {
      "name": "save",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.SaveOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.SaveResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Inserts or updates an item in a collection.",
        "description": [
          "The Save Data Item endpoint inserts or updates the specified item, depending on whether it already exists in the collection.\n\n* If you don't provide an ID, a new item is created.\n\n* If you provide an ID that doesn't exist in the collection, a new item is created with that ID.\n\n* If an item with the ID you provide already exists in the collection, that item is updated. When an item is updated, its `_updatedDate` property is changed to the current date.\n\n***Note:*** When you provide an item with an ID that already exists in the collection, the item you provide completely replaces the existing item with that ID.\nThis means that all of the item's previous properties and values are lost.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "save example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function save(options) {",
              "   try {",
              "     const result = await data.save(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "save",
      "isAdminMethod": true
    },
    {
      "name": "truncate",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.TruncateOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Removes all items from a collection. Site owner (`ADMIN`) permissions are required in order to invoke this operation.",
        "description": [
          "If any items in other collections reference the removed items in reference or multi-reference fields, those fields are cleared.\n\n**Note:**\nOnce items have been removed from a collection, they can't be restored.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "truncate example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function truncate(options) {",
              "   try {",
              "     const result = await data.truncate(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "truncate",
      "isAdminMethod": true
    },
    {
      "name": "update",
      "params": [
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Optional explicit ID of the item to be updated. If the ID is provided here, it doesn't need to be provided in the `item` body parameter.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.UpdateOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "itemId",
        "options.item"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-data-backend-public-sdk-poc.Data.UpdateResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates an item in a collection.",
        "description": [
          "An item ID must be submitted as part of the request, either as a path parameter or within the `item` body parameter. If an item is found in the specified collection with\nthe same ID, that item is updated. If the collection doesn't contain an item with that ID, the request fails.\n\nWhen an item is updated, its `_updatedDate` property is changed to the current date.\n\n**Note:**\nAfter an item is updated, it only contains the properties included in the Update Data Item request. If the existing item has properties with values and those properties\naren't included in the updated item, their values are lost.\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "update example",
            "body": [
              "import { data } from 'wix-data-backend-public-sdk-poc';",
              "  ",
              " async function update(itemId, options) {",
              "   try {",
              "     const result = await data.update(itemId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "update",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "AggregateOptions",
      "members": [
        {
          "name": "aggregation",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Object defining the steps of the aggregation to be This is an object defining aggregation itself.\n\n* Grouping rule is defined as _id field. It takes a form of:\n{\n\"_id\": \"$field\"\n}\n\nIf multiple fields are used for grouping, Group takes a form of:\n{\n\"_id\": {\n\"field1\": \"$field1\"\n\"field2\": \"$field2\"\n}\n}\n\n* Aggregation functions are defined as special field definitions.\n\nAverage:\n{\n\"_id\": \"$field\"\n\"my_avg\": {\n\"$avg\": \"$other_field\"\n}\n}\n\nMax:\n{\n\"_id\": \"$field\"\n\"my_max\": {\n\"$max\": \"$other_field\"\n}\n}\n\nMin:\n{\n\"_id\": \"$field\"\n\"my_min\": {\n\"$min\": \"$other_field\"\n}\n}\n\nSum:\n{\n\"_id\": \"$field\"\n\"my_sum\": {\n\"$sum\": \"$other_field\"\n}\n}\n"
        },
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection on which to run the aggregation."
        },
        {
          "name": "finalFilter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter applied to the processed data following the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object."
        },
        {
          "name": "initialFilter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter applied to the collection's data prior to running the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging preferences."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting preferences."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AggregationRequest",
      "members": [
        {
          "name": "aggregation",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Object defining the steps of the aggregation to be This is an object defining aggregation itself.\n\n* Grouping rule is defined as _id field. It takes a form of:\n{\n\"_id\": \"$field\"\n}\n\nIf multiple fields are used for grouping, Group takes a form of:\n{\n\"_id\": {\n\"field1\": \"$field1\"\n\"field2\": \"$field2\"\n}\n}\n\n* Aggregation functions are defined as special field definitions.\n\nAverage:\n{\n\"_id\": \"$field\"\n\"my_avg\": {\n\"$avg\": \"$other_field\"\n}\n}\n\nMax:\n{\n\"_id\": \"$field\"\n\"my_max\": {\n\"$max\": \"$other_field\"\n}\n}\n\nMin:\n{\n\"_id\": \"$field\"\n\"my_min\": {\n\"$min\": \"$other_field\"\n}\n}\n\nSum:\n{\n\"_id\": \"$field\"\n\"my_sum\": {\n\"$sum\": \"$other_field\"\n}\n}\n"
        },
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection on which to run the aggregation."
        },
        {
          "name": "finalFilter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter applied to the processed data following the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object."
        },
        {
          "name": "initialFilter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter applied to the collection's data prior to running the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging preferences."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting preferences."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AggregationResponse",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Aggregation results."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.PagingMetadataV2"
            }
          ],
          "doc": "Paging information."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Error data."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error description."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkError",
      "members": [
        {
          "name": "details",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Details"
            }
          ],
          "doc": "Error details."
        },
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item that couldn't be inserted."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error message."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the failed item in the `items` paramater of the request."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert the items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertReferencesOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "references",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Reference"
                  }
                ]
              }
            }
          ],
          "doc": "References to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertReferencesRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "references",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Reference"
                  }
                ]
              }
            }
          ],
          "doc": "References to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertReferencesResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert the items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInsertResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkError"
                  }
                ]
              }
            }
          ],
          "doc": "Error details for items that couldn't be inserted."
        },
        {
          "name": "insertedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items inserted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkPatchRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection"
        },
        {
          "name": "entries",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Entry"
                  }
                ]
              }
            }
          ],
          "doc": "List of items and their patches"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkPatchResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkError"
                  }
                ]
              }
            }
          ],
          "doc": "Errors"
        },
        {
          "name": "patchedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Patched item ids"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to remove the items."
        },
        {
          "name": "entries",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkRemoveRequestEntry"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items to remove."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveReferencesOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "references",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Reference"
                  }
                ]
              }
            }
          ],
          "doc": "References to be removed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveReferencesRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "references",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Reference"
                  }
                ]
              }
            }
          ],
          "doc": "References to be removed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveReferencesResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to remove the items."
        },
        {
          "name": "entries",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkRemoveRequestEntry"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items to remove."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveRequestEntry",
      "members": [
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of item to remove."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRemoveResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkError"
                  }
                ]
              }
            }
          ],
          "doc": "Errors for items that couldn't be removed."
        },
        {
          "name": "removedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items removed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkReplaceReferencesOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "newReferencedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of new referenced item IDs to replace the existing ones."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property containing the references to the referenced items."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkReplaceReferencesRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "newReferencedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of new referenced item IDs to replace the existing ones."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property containing the references to the referenced items."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkReplaceReferencesResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSaveOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert or update the items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to insert or update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSaveRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert or update the items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to insert or update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSaveResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkError"
                  }
                ]
              }
            }
          ],
          "doc": "Errors for items that couldn't be inserted or updated."
        },
        {
          "name": "insertedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items inserted."
        },
        {
          "name": "updatedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items updated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to update items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to update items."
        },
        {
          "name": "items",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Items to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.BulkError"
                  }
                ]
              }
            }
          ],
          "doc": "Errors for items that couldn't be updated."
        },
        {
          "name": "updatedItemIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of items updated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection for which to count query results."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter preferences defining the query. For more information on how to structure a filter object, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection for which to count query results."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter preferences defining the query. For more information on how to structure a filter object, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountResponse",
      "members": [
        {
          "name": "totalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Count of items matching the query."
        },
        {
          "name": "totalResults",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated.** Refer to `totalCount` instead."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Details",
      "members": [
        {
          "name": "applicationError",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.ApplicationError"
            }
          ],
          "doc": "Application error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DistinctOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to query."
        },
        {
          "name": "dataQuery",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryV2"
            }
          ],
          "doc": "Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property name for which to return all distinct values."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DistinctRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to query."
        },
        {
          "name": "dataQuery",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryV2"
            }
          ],
          "doc": "Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property name for which to return all distinct values."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DistinctResponse",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "any"
                  }
                ]
              }
            }
          ],
          "doc": "List of distinct values contained in the property specified in `propertyName`."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.PagingMetadataV2"
            }
          ],
          "doc": "Paging information."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Entry",
      "members": [
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "item id to patch"
        },
        {
          "name": "patch",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Patch data"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to retrieve the item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to retrieve the item."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Retrieved item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InsertOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert the item."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InsertRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert the item."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to insert."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InsertResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Inserted item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IsReferencedOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property that may contain a reference to the specified item."
        },
        {
          "name": "referencedItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item that may be referenced."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IsReferencedRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property that may contain a reference to the specified item."
        },
        {
          "name": "referencedItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item that may be referenced."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IsReferencedResponse",
      "members": [
        {
          "name": "isReferenced",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the specified property of the referring item contains a reference to the specified referenced item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Item",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Options",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PatchRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection"
        },
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "item id to patch"
        },
        {
          "name": "patch",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Patch data"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PatchResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Patched item"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PatchWhereRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "filter items to patch"
        },
        {
          "name": "patch",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Patch data"
        },
        {
          "name": "segment",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Data segment"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PatchWhereResponse",
      "members": [
        {
          "name": "totalAffectedValues",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "totalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of patched items"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to query."
        },
        {
          "name": "dataQuery",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryV2"
            }
          ],
          "doc": "Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)."
        },
        {
          "name": "includeReferencedItems",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Properties for which to include referenced items in the query's results.\nUp to 50 referenced items can be included for each item that matches the query.\nIf more than 50 items are referenced, `partialIncludes` in the response is `true`."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryReferencedOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging preferences."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property containing the references to the referenced items."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryReferencedRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the referring item."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging preferences."
        },
        {
          "name": "propertyName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property containing the references to the referenced items."
        },
        {
          "name": "referringItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryReferencedResponse",
      "members": [
        {
          "name": "entities",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.ReferencedEntity"
                  }
                ]
              }
            }
          ],
          "doc": "List of referenced items and/or IDs. For successfully resolved references, the referenced data item appears. For references that can't be resolved, the ID appears."
        },
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Deprecated.** Refer to `entities` instead. List of referenced items."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.PagingMetadataV2"
            }
          ],
          "doc": "Paging information."
        },
        {
          "name": "totalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated**. Refer to 'pagingMetadata' instead. Total number of referenced items satisfying the query."
        },
        {
          "name": "totalResults",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated**. Refer to 'pagingMetadata' instead. Total number of referenced items satisfying the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to query."
        },
        {
          "name": "dataQuery",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.QueryV2"
            }
          ],
          "doc": "Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)."
        },
        {
          "name": "includeReferencedItems",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Properties for which to include referenced items in the query's results.\nUp to 50 referenced items can be included for each item that matches the query.\nIf more than 50 items are referenced, `partialIncludes` in the response is `true`."
        },
        {
          "name": "omitTotalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to omit the total count in the response.\nWhen `true`, the `pagingMetadata` object in the response doesn't contain a `total` field.\n\nDefault: `false`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryResponse",
      "members": [
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved items."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.PagingMetadataV2"
            }
          ],
          "doc": "Paging information."
        },
        {
          "name": "partialIncludes",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether referenced items are trimmed from the results. This occurs when there are more than 50 referenced items."
        },
        {
          "name": "totalCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated.** Refer to 'pagingMetadata' instead. Total number of items satisfying the query."
        },
        {
          "name": "totalResults",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Deprecated.** Refer to 'pagingMetadata' instead. Total number of items satisfying the query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-data-backend-public-sdk-poc.Data.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-data-backend-public-sdk-poc.Data.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReadOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Reference",
      "members": [
        {
          "name": "propertyName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Property containing the references to the referenced items."
        },
        {
          "name": "referencedItemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referenced item."
        },
        {
          "name": "referringItemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the referring item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReferencedEntity",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data item referenced."
        },
        {
          "name": "referenceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unresolved ID. Appears instead of the data item when the reference doesn't resolve. For example, when an ID isn't found or if an item is in draft state."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfReferencedEntityEntityOneOf",
            "members": [
              "item",
              "referenceId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReferencedEntityEntityOneOf",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data item referenced."
        },
        {
          "name": "referenceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unresolved ID. Appears instead of the data item when the reference doesn't resolve. For example, when an ID isn't found or if an item is in draft state."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to remove the item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection from which to remove the item."
        },
        {
          "name": "itemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item to remove."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RemoveResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Removed item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RestoreFromTrashBinRequest",
      "members": [
        {
          "name": "collectionName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated, use dataCollectionId instead.\nCollection name"
        },
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection"
        },
        {
          "name": "itemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RestoreFromTrashBinResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert or update the item."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to insert or update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection in which to insert or update the item."
        },
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to insert or update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Inserted or updated item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TruncateOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to truncate."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TruncateRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection to truncate."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TruncateResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the existing item."
        },
        {
          "name": "item",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to update. The existing item is replaced with this version."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the collection containing the existing item."
        },
        {
          "name": "item",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Item to update. The existing item is replaced with this version."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateResponse",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Updated item"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
