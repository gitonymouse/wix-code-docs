{
  "name": "Subscription",
  "memberOf": "wix-comments-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-comments-backend-comments_subscription",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getSubscription",
      "params": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity for which to get subscription status",
          "required": true
        }
      ],
      "requiredFields": [
        "subscription"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-comments-backend.Subscription.GetSubscriptionResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets subscription and its status",
        "description": [],
        "examples": [
          {
            "title": "getSubscription example",
            "body": [
              "import { subscription } from 'wix-comments-backend';",
              "  ",
              " async function getSubscription(subscription) {",
              "   try {",
              "     const result = await subscription.getSubscription(subscription);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getSubscription"
    },
    {
      "name": "listSubscriptions",
      "params": [
        {
          "name": "subscriptions",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
                  }
                ]
              }
            }
          ],
          "doc": "Comments subscriptions for which to get subscription statuses",
          "required": true
        }
      ],
      "requiredFields": [
        "subscriptions"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-comments-backend.Subscription.ListSubscriptionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "List of subscriptions with their status",
        "description": [],
        "examples": [
          {
            "title": "listSubscriptions example",
            "body": [
              "import { subscription } from 'wix-comments-backend';",
              "  ",
              " async function listSubscriptions(subscriptions) {",
              "   try {",
              "     const result = await subscription.listSubscriptions(subscriptions);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listSubscriptions"
    },
    {
      "name": "subscribe",
      "params": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity to which the user has to be subscribed to",
          "required": true
        }
      ],
      "requiredFields": [
        "subscription"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Subscribes user to specified entity topic",
        "description": [],
        "examples": [
          {
            "title": "subscribe example",
            "body": [
              "import { subscription } from 'wix-comments-backend';",
              "  ",
              " async function subscribe(subscription) {",
              "   try {",
              "     const result = await subscription.subscribe(subscription);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "subscribe"
    },
    {
      "name": "unsubscribe",
      "params": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity from which the user is unsubscribing",
          "required": true
        }
      ],
      "requiredFields": [
        "subscription"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Unsubscribes user from specified entity topic",
        "description": [],
        "examples": [
          {
            "title": "unsubscribe example",
            "body": [
              "import { subscription } from 'wix-comments-backend';",
              "  ",
              " async function unsubscribe(subscription) {",
              "   try {",
              "     const result = await subscription.unsubscribe(subscription);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "unsubscribe"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CommentData",
      "members": [
        {
          "name": "commentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "contextId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "resourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "Context Id, resource Id and comment Id, to which subscriptions are attached to"
        ]
      }
    },
    {
      "name": "CommentsSubscription",
      "members": [
        {
          "name": "comment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentData"
            }
          ],
          "doc": ""
        },
        {
          "name": "resource",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ResourceData"
            }
          ],
          "doc": ""
        },
        {
          "name": "subscriptionStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Subscription status. Read-only field"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCommentsSubscriptionSubscriptionTypeOneOf",
            "members": [
              "comment",
              "resource"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "CommentsSubscription is the main entity for Comments subscriptions service"
        ]
      }
    },
    {
      "name": "CommentsSubscriptionSubscriptionTypeOneOf",
      "members": [
        {
          "name": "comment",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentData"
            }
          ],
          "doc": ""
        },
        {
          "name": "resource",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ResourceData"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSubscriptionRequest",
      "members": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity for which to get subscription status"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSubscriptionResponse",
      "members": [
        {
          "name": "subscription",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Comments subscription with subscription status data"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListSubscriptionsRequest",
      "members": [
        {
          "name": "subscriptions",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
                  }
                ]
              }
            }
          ],
          "doc": "Comments subscriptions for which to get subscription statuses"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListSubscriptionsResponse",
      "members": [
        {
          "name": "subscriptions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
                  }
                ]
              }
            }
          ],
          "doc": "Comments subscriptions with subscription statuses attached"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ResourceData",
      "members": [
        {
          "name": "contextId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "resourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          "ContextId and resource Id, to which subscriptions are attached to"
        ]
      }
    },
    {
      "name": "SubscribeRequest",
      "members": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity to which the user has to be subscribed to"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SubscribeResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnsubscribeRequest",
      "members": [
        {
          "name": "subscription",
          "type": [
            {
              "referenceType": "wix-comments-backend.Subscription.CommentsSubscription"
            }
          ],
          "doc": "Entity from which the user is unsubscribing"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnsubscribeResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
