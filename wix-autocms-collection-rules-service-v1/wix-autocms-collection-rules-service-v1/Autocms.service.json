{
  "name": "Autocms",
  "memberOf": "wix-autocms-collection-rules-service-v1",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-autocms-collection-rules-service-v1-collection_rules",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getCollectionRules",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.GetCollectionRulesOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.GetCollectionRulesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get collection rules by collection id\nNOTE if requested collection doesn't exists it returns empty rules instance",
        "description": [],
        "examples": [
          {
            "title": "getCollectionRules example",
            "body": [
              "import { autocms } from 'wix-autocms-collection-rules-service-v1';",
              "  ",
              " async function getCollectionRules(options) {",
              "   try {",
              "     const result = await autocms.getCollectionRules(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "listCollectionRules",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ListCollectionRulesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get all non-empty collection rules for current tenant",
        "description": [],
        "examples": [
          {
            "title": "listCollectionRules example",
            "body": [
              "import { autocms } from 'wix-autocms-collection-rules-service-v1';",
              "  ",
              " async function listCollectionRules(options) {",
              "   try {",
              "     const result = await autocms.listCollectionRules(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "saveCollectionRules",
      "params": [
        {
          "name": "rules",
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
            }
          ],
          "doc": "CollectionRules contains validation/initialization rules for certain collection/environment\nEnvironment would be dropped when gridappless schemas go live",
          "required": true
        }
      ],
      "requiredFields": [
        "rules"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.SaveCollectionRulesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates collection rules",
        "description": [],
        "examples": [
          {
            "title": "saveCollectionRules example",
            "body": [
              "import { autocms } from 'wix-autocms-collection-rules-service-v1';",
              "  ",
              " async function saveCollectionRules(rules, options) {",
              "   try {",
              "     const result = await autocms.saveCollectionRules(rules, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "validate",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ValidateOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ValidateResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Validates data items and returns list of failed rules\nNOTE if collection doesn't exist all data is treated as valid",
        "description": [],
        "examples": [
          {
            "title": "validate example",
            "body": [
              "import { autocms } from 'wix-autocms-collection-rules-service-v1';",
              "  ",
              " async function validate(options) {",
              "   try {",
              "     const result = await autocms.validate(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CollectionRules",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "collection ID (previously collection name)"
        },
        {
          "name": "defaultValues",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.DefaultValue"
                  }
                ]
              }
            }
          ],
          "doc": "field default values"
        },
        {
          "name": "environment",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "environment"
        },
        {
          "name": "rules",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.Rule"
                  }
                ]
              }
            }
          ],
          "doc": "rules"
        }
      ],
      "docs": {
        "description": [
          "CollectionRules contains validation/initialization rules for certain collection/environment\nEnvironment would be dropped when gridappless schemas go live"
        ]
      }
    },
    {
      "name": "CollectionSchemaMismatchErrorData",
      "members": [
        {
          "name": "rules",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DefaultValue",
      "members": [
        {
          "name": "defaultValue",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "default value"
        },
        {
          "name": "field",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "field key"
        },
        {
          "name": "incompatible",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "disabled automatically if schema was changed and field was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCollectionRulesOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "collection ID to get rules for"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCollectionRulesRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "collection ID to get rules for"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCollectionRulesResponse",
      "members": [
        {
          "name": "rules",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCollectionRulesOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCollectionRulesRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListCollectionRulesResponse",
      "members": [
        {
          "name": "rules",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Rule",
      "members": [
        {
          "name": "field",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "field key this rule applies to"
        },
        {
          "name": "incompatible",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "rule may be disabled automatically if schema was changed and rule is no more compatible with it\ni.e. field was deleted or it's type was changed"
        },
        {
          "name": "queryFilter",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Query filter that passes for valid values"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "rule type"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveCollectionRulesOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveCollectionRulesRequest",
      "members": [
        {
          "name": "rules",
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SaveCollectionRulesResponse",
      "members": [
        {
          "name": "rules",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.CollectionRules"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SchemaChange",
      "members": [
        {
          "name": "afterChangeJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "schema after change"
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "beforeChangeJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "schema before change if any, TBD use proper message type instead of JSON string"
        },
        {
          "name": "changeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'CREATED'`\n- `'REMOVED'`\n- `'RESTORED'`\n- `'UPDATED'`"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "schemaId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "source",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'EDITOR'`\n- `'LIVE'`"
        },
        {
          "name": "uid",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidateOptions",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "collection ID"
        },
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "data items to validate"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidateRequest",
      "members": [
        {
          "name": "dataCollectionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "collection ID"
        },
        {
          "name": "items",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "Record"
                  }
                ]
              }
            }
          ],
          "doc": "data items to validate"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidateResponse",
      "members": [
        {
          "name": "validationResults",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ValidationResult"
                  }
                ]
              }
            }
          ],
          "doc": "validation results of items in same order"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidationFailure",
      "members": [
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "validation message"
        },
        {
          "name": "rule",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.Rule"
            }
          ],
          "doc": "failed rule"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValidationResult",
      "members": [
        {
          "name": "failures",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-autocms-collection-rules-service-v1.Autocms.ValidationFailure"
                  }
                ]
              }
            }
          ],
          "doc": "validation failures, empty if item is valid"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
