{
  "name": "Entitlements",
  "memberOf": "wix-entitlements-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-entitlements-backend-entitlement",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "cancelEntitlementReservation",
      "params": [
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request",
          "required": true
        }
      ],
      "requiredFields": [
        "transactionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.CancelEntitlementReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Performed as two-part redemption",
        "description": [],
        "examples": [
          {
            "title": "cancelEntitlementReservation example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function cancelEntitlementReservation(transactionId) {",
              "   try {",
              "     const result = await entitlements.cancelEntitlementReservation(transactionId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "checkEntitlementEligibility",
      "params": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement to check eligibility for",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CheckEntitlementEligibilityOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "entitlementId",
        "options",
        "options.resourceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.CheckEntitlementEligibilityResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Performed as part of redemption, but can be called on its own",
        "description": [],
        "examples": [
          {
            "title": "checkEntitlementEligibility example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function checkEntitlementEligibility(entitlementId, options) {",
              "   try {",
              "     const result = await entitlements.checkEntitlementEligibility(entitlementId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "createEntitlement",
      "params": [
        {
          "name": "entitlement",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement to be created",
          "required": true
        }
      ],
      "requiredFields": [
        "entitlement"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                }
              ]
            }
          }
        ],
        "doc": "The created Entitlement\n"
      },
      "docs": {
        "summary": "Creates a new Entitlement",
        "description": [],
        "examples": [
          {
            "title": "createEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function createEntitlement(entitlement) {",
              "   try {",
              "     const result = await entitlements.createEntitlement(entitlement);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "deleteEntitlement",
      "params": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Entitlement to delete",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.DeleteEntitlementOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "entitlementId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete an Entitlement",
        "description": [],
        "examples": [
          {
            "title": "deleteEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function deleteEntitlement(entitlementId, options) {",
              "   try {",
              "     const result = await entitlements.deleteEntitlement(entitlementId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "endEntitlement",
      "params": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements",
          "required": true
        }
      ],
      "requiredFields": [
        "packageId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.EndEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Ends the entitlements in the provided package. If the package contains service type entitlements, the services will be paused.",
        "description": [],
        "examples": [
          {
            "title": "endEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function endEntitlement(packageId) {",
              "   try {",
              "     const result = await entitlements.endEntitlement(packageId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "getEligibleEntitlements",
      "params": [
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource for which all eligible entitlements will be returned",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.GetEligibleEntitlementsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "resourceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.GetEligibleEntitlementsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Performed as part of redemption, but can be called on its own",
        "description": [],
        "examples": [
          {
            "title": "getEligibleEntitlements example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function getEligibleEntitlements(resourceId, options) {",
              "   try {",
              "     const result = await entitlements.getEligibleEntitlements(resourceId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "getEntitlement",
      "params": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Entitlement to retrieve",
          "required": true
        }
      ],
      "requiredFields": [
        "entitlementId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved Entitlement\n"
      },
      "docs": {
        "summary": "Get an Entitlement by id",
        "description": [],
        "examples": [
          {
            "title": "getEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function getEntitlement(entitlementId) {",
              "   try {",
              "     const result = await entitlements.getEntitlement(entitlementId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "grantEntitlement",
      "params": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements to grant. Package id should be the same that was used to provision entitlements.",
          "required": true
        }
      ],
      "requiredFields": [
        "packageId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.GrantEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Grants the entitlements as defined in the entitlement template configuration.\nTypically used if the entitlement is cyclical to renew the credit pool on new cycle",
        "description": [],
        "examples": [
          {
            "title": "grantEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function grantEntitlement(packageId) {",
              "   try {",
              "     const result = await entitlements.grantEntitlement(packageId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "pauseEntitlement",
      "params": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements",
          "required": true
        }
      ],
      "requiredFields": [
        "packageId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.PauseEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Pauses the entitlements in the provided package. If the package contains service type entitlements, the services will be paused.",
        "description": [],
        "examples": [
          {
            "title": "pauseEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function pauseEntitlement(packageId) {",
              "   try {",
              "     const result = await entitlements.pauseEntitlement(packageId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "provisionEntitlements",
      "params": [
        {
          "name": "templateReference",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntitlementTemplateReference"
            }
          ],
          "doc": "Reference of the template that is used to provision the entitlements",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ProvisionEntitlementsOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "options",
        "options.beneficiary",
        "options.packageId",
        "templateReference"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Provision entitlements from an individual template or a package of templates",
        "description": [],
        "examples": [
          {
            "title": "provisionEntitlements example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function provisionEntitlements(templateReference, options) {",
              "   try {",
              "     const result = await entitlements.provisionEntitlements(templateReference, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "queryEntitlements",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Query Entitlements using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)",
        "description": [
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`id`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`revision`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`createdDate`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`updatedDate`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`templateId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`templatePackageId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`packageId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`status`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary.anonymousVisitorId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary.memberId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary.wixUserId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary.appId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`beneficiary.contactId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources`|[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.id`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.name`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.price`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression.operatorNotOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression.operatorAndOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression.operatorOrOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression.policyOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorNotOptions.expression.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions`|[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions.operatorNotOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions.operatorAndOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions.operatorOrOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions.policyOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorAndOptions.expressions.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions`|[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions.operatorNotOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions.operatorAndOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions.operatorOrOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions.policyOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.operatorOrOptions.expressions.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.fromWeekDay`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.toWeekDay`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.fromHour`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.toHour`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.fromMinute`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.fixedIntervalOptions.toMinute`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.fromWeekDay`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.toWeekDay`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.fromHour`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.toHour`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.fromMinute`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.fixedIntervalOptions.toMinute`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.times`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`lt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#lt),[`le()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#le),[`gt()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#gt),[`ge()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ge),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.rateLimitedOptions.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.customOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.customOptions.id`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.customOptions.appDefId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.customOptions.additionalData`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.policyOptions.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.policyExpression.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.resources.additionalData`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.creditPool`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.creditPool.amount`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.creditPool.rollOver`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression.operatorNotOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression.operatorAndOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression.operatorOrOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression.policyOptions`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.policyExpression.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.additionalData`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.provider`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.provider.appDefId`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|",
          "|`data.provider.type`|[`eq()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#eq),[`ne()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ne),[`exists()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#exists),[`in()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#in),[`hasSome()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#hasSome),[`startsWith()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#startsWith),[`ascending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#ascending),[`descending()`](wix-entitlements-backend.Entitlements.EntitlementsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryEntitlements example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function queryEntitlements() {",
              "   const { items } = entitlements.queryEntitlements().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "redeemEntitlement",
      "params": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement that is being redeemed from",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.RedeemEntitlementOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "entitlementId",
        "options",
        "options.idempotencyKey",
        "options.resourceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.RedeemEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Redeems the requested number of credits for one specific resource",
        "description": [],
        "examples": [
          {
            "title": "redeemEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function redeemEntitlement(entitlementId, options) {",
              "   try {",
              "     const result = await entitlements.redeemEntitlement(entitlementId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "releaseEntitlementReservation",
      "params": [
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request",
          "required": true
        }
      ],
      "requiredFields": [
        "transactionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.ReleaseEntitlementReservationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Performed as two-part redemption",
        "description": [],
        "examples": [
          {
            "title": "releaseEntitlementReservation example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function releaseEntitlementReservation(transactionId) {",
              "   try {",
              "     const result = await entitlements.releaseEntitlementReservation(transactionId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "reserveEntitlement",
      "params": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement that is being redeemed from",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ReserveEntitlementOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "entitlementId",
        "options",
        "options.idempotencyKey",
        "options.resourceId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.ReserveEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Performed as two-part redemption",
        "description": [],
        "examples": [
          {
            "title": "reserveEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function reserveEntitlement(entitlementId, options) {",
              "   try {",
              "     const result = await entitlements.reserveEntitlement(entitlementId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "resumeEntitlement",
      "params": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements",
          "required": true
        }
      ],
      "requiredFields": [
        "packageId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.ResumeEntitlementResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Resumes the entitlements in the provided package. If the package contains service type entitlements, the services will be resumed.",
        "description": [],
        "examples": [
          {
            "title": "resumeEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function resumeEntitlement(packageId) {",
              "   try {",
              "     const result = await entitlements.resumeEntitlement(packageId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "updateEntitlement",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID",
          "required": true
        },
        {
          "name": "entitlement",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.UpdateEntitlement"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "entitlement",
        "entitlement.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                }
              ]
            }
          }
        ],
        "doc": "The updated Entitlement\n"
      },
      "docs": {
        "summary": "Update an Entitlement, supports partial update\nPass the latest `revision` for a successful update",
        "description": [],
        "examples": [
          {
            "title": "updateEntitlement example",
            "body": [
              "import { entitlements } from 'wix-entitlements-backend';",
              "  ",
              " async function updateEntitlement(id, entitlement, options) {",
              "   try {",
              "     const result = await entitlements.updateEntitlement(id, entitlement, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelEntitlementReservationRequest",
      "members": [
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CancelEntitlementReservationResponse",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CheckEntitlementEligibilityOptions",
      "members": [
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to check eligibility for. This number if checked against the policies and credit pool of the entitlements"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource for which to check entitlement's eligibility"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CheckEntitlementEligibilityRequest",
      "members": [
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to check eligibility for. This number if checked against the policies and credit pool of the entitlements"
        },
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement to check eligibility for"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource for which to check entitlement's eligibility"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CheckEntitlementEligibilityResponse",
      "members": [
        {
          "name": "result",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ELIGIBLE'`\n- `'ENTITLEMENT_NOT_ACTIVE'`\n- `'NOT_ENOUGH_BALANCE'`\n- `'POLICY_EXPRESSION_EVALUATED_TO_FALSE'`\n- `'UNKNOWN'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateEntitlementRequest",
      "members": [
        {
          "name": "entitlement",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement to be created"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateEntitlementResponse",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "The created Entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreditPool",
      "members": [
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The total amount of credits available for this entitlement"
        },
        {
          "name": "rollOver",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Unused credits are rolled over to the new cycle"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CustomPolicy",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "References a specific custom policy on the provider's system"
        },
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info for this custom policy. It's going to be passed to the policy provider during eligibility checks"
        },
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Custom policy provider id"
        }
      ],
      "docs": {
        "description": [
          "Custom policy as implemented by the Entitlement Policy Provider"
        ]
      }
    },
    {
      "name": "DeleteEntitlementOptions",
      "members": [
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the Entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteEntitlementRequest",
      "members": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Entitlement to delete"
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the Entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteEntitlementResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "extendedFieldsUpdatedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFieldsUpdatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.ExtendedFieldsUpdatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EndEntitlementRequest",
      "members": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EndEntitlementResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "Entitlements that were updated as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Entitlement",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Entitlement was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Entitlement was last updated"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Who is getting the entitlement"
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntitlementData"
            }
          ],
          "doc": "Resources and policies how the entitlement works"
        },
        {
          "name": "packageId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package that this entitlement belongs to"
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision"
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of entitlement"
        },
        {
          "name": "templateId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Template that this entitlement was created from"
        },
        {
          "name": "templatePackageId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Template package from which this entitlement was provisioned from"
        }
      ],
      "docs": {
        "description": [
          "This represents the current state of what the beneficiary is entitled to. Entitlement is always created in the image of the template.\n+ Entitlement supports basic lifecycle, can be paused or resumed. E.g. for recurring entitlements they should be active only when the underlying subscription is active. Redemption would fail on a non-active entitlement\n+ Entitlement may be recurring. Recurrence is driven by an external system (e.g. pricing plans order billing cycle) via the grant method of this API.\n+ Depending on user input updates to entitlement templates may cascade to entitlements in 3 different ways:\n+ On Provision\n+ On Grant\n+ Immediately"
        ]
      }
    },
    {
      "name": "EntitlementData",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info that was set by the Entitlement Provider"
        },
        {
          "name": "creditPool",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CreditPool"
            }
          ],
          "doc": "Settings that control the behavior of the credit pool. If this value is left empty, then the entitlement is unlimited and resources should not have prices"
        },
        {
          "name": "policyExpression",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpression"
            }
          ],
          "doc": "Defines entitlement eligibility. Default policy for all resources, but may be overridden by a specific resource"
        },
        {
          "name": "provider",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Provider"
            }
          ],
          "doc": "Entitlement provider"
        },
        {
          "name": "resources",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Resource"
                  }
                ]
              }
            }
          ],
          "doc": "A set of resources that share the credit pool and policies of the entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementEnded",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which has been ended"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementGranted",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which has been granted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementNotActive",
      "members": [
        {
          "name": "entitlementId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID"
        },
        {
          "name": "entitlementStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement status"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementPaused",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which has been paused"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementRedeemed",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which has been redeemed"
        },
        {
          "name": "redemptionDetails",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.RedemptionDetails"
            }
          ],
          "doc": "Details of the redemption"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementReservationCanceled",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which was used to perform this transaction"
        },
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the canceled reservation transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementReservationReleased",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which was used to perform this transaction"
        },
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the released reservation transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementReserved",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which was used to perform this transaction"
        },
        {
          "name": "redemptionDetails",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.RedemptionDetails"
            }
          ],
          "doc": "Details of the redemption"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementResumed",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement which has been resumed"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementTemplateReference",
      "members": [
        {
          "name": "templateId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Individual entitlement template"
        },
        {
          "name": "templatePackageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlement templates"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfEntitlementTemplateReferenceIdOneOf",
            "members": [
              "templateId",
              "templatePackageId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntitlementTemplateReferenceIdOneOf",
      "members": [
        {
          "name": "templateId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Individual entitlement template"
        },
        {
          "name": "templatePackageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlement templates"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFieldsUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "FixedIntervalPolicy",
      "members": [
        {
          "name": "fromHour",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Hour that this interval starts from. If this is set then to_hour must also be set"
        },
        {
          "name": "fromMinute",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Minute that this interval starts from. If this is set then to_minute must also be set"
        },
        {
          "name": "fromWeekDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Weekday that this interval starts from. If this is set then to_week_day must also be set"
        },
        {
          "name": "toHour",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Hour that this interval ends at. If this is set then from_hour must also be set"
        },
        {
          "name": "toMinute",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Minute that this interval ends at. If this is set then from_minute must also be set"
        },
        {
          "name": "toWeekDay",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Weekday that this interval ends at. If this is set then from_week_day must also be set"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEligibleEntitlementsOptions",
      "members": [
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to check eligibility for. This number is checked against the policies and credit pool of the entitlements"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEligibleEntitlementsRequest",
      "members": [
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to check eligibility for. This number is checked against the policies and credit pool of the entitlements"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource for which all eligible entitlements will be returned"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          "TODO provide a bulk version of this endpoint"
        ]
      }
    },
    {
      "name": "GetEligibleEntitlementsResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "Eligible entitlements"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitlementRequest",
      "members": [
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Entitlement to retrieve"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitlementResponse",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "The retrieved Entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GrantEntitlementRequest",
      "members": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements to grant. Package id should be the same that was used to provision entitlements."
        }
      ],
      "docs": {
        "description": [
          "Updates the entitlement according to its template and grants credits"
        ]
      }
    },
    {
      "name": "GrantEntitlementResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "Updated entitlements as a result of the grant"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of of a contact in the site's [CRM by Ascend](https://www.wix.com/ascend/crm) system."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "NotEnoughBalance",
      "members": [
        {
          "name": "availableBalance",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Price of the resource expressed in credits"
        },
        {
          "name": "entitlementId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID"
        },
        {
          "name": "requestedBalance",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Price of the resource expressed in credits"
        },
        {
          "name": "resourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Resource ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PackageAlreadyExists",
      "members": [
        {
          "name": "packageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package id that already has entitlements"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PauseEntitlementRequest",
      "members": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PauseEntitlementResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "Entitlements that were updated as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Policy",
      "members": [
        {
          "name": "customOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CustomPolicy"
            }
          ],
          "doc": "Custom policy definition that is controlled by the CustomPolicyProvider"
        },
        {
          "name": "fixedIntervalOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.FixedIntervalPolicy"
            }
          ],
          "doc": "Policy which defines entitlement eligibility on particular days or hours"
        },
        {
          "name": "rateLimitedOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.RateLimitedPolicy"
            }
          ],
          "doc": "Policy which limits entitlement usage per time unit"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'CUSTOM'`\n- `'FIXED_INTERVAL'`\n- `'RATE_LIMITED'`\n- `'UNKNOWN'`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfPolicyPolicyOneOf",
            "members": [
              "customOptions",
              "fixedIntervalOptions",
              "rateLimitedOptions"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpression",
      "members": [
        {
          "name": "operatorAndOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionAnd"
            }
          ],
          "doc": "Combines the expressions with an `AND` operator"
        },
        {
          "name": "operatorNotOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionNot"
            }
          ],
          "doc": "Negates the expression"
        },
        {
          "name": "operatorOrOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionOr"
            }
          ],
          "doc": "Combines the expressions with an `OR` operator"
        },
        {
          "name": "policyOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Policy"
            }
          ],
          "doc": "Represents the specific policy"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'OPERATOR_AND'`\n- `'OPERATOR_NOT'`\n- `'OPERATOR_OR'`\n- `'POLICY'`\n- `'UNKNOWN'`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfPolicyExpressionExpressionOneOf",
            "members": [
              "operatorAndOptions",
              "operatorNotOptions",
              "operatorOrOptions",
              "policyOptions"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpressionAnd",
      "members": [
        {
          "name": "expressions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpression"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpressionEvaluatedToFalse",
      "members": [
        {
          "name": "entitlementId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID"
        },
        {
          "name": "resourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Resource ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpressionExpressionOneOf",
      "members": [
        {
          "name": "operatorAndOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionAnd"
            }
          ],
          "doc": "Combines the expressions with an `AND` operator"
        },
        {
          "name": "operatorNotOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionNot"
            }
          ],
          "doc": "Negates the expression"
        },
        {
          "name": "operatorOrOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpressionOr"
            }
          ],
          "doc": "Combines the expressions with an `OR` operator"
        },
        {
          "name": "policyOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Policy"
            }
          ],
          "doc": "Represents the specific policy"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpressionNot",
      "members": [
        {
          "name": "expression",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpression"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyExpressionOr",
      "members": [
        {
          "name": "expressions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpression"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PolicyPolicyOneOf",
      "members": [
        {
          "name": "customOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CustomPolicy"
            }
          ],
          "doc": "Custom policy definition that is controlled by the CustomPolicyProvider"
        },
        {
          "name": "fixedIntervalOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.FixedIntervalPolicy"
            }
          ],
          "doc": "Policy which defines entitlement eligibility on particular days or hours"
        },
        {
          "name": "rateLimitedOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.RateLimitedPolicy"
            }
          ],
          "doc": "Policy which limits entitlement usage per time unit"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Provider",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "AppDefId of a provider defined in a dev center which implements this entitlement custom lifecycle and redeem logic"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type of the entitlement, giving information to the SPI implementer so it knows what kind of entitlement it is"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ProvisionEntitlementsOptions",
      "members": [
        {
          "name": "beneficiary",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "The main beneficiary of the entitlement"
        },
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package that the provisioned entitlement is part of"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ProvisionEntitlementsRequest",
      "members": [
        {
          "name": "beneficiary",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "The main beneficiary of the entitlement"
        },
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package that the provisioned entitlement is part of"
        },
        {
          "name": "templateReference",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntitlementTemplateReference"
            }
          ],
          "doc": "Reference of the template that is used to provision the entitlements"
        }
      ],
      "docs": {
        "description": [
          "In case template_id is provided should test if it's part of a package. If it is, reject the request"
        ]
      }
    },
    {
      "name": "ProvisionEntitlementsResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryEntitlementsRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CursorQuery"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryEntitlementsResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved Entitlements"
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.CursorPagingMetadata"
            }
          ],
          "doc": "Paging information"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RateLimitedPolicy",
      "members": [
        {
          "name": "fixedIntervalOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.FixedIntervalPolicy"
            }
          ],
          "doc": ""
        },
        {
          "name": "times",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Defines how many times it's allowed to consume a resource over the period"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type of period"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfRateLimitedPolicyPeriodOneOf",
            "members": [
              "fixedIntervalOptions"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RateLimitedPolicyPeriodOneOf",
      "members": [
        {
          "name": "fixedIntervalOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.FixedIntervalPolicy"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemEntitlementOptions",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of of resources to redeem"
        },
        {
          "name": "idempotencyKey",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource that is being redeemed"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemEntitlementRequest",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of of resources to redeem"
        },
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement that is being redeemed from"
        },
        {
          "name": "idempotencyKey",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource that is being redeemed"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemEntitlementResponse",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resulting transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedemptionDetails",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info provided during redemption"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement"
        },
        {
          "name": "idempotencyKey",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key"
        },
        {
          "name": "resourceCount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of of resources to redeem"
        },
        {
          "name": "resourceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource that is being redeemed"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by entitlement providers"
        },
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the redemption transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReleaseEntitlementReservationRequest",
      "members": [
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReleaseEntitlementReservationResponse",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReserveEntitlementOptions",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to redeem"
        },
        {
          "name": "idempotencyKey",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource that is being redeemed"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by Policy providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReserveEntitlementRequest",
      "members": [
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Beneficiary of the entitlement. If not provided, will use the identity in the context"
        },
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of resources to redeem"
        },
        {
          "name": "entitlementId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the entitlement that is being redeemed from"
        },
        {
          "name": "idempotencyKey",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key"
        },
        {
          "name": "resourceId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the resource that is being redeemed"
        },
        {
          "name": "targetDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date at which the resource will be used. Target date does not necessarily equal the redemption date. Credits are redeemed immediately.\nThis date is only used for validations that may be performed by Policy providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReserveEntitlementResponse",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the transaction that was created as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Resource",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "additionalData",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Additional info that was set by the Entitlement Provider"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the resource"
        },
        {
          "name": "policyExpression",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.PolicyExpression"
            }
          ],
          "doc": "Overrides the default policies in Entitlement Data"
        },
        {
          "name": "price",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Price of the resource expressed in credits"
        }
      ],
      "docs": {
        "description": [
          "Represents anything that an external system exposes as an entitlement. It could be a specific event, a booking session, or even a physical good.\nThe system providing this resource can uniquely identify this resource by its `id`."
        ]
      }
    },
    {
      "name": "ResumeEntitlementRequest",
      "members": [
        {
          "name": "packageId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package of entitlements"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ResumeEntitlementResponse",
      "members": [
        {
          "name": "entitlements",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
                  }
                ]
              }
            }
          ],
          "doc": "Entitlements that were updated as a result of this request"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEntitlement",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Entitlement was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entitlement ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Entitlement was last updated"
        },
        {
          "name": "beneficiary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.IdentificationData"
            }
          ],
          "doc": "Who is getting the entitlement"
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.EntitlementData"
            }
          ],
          "doc": "Resources and policies how the entitlement works"
        },
        {
          "name": "packageId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Package that this entitlement belongs to"
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision"
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Status of entitlement"
        },
        {
          "name": "templateId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Template that this entitlement was created from"
        },
        {
          "name": "templatePackageId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Template package from which this entitlement was provisioned from"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEntitlementOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEntitlementRequest",
      "members": [
        {
          "name": "entitlement",
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "Entitlement to be updated, may be partial"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateEntitlementResponse",
      "members": [
        {
          "name": "entitlement",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-entitlements-backend.Entitlements.Entitlement"
            }
          ],
          "doc": "The updated Entitlement"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
