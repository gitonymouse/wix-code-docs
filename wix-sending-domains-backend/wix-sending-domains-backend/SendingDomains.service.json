{
  "name": "SendingDomains",
  "memberOf": "wix-sending-domains-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-sending-domains-backend-sending_domain",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "authenticateSendingDomain",
      "params": [
        {
          "name": "sendingDomainId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the SendingDomain to authenticate.",
          "required": true
        }
      ],
      "requiredFields": [
        "sendingDomainId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-sending-domains-backend.SendingDomains.AuthenticateSendingDomainResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Authenticate sending domain.\nYou can only authenticate sending domain if you have sender details entry with the provided domain.",
        "description": [],
        "examples": [
          {
            "title": "authenticateSendingDomain example for dashboard page code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "",
              "async function authenticateSendingDomain(sendingDomainId) {",
              "  try {",
              "    const result = await sendingDomains.authenticateSendingDomain(sendingDomainId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "authenticateSendingDomain example for exporting from backend code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedAuthenticateSendingDomain = elevate(sendingDomains.authenticateSendingDomain);",
              "",
              "export const authenticateSendingDomain = webMethod(",
              "  Permissions.Anyone,",
              "  async (sendingDomainId) => {",
              "    try {",
              "      const result = await elevatedAuthenticateSendingDomain(sendingDomainId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "authenticateSendingDomain",
      "isAdminMethod": true
    },
    {
      "name": "createSendingDomain",
      "params": [
        {
          "name": "sendingDomain",
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
            }
          ],
          "doc": "SendingDomain to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "sendingDomain"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
                }
              ]
            }
          }
        ],
        "doc": "The created SendingDomain.\n"
      },
      "docs": {
        "summary": "Creates a SendingDomain.\nRequest body must include \"domain\" field.\nYou can only create sending domain if you have sender details entry with the provided domain.",
        "description": [],
        "examples": [
          {
            "title": "createSendingDomain example for dashboard page code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "",
              "async function createSendingDomain(sendingDomain) {",
              "  try {",
              "    const result = await sendingDomains.createSendingDomain(sendingDomain);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createSendingDomain example for exporting from backend code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateSendingDomain = elevate(sendingDomains.createSendingDomain);",
              "",
              "export const createSendingDomain = webMethod(",
              "  Permissions.Anyone,",
              "  async (sendingDomain) => {",
              "    try {",
              "      const result = await elevatedCreateSendingDomain(sendingDomain);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createSendingDomain",
      "isAdminMethod": true
    },
    {
      "name": "getSendingDomain",
      "params": [
        {
          "name": "sendingDomainId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the SendingDomain to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "sendingDomainId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
                }
              ]
            }
          }
        ],
        "doc": "The requested SendingDomain.\n"
      },
      "docs": {
        "summary": "Retrieves SendingDomain by ID.\nYou can only retrieve sending domain if you have sender details entry with the requested domain.",
        "description": [],
        "examples": [
          {
            "title": "getSendingDomain example for dashboard page code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "",
              "async function getSendingDomain(sendingDomainId) {",
              "  try {",
              "    const result = await sendingDomains.getSendingDomain(sendingDomainId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getSendingDomain example for exporting from backend code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetSendingDomain = elevate(sendingDomains.getSendingDomain);",
              "",
              "export const getSendingDomain = webMethod(",
              "  Permissions.Anyone,",
              "  async (sendingDomainId) => {",
              "    try {",
              "      const result = await elevatedGetSendingDomain(sendingDomainId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getSendingDomain",
      "isAdminMethod": true
    },
    {
      "name": "querySendingDomains",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of SendingDomains, given the provided [paging, filtering, and sorting][1].",
        "description": [
          "Up to 1,000 SendingDomains can be returned per request.",
          "You can only retrieve sending domain if you have sender details entry with the requested domain.",
          "To learn how to query SendingDomains, see [API Query Language][2].",
          "[1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging",
          "[2]: https://dev.wix.com/api/rest/getting-started/api-query-language",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#eq),[`ne()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#ne),[`exists()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#exists),[`in()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#in),[`hasSome()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#hasSome),[`startsWith()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#startsWith),[`ascending()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#ascending),[`descending()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#descending)|",
          "|`domain`|[`eq()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#eq),[`ne()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#ne),[`exists()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#exists),[`in()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#in),[`hasSome()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#hasSome),[`startsWith()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#startsWith),[`ascending()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#ascending),[`descending()`](wix-sending-domains-backend.SendingDomains.SendingDomainsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "querySendingDomains example for dashboard page code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "",
              "async function querySendingDomains() {",
              "  const { items } = sendingDomains.querySendingDomains().find();",
              "}",
              ""
            ]
          },
          {
            "title": "querySendingDomains example for exporting from backend code",
            "body": [
              "import { sendingDomains } from 'wix-sending-domains-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedQuerySendingDomains = elevate(sendingDomains.querySendingDomains);",
              "",
              "export const querySendingDomains = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedQuerySendingDomains(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "querySendingDomains",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AuthenticateSendingDomainRequest",
      "members": [
        {
          "name": "sendingDomainId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the SendingDomain to authenticate."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AuthenticateSendingDomainResponse",
      "members": [
        {
          "name": "sendingDomain",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
            }
          ],
          "doc": "SendingDomain after authentication attempt."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateSendingDomainRequest",
      "members": [
        {
          "name": "sendingDomain",
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
            }
          ],
          "doc": "SendingDomain to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateSendingDomainResponse",
      "members": [
        {
          "name": "sendingDomain",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
            }
          ],
          "doc": "The created SendingDomain."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-sending-domains-backend.SendingDomains.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DnsRecord",
      "members": [
        {
          "name": "hostName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Host name of the DNS record."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type of the DNS record."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Value of the DNS record."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSendingDomainRequest",
      "members": [
        {
          "name": "sendingDomainId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the SendingDomain to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetSendingDomainResponse",
      "members": [
        {
          "name": "sendingDomain",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
            }
          ],
          "doc": "The requested SendingDomain."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QuerySendingDomainsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.CursorQuery"
            }
          ],
          "doc": "WQL expression."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QuerySendingDomainsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-sending-domains-backend.SendingDomains.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata."
        },
        {
          "name": "sendingDomains",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-sending-domains-backend.SendingDomains.SendingDomain"
                  }
                ]
              }
            }
          ],
          "doc": "List of SendingDomains."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SendingDomain",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time this entity was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SendingDomain ID."
        },
        {
          "name": "dnsRecords",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-sending-domains-backend.SendingDomains.DnsRecord"
                  }
                ]
              }
            }
          ],
          "doc": "Required domain DNS records for an email to pass dkim check (not available when status is \"INITIALIZING\")."
        },
        {
          "name": "domain",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The domain."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Current status of the SendingDomain."
        }
      ],
      "docs": {
        "description": [
          "A SendingDomain is a ..."
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
