{
  "name": "BiEvents",
  "memberOf": "wix-app-market-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-app-market-backend-send_bi_event_response",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "sendBiEvent",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-app-market-backend.BiEvents.SendBiEventOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Submit a BI event to Wix.",
        "description": [],
        "examples": [
          {
            "title": "sendBiEvent example",
            "body": [
              "import { biEvents } from 'wix-app-market-backend';",
              "  ",
              " async function sendBiEvent(options) {",
              "   try {",
              "     const result = await biEvents.sendBiEvent(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "SendBIEventRequest",
      "members": [
        {
          "name": "customEventName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Custom event name. Required when eventName = `CUSTOM`."
        },
        {
          "name": "eventData",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Additional data about the event.\nSupported keys: `cycle_name`, `currency`, `sum`, `reason`, `app_plan_id`.\nYou can submit your own keys as well.\n- `cycle_name` - should be one of : `monthly`, `yearly`, `2 years`, `one time`.\n- `currency` - ISO 4217 currency code.\n- `sum` - required when eventName = `CHARGE` or `FUNDS_RETURNED`.\n- `reason` - why the event was triggered.\n- `app_plan_id` - plan ID as displayed in the Developers Center (returned as `vendorProductId` in the paid plan purchased webhook)."
        },
        {
          "name": "eventName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "- `APP_DASHBOARD_LOADED` - should be fired when your app's dashboard is loaded by a site owner or contributor.\n- `APP_FINISHED_CONFIGURATION` - should be fired when the site owner is completely onboarded and has completed all required configurations for the app to function properly.\n- `APP_UPGRADED` - should be fired when a site owner upgrades the app to a higher plan (when the upgrade and checkout flow is done on the app side and not via Wix).\n- `PRIMARY_ACTION_PERFORMED` - should be fired every time a site owner, contributor or visitor triggers the primary action in the app (for example, “review written” for a product reviews app).\n- `CHARGE` - should be fired when you charge money from the site owner (for example, new purchases or subscription renewal). Make sure to also send `eventData` and a key of `sum`.\n- `FUNDS_RETURNED` - should be fired when you send money back to a site owner (for example, refunds or chargebacks). Make sure to also send `eventData` and a key of `sum`.\n- `CUSTOM` - should be fired for any other event which is not supported by the above. Make sure to also send `customEventName`.\n- `APP_DEPLOYED` - should be fired when the app’s internal code implementation was changed and might affect user flows or cause a regression.\n- `APP_FINISH_BUSINESS_SETUP` - **Deprecation Notice:** This enum will be removed on March 30, 2023. Use `APP_SETUP_FINISHED` instead;.\n- `APP_SETUP_FINISHED` - should be fired when the site owner has completed the required business setup."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SendBIEventResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SendBiEventOptions",
      "members": [
        {
          "name": "customEventName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Custom event name. Required when eventName = `CUSTOM`."
        },
        {
          "name": "eventData",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Additional data about the event.\nSupported keys: `cycle_name`, `currency`, `sum`, `reason`, `app_plan_id`.\nYou can submit your own keys as well.\n- `cycle_name` - should be one of : `monthly`, `yearly`, `2 years`, `one time`.\n- `currency` - ISO 4217 currency code.\n- `sum` - required when eventName = `CHARGE` or `FUNDS_RETURNED`.\n- `reason` - why the event was triggered.\n- `app_plan_id` - plan ID as displayed in the Developers Center (returned as `vendorProductId` in the paid plan purchased webhook)."
        },
        {
          "name": "eventName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "- `APP_DASHBOARD_LOADED` - should be fired when your app's dashboard is loaded by a site owner or contributor.\n- `APP_FINISHED_CONFIGURATION` - should be fired when the site owner is completely onboarded and has completed all required configurations for the app to function properly.\n- `APP_UPGRADED` - should be fired when a site owner upgrades the app to a higher plan (when the upgrade and checkout flow is done on the app side and not via Wix).\n- `PRIMARY_ACTION_PERFORMED` - should be fired every time a site owner, contributor or visitor triggers the primary action in the app (for example, “review written” for a product reviews app).\n- `CHARGE` - should be fired when you charge money from the site owner (for example, new purchases or subscription renewal). Make sure to also send `eventData` and a key of `sum`.\n- `FUNDS_RETURNED` - should be fired when you send money back to a site owner (for example, refunds or chargebacks). Make sure to also send `eventData` and a key of `sum`.\n- `CUSTOM` - should be fired for any other event which is not supported by the above. Make sure to also send `customEventName`.\n- `APP_DEPLOYED` - should be fired when the app’s internal code implementation was changed and might affect user flows or cause a regression.\n- `APP_FINISH_BUSINESS_SETUP` - **Deprecation Notice:** This enum will be removed on March 30, 2023. Use `APP_SETUP_FINISHED` instead;.\n- `APP_SETUP_FINISHED` - should be fired when the site owner has completed the required business setup."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
