{
  "name": "FavoriteList",
  "memberOf": "wix-dashboard-management-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-dashboard-management.v2-favorite_list",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "addUserFavorite",
      "params": [
        {
          "name": "favorite",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.Favorite"
            }
          ],
          "doc": "Favorite page to add to the list.",
          "required": true
        }
      ],
      "requiredFields": [
        "favorite"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-dashboard-management-v2.FavoriteList.AddUserFavoriteResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Adds a favorite page to the list. If the user does not have a list, the endpoint creates a new list and adds the favorite page to it.",
        "description": [],
        "examples": [
          {
            "title": "addUserFavorite example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function addUserFavorite(favorite) {",
              "  try {",
              "    const result = await favoriteList.addUserFavorite(favorite);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "addUserFavorite example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedAddUserFavorite = elevate(favoriteList.addUserFavorite);",
              "",
              "export const addUserFavorite = webMethod(",
              "  Permissions.Anyone,",
              "  async (favorite) => {",
              "    try {",
              "      const result = await elevatedAddUserFavorite(favorite);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "addUserFavorite",
      "isAdminMethod": true
    },
    {
      "name": "createUserFavoriteList",
      "params": [
        {
          "name": "favoriteList",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Dashboard favorite list to create.",
          "required": true
        }
      ],
      "requiredFields": [
        "favoriteList",
        "favoriteList.favorites"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
                }
              ]
            }
          }
        ],
        "doc": "Created dashboard favorite list.\n"
      },
      "docs": {
        "summary": "Creates the current user's list of favorites dashboard pages. A user can only have one such list.",
        "description": [
          "> **Note:**\n> When first calling this endpoint, you can create a list that contains one or more favorite dashboard pages. However, if a list already exists for that user, calling this endpoint generates an error."
        ],
        "examples": [
          {
            "title": "createUserFavoriteList example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function createUserFavoriteList(favoriteList) {",
              "  try {",
              "    const result = await favoriteList.createUserFavoriteList(favoriteList);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createUserFavoriteList example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateUserFavoriteList = elevate(favoriteList.createUserFavoriteList);",
              "",
              "export const createUserFavoriteList = webMethod(",
              "  Permissions.Anyone,",
              "  async (favoriteList) => {",
              "    try {",
              "      const result = await elevatedCreateUserFavoriteList(favoriteList);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createUserFavoriteList",
      "isAdminMethod": true
    },
    {
      "name": "deleteUserFavorite",
      "params": [
        {
          "name": "favoriteId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the favorite page to delete from the list.",
          "required": true
        }
      ],
      "requiredFields": [
        "favoriteId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-dashboard-management-v2.FavoriteList.DeleteUserFavoriteResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes the favorite page from the list. If the list is empty, it is deleted.",
        "description": [],
        "examples": [
          {
            "title": "deleteUserFavorite example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function deleteUserFavorite(favoriteId) {",
              "  try {",
              "    const result = await favoriteList.deleteUserFavorite(favoriteId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteUserFavorite example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteUserFavorite = elevate(favoriteList.deleteUserFavorite);",
              "",
              "export const deleteUserFavorite = webMethod(",
              "  Permissions.Anyone,",
              "  async (favoriteId) => {",
              "    try {",
              "      const result = await elevatedDeleteUserFavorite(favoriteId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteUserFavorite",
      "isAdminMethod": true
    },
    {
      "name": "deleteUserFavoriteList",
      "params": [
        {
          "name": "favoriteListId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the dashboard favorite list to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "favoriteListId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes the user's dashboard favorite list.",
        "description": [],
        "examples": [
          {
            "title": "deleteUserFavoriteList example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function deleteUserFavoriteList(favoriteListId) {",
              "  try {",
              "    const result = await favoriteList.deleteUserFavoriteList(favoriteListId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteUserFavoriteList example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteUserFavoriteList = elevate(favoriteList.deleteUserFavoriteList);",
              "",
              "export const deleteUserFavoriteList = webMethod(",
              "  Permissions.Anyone,",
              "  async (favoriteListId) => {",
              "    try {",
              "      const result = await elevatedDeleteUserFavoriteList(favoriteListId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteUserFavoriteList",
      "isAdminMethod": true
    },
    {
      "name": "getUserFavoriteList",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-dashboard-management-v2.FavoriteList.GetUserFavoriteListResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Gets the user's dashboard favorite list.",
        "description": [],
        "examples": [
          {
            "title": "getUserFavoriteList example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function getUserFavoriteList() {",
              "  try {",
              "    const result = await favoriteList.getUserFavoriteList();",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getUserFavoriteList example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetUserFavoriteList = elevate(favoriteList.getUserFavoriteList);",
              "",
              "export const getUserFavoriteList = webMethod(",
              "  Permissions.Anyone,",
              "  async () => {",
              "    try {",
              "      const result = await elevatedGetUserFavoriteList();",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getUserFavoriteList",
      "isAdminMethod": true
    },
    {
      "name": "updateUserFavoriteList",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Dashboard favorite list ID. Automatically generated by Wix.",
          "required": true
        },
        {
          "name": "favoriteList",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.UpdateUserFavoriteList"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "favoriteList",
        "favoriteList.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
                }
              ]
            }
          }
        ],
        "doc": "Updated dashboard favorite list.\n"
      },
      "docs": {
        "summary": "Updates the current user's list of dashboard favorites.",
        "description": [
          "To prevent conflicting changes, make sure to include the current revision number when calling this endpoint.\n\n> **Note:**\n> Updating the list replaces the favorite pages it contains with those passed to the endpoint."
        ],
        "examples": [
          {
            "title": "updateUserFavoriteList example for dashboard page code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "",
              "async function updateUserFavoriteList(id, favoriteList, options) {",
              "  try {",
              "    const result = await favoriteList.updateUserFavoriteList(id, favoriteList, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateUserFavoriteList example for exporting from backend code",
            "body": [
              "import { favoriteList } from 'wix-dashboard-management.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateUserFavoriteList = elevate(favoriteList.updateUserFavoriteList);",
              "",
              "export const updateUserFavoriteList = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, favoriteList, options) => {",
              "    try {",
              "      const result = await elevatedUpdateUserFavoriteList(id, favoriteList, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateUserFavoriteList",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddUserFavoriteRequest",
      "members": [
        {
          "name": "favorite",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.Favorite"
            }
          ],
          "doc": "Favorite page to add to the list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddUserFavoriteResponse",
      "members": [
        {
          "name": "favoriteList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Updated dashboard favorite list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateUserFavoriteListRequest",
      "members": [
        {
          "name": "favoriteList",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Dashboard favorite list to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateUserFavoriteListResponse",
      "members": [
        {
          "name": "favoriteList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Created dashboard favorite list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DashboardFavoriteList",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the dashboard favorite list was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Dashboard favorite list ID. Automatically generated by Wix."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the dashboard favorite list was last updated."
        },
        {
          "name": "favorites",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-dashboard-management-v2.FavoriteList.Favorite"
                  }
                ]
              }
            }
          ],
          "doc": "Collection of favorite dashboard pages."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number. Increments automatically by 1 whenever the list is successfully updated. To prevent conflicting changes, pass the current revision number when updating the list."
        }
      ],
      "docs": {
        "description": [
          "List of favorite dashboard pages."
        ]
      }
    },
    {
      "name": "DeleteUserFavoriteListRequest",
      "members": [
        {
          "name": "favoriteListId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the dashboard favorite list to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteUserFavoriteListResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteUserFavoriteRequest",
      "members": [
        {
          "name": "favoriteId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the favorite page to delete from the list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteUserFavoriteResponse",
      "members": [
        {
          "name": "favoriteList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Updated dashboard favorite list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Favorite",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Favorite ID. Automatically generated by Wix."
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the page added to the list."
        },
        {
          "name": "relativeUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Relative URL appended to the favorite page's URL. It can include path segments, a query string, or a fragment identifier."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Custom favorite page title as it appears in the list of favorites."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetUserFavoriteListRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetUserFavoriteListResponse",
      "members": [
        {
          "name": "favoriteList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "User's dashboard favorite list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateUserFavoriteList",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the dashboard favorite list was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Dashboard favorite list ID. Automatically generated by Wix."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the dashboard favorite list was last updated."
        },
        {
          "name": "favorites",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-dashboard-management-v2.FavoriteList.Favorite"
                  }
                ]
              }
            }
          ],
          "doc": "Collection of favorite dashboard pages."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number. Increments automatically by 1 whenever the list is successfully updated. To prevent conflicting changes, pass the current revision number when updating the list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateUserFavoriteListOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateUserFavoriteListRequest",
      "members": [
        {
          "name": "favoriteList",
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Dashboard favorite list to update. The `favorites` array in the request replaces the existing `favorites` array.\n\nTo prevent conflicting changes, include the current revision number.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateUserFavoriteListResponse",
      "members": [
        {
          "name": "favoriteList",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-dashboard-management-v2.FavoriteList.DashboardFavoriteList"
            }
          ],
          "doc": "Updated dashboard favorite list."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
