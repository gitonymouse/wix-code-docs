{
  "name": "GiftCards",
  "memberOf": "wix-ecom-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-ecom-backend-gift_card",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createGiftCard",
      "params": [
        {
          "name": "giftCardData",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCardData"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "giftCardData",
        "giftCardData.code"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.CreateGiftCardResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Create a gift card",
        "description": [],
        "examples": [
          {
            "title": "createGiftCard example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function createGiftCard(giftCardData) {",
              "  try {",
              "    const result = await giftCards.createGiftCard(giftCardData);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createGiftCard example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const createGiftCard = webMethod(",
              "  Permissions.Anyone,",
              "  async (giftCardData) => {",
              "    try {",
              "      const result = await giftCards.createGiftCard(giftCardData);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createGiftCard"
    },
    {
      "name": "get",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GetResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "get example for dashboard page code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function get(id) {",
              "  try {",
              "    const result = await giftCards.get(id);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "get example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGet = elevate(giftCards.get);",
              "",
              "export const get = webMethod(",
              "  Permissions.Anyone,",
              "  async (id) => {",
              "    try {",
              "      const result = await elevatedGet(id);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "get",
      "isAdminMethod": true
    },
    {
      "name": "getGiftCard",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card id",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get gift card by id",
        "description": [],
        "examples": [
          {
            "title": "getGiftCard example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function getGiftCard(id) {",
              "  try {",
              "    const result = await giftCards.getGiftCard(id);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getGiftCard example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getGiftCard = webMethod(",
              "  Permissions.Anyone,",
              "  async (id) => {",
              "    try {",
              "      const result = await giftCards.getGiftCard(id);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getGiftCard"
    },
    {
      "name": "getGiftCardByCode",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GetGiftCardByCodeOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GetGiftCardByCodeResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get gift card by code",
        "description": [],
        "examples": [
          {
            "title": "getGiftCardByCode example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function getGiftCardByCode(options) {",
              "  try {",
              "    const result = await giftCards.getGiftCardByCode(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getGiftCardByCode example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getGiftCardByCode = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await giftCards.getGiftCardByCode(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getGiftCardByCode"
    },
    {
      "name": "getGiftCardByCodeV2",
      "params": [
        {
          "name": "code",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GetGiftCardByCodeV2Options"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "code"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GetGiftCardByCodeResponseV2"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get gift card by code",
        "description": [],
        "examples": [
          {
            "title": "getGiftCardByCodeV2 example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function getGiftCardByCodeV2(code, options) {",
              "  try {",
              "    const result = await giftCards.getGiftCardByCodeV2(code, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getGiftCardByCodeV2 example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getGiftCardByCodeV2 = webMethod(",
              "  Permissions.Anyone,",
              "  async (code, options) => {",
              "    try {",
              "      const result = await giftCards.getGiftCardByCodeV2(code, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getGiftCardByCodeV2"
    },
    {
      "name": "getProviderUrl",
      "params": [
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider",
          "required": true
        }
      ],
      "requiredFields": [
        "providerAppDefId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GetProviderUrlResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get gift card provider URL",
        "description": [],
        "examples": [
          {
            "title": "getProviderUrl example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function getProviderUrl(providerAppDefId) {",
              "  try {",
              "    const result = await giftCards.getProviderUrl(providerAppDefId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getProviderUrl example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getProviderUrl = webMethod(",
              "  Permissions.Anyone,",
              "  async (providerAppDefId) => {",
              "    try {",
              "      const result = await giftCards.getProviderUrl(providerAppDefId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getProviderUrl"
    },
    {
      "name": "getTransaction",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction id",
          "required": true
        }
      ],
      "requiredFields": [
        "_id"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.GetTransactionResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Get gift card transactions",
        "description": [],
        "examples": [
          {
            "title": "getTransaction example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function getTransaction(id) {",
              "  try {",
              "    const result = await giftCards.getTransaction(id);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getTransaction example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getTransaction = webMethod(",
              "  Permissions.Anyone,",
              "  async (id) => {",
              "    try {",
              "      const result = await giftCards.getTransaction(id);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getTransaction"
    },
    {
      "name": "listGiftCards",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ListGiftCardsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.ListGiftCardsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listGiftCards example for dashboard page code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function listGiftCards(options) {",
              "  try {",
              "    const result = await giftCards.listGiftCards(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "listGiftCards example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedListGiftCards = elevate(giftCards.listGiftCards);",
              "",
              "export const listGiftCards = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedListGiftCards(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listGiftCards",
      "isAdminMethod": true
    },
    {
      "name": "listTransactions",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ListTransactionsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.ListTransactionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listTransactions example for dashboard page code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function listTransactions(options) {",
              "  try {",
              "    const result = await giftCards.listTransactions(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "listTransactions example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedListTransactions = elevate(giftCards.listTransactions);",
              "",
              "export const listTransactions = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedListTransactions(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listTransactions",
      "isAdminMethod": true
    },
    {
      "name": "redeemGiftCard",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.RedeemGiftCardOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.RedeemGiftCardResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Redeem a gift card",
        "description": [],
        "examples": [
          {
            "title": "redeemGiftCard example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function redeemGiftCard(options) {",
              "  try {",
              "    const result = await giftCards.redeemGiftCard(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "redeemGiftCard example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const redeemGiftCard = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await giftCards.redeemGiftCard(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "redeemGiftCard"
    },
    {
      "name": "redeemGiftCardV2",
      "params": [
        {
          "name": "code",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.RedeemGiftCardV2Options"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "code",
        "options.amount",
        "options.providerAppDefId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.GiftCards.RedeemGiftCardResponseV2"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Redeem a gift card",
        "description": [],
        "examples": [
          {
            "title": "redeemGiftCardV2 example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function redeemGiftCardV2(code, options) {",
              "  try {",
              "    const result = await giftCards.redeemGiftCardV2(code, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "redeemGiftCardV2 example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const redeemGiftCardV2 = webMethod(",
              "  Permissions.Anyone,",
              "  async (code, options) => {",
              "    try {",
              "      const result = await giftCards.redeemGiftCardV2(code, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "redeemGiftCardV2"
    },
    {
      "name": "voidTransaction",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.VoidTransactionOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Void a gift card transaction",
        "description": [],
        "examples": [
          {
            "title": "voidTransaction example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function voidTransaction(options) {",
              "  try {",
              "    const result = await giftCards.voidTransaction(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "voidTransaction example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const voidTransaction = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await giftCards.voidTransaction(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "voidTransaction"
    },
    {
      "name": "voidTransactionV2",
      "params": [
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the gift card transaction",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.VoidTransactionV2Options"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.providerAppDefId",
        "transactionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Void a gift card transaction",
        "description": [],
        "examples": [
          {
            "title": "voidTransactionV2 example",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "",
              "async function voidTransactionV2(transactionId, options) {",
              "  try {",
              "    const result = await giftCards.voidTransactionV2(transactionId, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "voidTransactionV2 example for exporting from backend code",
            "body": [
              "import { giftCards } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const voidTransactionV2 = webMethod(",
              "  Permissions.Anyone,",
              "  async (transactionId, options) => {",
              "    try {",
              "      const result = await giftCards.voidTransactionV2(transactionId, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "voidTransactionV2"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Asset",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An application definition id (app_id in dev-center). For legacy reasons may be UUID or a string (from Java Enum)."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An instance id. For legacy reasons may be UUID or a string."
        },
        {
          "name": "state",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An application state."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Balance",
      "members": [
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateGiftCardRequest",
      "members": [
        {
          "name": "giftCardData",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCardData"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateGiftCardResponse",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DBGiftCard",
      "members": [
        {
          "name": "_createdDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "balance",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "providerAppDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DBTransaction",
      "members": [
        {
          "name": "_createdDate",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "buyerMemberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "buyerVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "giftCardId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "providerAppDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "providerTransactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteContext",
      "members": [
        {
          "name": "dateDeleted",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "When the meta site was deleted."
        },
        {
          "name": "deleteOrigin",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A reason (flow)."
        },
        {
          "name": "deleteStatus",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A status."
        },
        {
          "name": "initiatorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A service that deleted it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeOptions",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeRequest",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeRequestV2",
      "members": [
        {
          "name": "code",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code"
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeResponse",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeResponseV2",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardByCodeV2Options",
      "members": [
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGiftCardResponse",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetProviderUrlRequest",
      "members": [
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetProviderUrlResponse",
      "members": [
        {
          "name": "providerUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Dashboard URL of the gift card provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetResponse",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.DBGiftCard"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTransactionRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTransactionResponse",
      "members": [
        {
          "name": "transaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Transaction"
            }
          ],
          "doc": "Transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GiftCard",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card unique id"
        },
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        },
        {
          "name": "balance",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Balance"
            }
          ],
          "doc": "The gift card currency balance"
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code of the Gift Card"
        },
        {
          "name": "obfuscatedCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card obfuscated code"
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift card status"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GiftCardData",
      "members": [
        {
          "name": "balance",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Gift Card initial balance"
        },
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card unique code"
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code of the Gift Card"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "External orderId by the Gift Card provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GiftCardProviderWasProvisioned",
      "members": [
        {
          "name": "providerAppDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The gift card provider which was installed"
        },
        {
          "name": "providerInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListGiftCardsOptions",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Query"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListGiftCardsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Query"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListGiftCardsResponse",
      "members": [
        {
          "name": "giftCards",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.GiftCards.DBGiftCard"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTransactionsOptions",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Query"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTransactionsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Query"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListTransactionsResponse",
      "members": [
        {
          "name": "transactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.GiftCards.DBTransaction"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MetaSiteSpecialEvent",
      "members": [
        {
          "name": "assets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.GiftCards.Asset"
                  }
                ]
              }
            }
          ],
          "doc": "A list of \"assets\" (applications). The same as MetaSiteContext."
        },
        {
          "name": "hardDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteHardDeleted"
            }
          ],
          "doc": "Emitted when meta site was permanently deleted."
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A meta site id."
        },
        {
          "name": "namespaceChanged",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.NamespaceChanged"
            }
          ],
          "doc": "Emitted on a namespace change."
        },
        {
          "name": "serviceProvisioned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ServiceProvisioned"
            }
          ],
          "doc": "Emitted when an application is provisioned (installed)."
        },
        {
          "name": "serviceRemoved",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ServiceRemoved"
            }
          ],
          "doc": "Emitted when an application is removed (uninstalled)."
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteCreated"
            }
          ],
          "doc": "Emitted on a meta site creation."
        },
        {
          "name": "siteDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteDeleted"
            }
          ],
          "doc": "Emitted on a meta site deletion."
        },
        {
          "name": "siteMarkedAsTemplate",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteMarkedAsTemplate"
            }
          ],
          "doc": "Emitted when meta site is marked as template."
        },
        {
          "name": "siteMarkedAsWixSite",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteMarkedAsWixSite"
            }
          ],
          "doc": "Emitted when meta site is marked as a WixSite."
        },
        {
          "name": "sitePublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SitePublished"
            }
          ],
          "doc": "Emitted on the first* publish of the meta site (* switching from unpublished to published state)."
        },
        {
          "name": "siteRenamedPayload",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteRenamed"
            }
          ],
          "doc": "Emitted when meta site name (URL slug) is changed."
        },
        {
          "name": "siteTransferred",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteTransferred"
            }
          ],
          "doc": "Emitted on a meta site transfer completion."
        },
        {
          "name": "siteUndeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteUndeleted"
            }
          ],
          "doc": "Emitted on a meta site restoration."
        },
        {
          "name": "siteUnpublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteUnpublished"
            }
          ],
          "doc": "Emitted on a meta site unpublish."
        },
        {
          "name": "studioAssigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.StudioAssigned"
            }
          ],
          "doc": "Emitted when Studio is attached."
        },
        {
          "name": "studioUnassigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.StudioUnassigned"
            }
          ],
          "doc": "Emitted when Studio is detached."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A timestamp of the event."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A meta site version. Monotonically increasing."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfMetaSiteSpecialEventPayloadOneOf",
            "members": [
              "hardDeleted",
              "namespaceChanged",
              "serviceProvisioned",
              "serviceRemoved",
              "siteCreated",
              "siteDeleted",
              "siteMarkedAsTemplate",
              "siteMarkedAsWixSite",
              "sitePublished",
              "siteRenamedPayload",
              "siteTransferred",
              "siteUndeleted",
              "siteUnpublished",
              "studioAssigned",
              "studioUnassigned"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MetaSiteSpecialEventPayloadOneOf",
      "members": [
        {
          "name": "hardDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteHardDeleted"
            }
          ],
          "doc": "Emitted when meta site was permanently deleted."
        },
        {
          "name": "namespaceChanged",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.NamespaceChanged"
            }
          ],
          "doc": "Emitted on a namespace change."
        },
        {
          "name": "serviceProvisioned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ServiceProvisioned"
            }
          ],
          "doc": "Emitted when an application is provisioned (installed)."
        },
        {
          "name": "serviceRemoved",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.ServiceRemoved"
            }
          ],
          "doc": "Emitted when an application is removed (uninstalled)."
        },
        {
          "name": "siteCreated",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteCreated"
            }
          ],
          "doc": "Emitted on a meta site creation."
        },
        {
          "name": "siteDeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteDeleted"
            }
          ],
          "doc": "Emitted on a meta site deletion."
        },
        {
          "name": "siteMarkedAsTemplate",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteMarkedAsTemplate"
            }
          ],
          "doc": "Emitted when meta site is marked as template."
        },
        {
          "name": "siteMarkedAsWixSite",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteMarkedAsWixSite"
            }
          ],
          "doc": "Emitted when meta site is marked as a WixSite."
        },
        {
          "name": "sitePublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SitePublished"
            }
          ],
          "doc": "Emitted on the first* publish of the meta site (* switching from unpublished to published state)."
        },
        {
          "name": "siteRenamedPayload",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteRenamed"
            }
          ],
          "doc": "Emitted when meta site name (URL slug) is changed."
        },
        {
          "name": "siteTransferred",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteTransferred"
            }
          ],
          "doc": "Emitted on a meta site transfer completion."
        },
        {
          "name": "siteUndeleted",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteUndeleted"
            }
          ],
          "doc": "Emitted on a meta site restoration."
        },
        {
          "name": "siteUnpublished",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.SiteUnpublished"
            }
          ],
          "doc": "Emitted on a meta site unpublish."
        },
        {
          "name": "studioAssigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.StudioAssigned"
            }
          ],
          "doc": "Emitted when Studio is attached."
        },
        {
          "name": "studioUnassigned",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.StudioUnassigned"
            }
          ],
          "doc": "Emitted when Studio is detached."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Money",
      "members": [
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Currency code. Must be valid ISO 4217 currency code (e.g., USD)."
        },
        {
          "name": "formattedValue",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string in local format (e.g., 1 000,30). Optionally, a single (-), to indicate that the amount is negative."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative."
        }
      ],
      "docs": {
        "description": [
          "Money.\nDefault format to use. Sufficiently compliant with majority of standards: w3c, ISO 4217, ISO 20022, ISO 8583:2003."
        ]
      }
    },
    {
      "name": "NamespaceChanged",
      "members": [
        {
          "name": "newNamespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A new namespace."
        },
        {
          "name": "oldNamespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A previous namespace."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Query",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "any"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.GiftCards.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardOptions",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card unique id"
        },
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount to redeem from the gift card"
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code to redeem"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key for the current transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardRequest",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card unique id"
        },
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount to redeem from the gift card"
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code to redeem"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key for the current transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardRequestV2",
      "members": [
        {
          "name": "amount",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Money"
            }
          ],
          "doc": "Amount to redeem from the gift card"
        },
        {
          "name": "code",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card code"
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key for the current transaction"
        },
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardResponse",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the redemption transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardResponseV2",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the gift card transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemGiftCardV2Options",
      "members": [
        {
          "name": "amount",
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Money"
            }
          ],
          "doc": "Amount to redeem from the gift card"
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Idempotency key for the current transaction"
        },
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ServiceProvisioned",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Either UUID or EmbeddedServiceType."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Not only UUID. Something here could be something weird."
        },
        {
          "name": "originInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An instance id from which this instance is originated."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A version."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ServiceRemoved",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Either UUID or EmbeddedServiceType."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Not only UUID. Something here could be something weird."
        },
        {
          "name": "version",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A version."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteCreated",
      "members": [
        {
          "name": "context",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A context in which meta site was created."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A namespace."
        },
        {
          "name": "originMetaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A meta site id from which this site was created.\n\nIn case of a creation from a template it's a template id.\nIn case of a site duplication (\"Save As\" in dashboard or duplicate in UM) it's an id of a source site.\n"
        },
        {
          "name": "originTemplateId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A template identifier (empty if not created from a template)."
        },
        {
          "name": "ownerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "An account id of the owner."
        },
        {
          "name": "siteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A meta site name (URL slug)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteDeleted",
      "members": [
        {
          "name": "deleteContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.DeleteContext"
            }
          ],
          "doc": "A deletion context."
        }
      ],
      "docs": {
        "description": [
          "Soft deletion of the meta site. Could be restored."
        ]
      }
    },
    {
      "name": "SiteHardDeleted",
      "members": [
        {
          "name": "deleteContext",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.DeleteContext"
            }
          ],
          "doc": "A deletion context."
        }
      ],
      "docs": {
        "description": [
          "Hard deletion of the meta site."
        ]
      }
    },
    {
      "name": "SiteMarkedAsTemplate",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SiteMarkedAsWixSite",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SitePublished",
      "members": [],
      "docs": {
        "description": [
          "First publish of a meta site. Or subsequent publish after unpublish."
        ]
      }
    },
    {
      "name": "SiteRenamed",
      "members": [
        {
          "name": "newSiteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A new meta site name (URL slug)."
        },
        {
          "name": "oldSiteName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A previous meta site name (URL slug)."
        }
      ],
      "docs": {
        "description": [
          "Rename of the site. Meaning, free public url has been changed as well."
        ]
      }
    },
    {
      "name": "SiteTransferred",
      "members": [
        {
          "name": "newOwnerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A new owner id (user that accepts meta site)."
        },
        {
          "name": "oldOwnerId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A previous owner id (user that transfers meta site)."
        }
      ],
      "docs": {
        "description": [
          "Site transferred to another user."
        ]
      }
    },
    {
      "name": "SiteUndeleted",
      "members": [],
      "docs": {
        "description": [
          "Restoration of the meta site."
        ]
      }
    },
    {
      "name": "SiteUnpublished",
      "members": [
        {
          "name": "urls",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of URLs previously associated with the meta site."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StudioAssigned",
      "members": [],
      "docs": {
        "description": [
          "Assigned Studio editor"
        ]
      }
    },
    {
      "name": "StudioUnassigned",
      "members": [],
      "docs": {
        "description": [
          "Unassigned Studio editor"
        ]
      }
    },
    {
      "name": "Transaction",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction unique id"
        },
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount redeemed by the transaction"
        },
        {
          "name": "currencyCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code of the transaction"
        },
        {
          "name": "obfuscatedCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Gift Card obfuscated code"
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Order id of the transaction"
        },
        {
          "name": "providerAppDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        },
        {
          "name": "providerUrl",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The currency code of the Gift Card"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TransactionVoided",
      "members": [
        {
          "name": "giftCard",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.GiftCard"
            }
          ],
          "doc": "The gift card which the transaction applies to"
        },
        {
          "name": "transaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.GiftCards.Transaction"
            }
          ],
          "doc": "The transaction that was voided"
        }
      ],
      "docs": {
        "description": [
          "Triggered when a gift card transaction is voided"
        ]
      }
    },
    {
      "name": "VoidTransactionOptions",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the redemption transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VoidTransactionRequest",
      "members": [
        {
          "name": "transactionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the redemption transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VoidTransactionRequestV2",
      "members": [
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        },
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        },
        {
          "name": "transactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique id of the gift card transaction"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VoidTransactionResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VoidTransactionResponseV2",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "VoidTransactionV2Options",
      "members": [
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Physical location indicator\nThis field is required for Square integration as a gift card provider, and should not be used with other providers"
        },
        {
          "name": "providerAppDefId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App def id of the GiftCard provider"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
