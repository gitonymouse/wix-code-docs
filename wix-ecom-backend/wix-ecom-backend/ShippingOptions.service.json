{
  "name": "ShippingOptions",
  "memberOf": "wix-ecom-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-ecom-backend-shipping_option",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createShippingOption",
      "params": [
        {
          "name": "shippingOption",
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "ShippingOption to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "shippingOption"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
                }
              ]
            }
          }
        ],
        "doc": "The created ShippingOption.\n"
      },
      "docs": {
        "summary": "Creates a ShippingOption.",
        "description": [
          "The request body must include shipping option and delivery region associated to."
        ],
        "examples": [
          {
            "title": "createShippingOption example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function createShippingOption(shippingOption) {",
              "  try {",
              "    const result = await shippingOptions.createShippingOption(shippingOption);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createShippingOption example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateShippingOption = elevate(shippingOptions.createShippingOption);",
              "",
              "export const createShippingOption = webMethod(",
              "  Permissions.Anyone,",
              "  async (shippingOption) => {",
              "    try {",
              "      const result = await elevatedCreateShippingOption(shippingOption);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createShippingOption",
      "isAdminMethod": true
    },
    {
      "name": "deleteShippingOption",
      "params": [
        {
          "name": "shippingOptionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the ShippingOption to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "shippingOptionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a ShippingOption.\nDeleting a ShippingOption permanently removes them from the ShippingOption List.",
        "description": [],
        "examples": [
          {
            "title": "deleteShippingOption example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function deleteShippingOption(shippingOptionId) {",
              "  try {",
              "    const result = await shippingOptions.deleteShippingOption(shippingOptionId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteShippingOption example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteShippingOption = elevate(shippingOptions.deleteShippingOption);",
              "",
              "export const deleteShippingOption = webMethod(",
              "  Permissions.Anyone,",
              "  async (shippingOptionId) => {",
              "    try {",
              "      const result = await elevatedDeleteShippingOption(shippingOptionId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteShippingOption",
      "isAdminMethod": true
    },
    {
      "name": "getShippingOption",
      "params": [
        {
          "name": "shippingOptionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the ShippingOption to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "shippingOptionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
                }
              ]
            }
          }
        ],
        "doc": "The requested ShippingOption.\n"
      },
      "docs": {
        "summary": "Retrieves a ShippingOption.",
        "description": [],
        "examples": [
          {
            "title": "getShippingOption example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function getShippingOption(shippingOptionId) {",
              "  try {",
              "    const result = await shippingOptions.getShippingOption(shippingOptionId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getShippingOption example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetShippingOption = elevate(shippingOptions.getShippingOption);",
              "",
              "export const getShippingOption = webMethod(",
              "  Permissions.Anyone,",
              "  async (shippingOptionId) => {",
              "    try {",
              "      const result = await elevatedGetShippingOption(shippingOptionId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getShippingOption",
      "isAdminMethod": true
    },
    {
      "name": "queryShippingOptions",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of ShippingOptions, given the provided [paging, filtering, and sorting][1].",
        "description": [
          "",
          "Up to 1,000 ShippingOptions can be returned per request.",
          "",
          "To learn how to query ShippingOptions, see [API Query Language][2].",
          "",
          "[1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging",
          "[2]: https://dev.wix.com/api/rest/getting-started/api-query-language",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#eq),[`ne()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#ne),[`exists()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#exists),[`in()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#descending)|",
          "|`deliveryRegionId`|[`eq()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#eq),[`ne()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#ne),[`exists()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#exists),[`in()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.ShippingOptions.ShippingOptionsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryShippingOptions example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function queryShippingOptions() {",
              "  const { items } = shippingOptions.queryShippingOptions().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryShippingOptions example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedQueryShippingOptions = elevate(shippingOptions.queryShippingOptions);",
              "",
              "export const queryShippingOptions = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedQueryShippingOptions(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryShippingOptions",
      "isAdminMethod": true
    },
    {
      "name": "updateExtendedFields",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity to update.",
          "required": true
        },
        {
          "name": "namespace",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Identifier for the app whose extended fields are being updated.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.UpdateExtendedFieldsOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "namespace",
        "options",
        "options.namespaceData"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.ShippingOptions.UpdateExtendedFieldsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates extended fields of a ShippingOption without incrementing revision",
        "description": [],
        "examples": [
          {
            "title": "updateExtendedFields example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function updateExtendedFields(id, namespace, options) {",
              "  try {",
              "    const result = await shippingOptions.updateExtendedFields(id, namespace, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateExtendedFields example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateExtendedFields = elevate(shippingOptions.updateExtendedFields);",
              "",
              "export const updateExtendedFields = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, namespace, options) => {",
              "    try {",
              "      const result = await elevatedUpdateExtendedFields(id, namespace, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateExtendedFields",
      "isAdminMethod": true
    },
    {
      "name": "updateShippingOption",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ShippingOption ID.",
          "required": true
        },
        {
          "name": "shippingOption",
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.UpdateShippingOption"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "shippingOption",
        "shippingOption.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
                }
              ]
            }
          }
        ],
        "doc": "Updated ShippingOption.\n"
      },
      "docs": {
        "summary": "Updates a ShippingOption.",
        "description": [
          "Each time the ShippingOption is updated,\n`revision` increments by 1.\nThe current `revision` must be passed when updating the ShippingOption.\nThis ensures you're working with the latest ShippingOption\nand prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "updateShippingOption example for dashboard page code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "",
              "async function updateShippingOption(id, shippingOption, options) {",
              "  try {",
              "    const result = await shippingOptions.updateShippingOption(id, shippingOption, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateShippingOption example for exporting from backend code",
            "body": [
              "import { shippingOptions } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateShippingOption = elevate(shippingOptions.updateShippingOption);",
              "",
              "export const updateShippingOption = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, shippingOption, options) => {",
              "    try {",
              "      const result = await elevatedUpdateShippingOption(id, shippingOption, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateShippingOption",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Condition",
      "members": [
        {
          "name": "operator",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'EQ'`\n- `'GT'`\n- `'GTE'`\n- `'LT'`\n- `'LTE'`\n- `'UNKNOWN_LOGICAL_OPERATOR_TYPE'`"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'BY_TOTAL_PRICE'`\n- `'BY_TOTAL_QUANTITY'`\n- `'BY_TOTAL_WEIGHT'`\n- `'UNKNOWN_TYPE'`"
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The value in respective to the condition type\nWeight values should be in the same weight units of the store: KG / LB\nTotal price is according to the store currency\nQuantity of items should be integers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConditionalRates",
      "members": [
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "conditions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.ShippingOptions.Condition"
                  }
                ]
              }
            }
          ],
          "doc": "there is an AND logic between all the conditions. Empty conditions means true.\nFor example: weight > 0 and weight <= 10"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateShippingOptionRequest",
      "members": [
        {
          "name": "shippingOption",
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "ShippingOption to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateShippingOptionResponse",
      "members": [
        {
          "name": "shippingOption",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "The created ShippingOption."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.Cursors"
            }
          ],
          "doc": "Cursor strings that point to the next page, previous page, or both."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.ShippingOptions.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteShippingOptionRequest",
      "members": [
        {
          "name": "shippingOptionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the ShippingOption to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteShippingOptionResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFields",
      "members": [
        {
          "name": "namespaces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "Object"
                  }
                ]
              }
            }
          ],
          "doc": "Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n\nLearn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetShippingOptionRequest",
      "members": [
        {
          "name": "shippingOptionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the ShippingOption to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetShippingOptionResponse",
      "members": [
        {
          "name": "shippingOption",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "The requested ShippingOption."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryShippingOptionsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.CursorQuery"
            }
          ],
          "doc": "WQL expression."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryShippingOptionsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        },
        {
          "name": "shippingOptions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
                  }
                ]
              }
            }
          ],
          "doc": "List of ShippingOptions."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ShippingOption",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the ShippingOption was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ShippingOption ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the ShippingOption was last updated."
        },
        {
          "name": "deliveryRegionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Associated delivery region id."
        },
        {
          "name": "estimateDeliveryTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ExtendedFields"
            }
          ],
          "doc": "Data Extensions"
        },
        {
          "name": "rates",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.ShippingOptions.ConditionalRates"
                  }
                ]
              }
            }
          ],
          "doc": "at runtime for a given shipment input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the ShippingOption is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the ShippingOption.\n\nIgnored when creating a ShippingOption."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Delivery option configured for the ShippingOption"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExtendedFieldsOptions",
      "members": [
        {
          "name": "namespaceData",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExtendedFieldsRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity to update."
        },
        {
          "name": "namespace",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Identifier for the app whose extended fields are being updated."
        },
        {
          "name": "namespaceData",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateExtendedFieldsResponse",
      "members": [
        {
          "name": "shippingOption",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "Updated ShippingOption."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateShippingOption",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the ShippingOption was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ShippingOption ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the ShippingOption was last updated."
        },
        {
          "name": "deliveryRegionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Associated delivery region id."
        },
        {
          "name": "estimateDeliveryTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ExtendedFields"
            }
          ],
          "doc": "Data Extensions"
        },
        {
          "name": "rates",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.ShippingOptions.ConditionalRates"
                  }
                ]
              }
            }
          ],
          "doc": "at runtime for a given shipment input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the ShippingOption is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the ShippingOption.\n\nIgnored when creating a ShippingOption."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Delivery option configured for the ShippingOption"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateShippingOptionOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateShippingOptionRequest",
      "members": [
        {
          "name": "shippingOption",
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "ShippingOption to be updated, may be partial."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateShippingOptionResponse",
      "members": [
        {
          "name": "shippingOption",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.ShippingOptions.ShippingOption"
            }
          ],
          "doc": "Updated ShippingOption."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
