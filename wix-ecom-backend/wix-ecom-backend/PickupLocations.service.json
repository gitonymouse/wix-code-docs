{
  "name": "PickupLocations",
  "memberOf": "wix-ecom-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-ecom-backend-pickup_location",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreatePickupLocation",
      "params": [
        {
          "name": "pickupLocations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocations",
        "pickupLocations.address",
        "pickupLocations.shippingRuleId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.BulkCreatePickupLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Bulk Create for new PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "bulkCreatePickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function bulkCreatePickupLocation(pickupLocations) {",
              "  try {",
              "    const result = await pickupLocations.bulkCreatePickupLocation(pickupLocations);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkCreatePickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkCreatePickupLocation = elevate(pickupLocations.bulkCreatePickupLocation);",
              "",
              "export const bulkCreatePickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocations) => {",
              "    try {",
              "      const result = await elevatedBulkCreatePickupLocation(pickupLocations);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreatePickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeletePickupLocation",
      "params": [
        {
          "name": "pickupLocationIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocationIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.BulkDeletePickupLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete a PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "bulkDeletePickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function bulkDeletePickupLocation(pickupLocationIds) {",
              "  try {",
              "    const result = await pickupLocations.bulkDeletePickupLocation(pickupLocationIds);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkDeletePickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkDeletePickupLocation = elevate(pickupLocations.bulkDeletePickupLocation);",
              "",
              "export const bulkDeletePickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocationIds) => {",
              "    try {",
              "      const result = await elevatedBulkDeletePickupLocation(pickupLocationIds);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDeletePickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdatePickupLocation",
      "params": [
        {
          "name": "pickupLocations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocations",
        "pickupLocations._id",
        "pickupLocations.shippingRuleId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.BulkUpdatePickupLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Update a PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "bulkUpdatePickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function bulkUpdatePickupLocation(pickupLocations) {",
              "  try {",
              "    const result = await pickupLocations.bulkUpdatePickupLocation(pickupLocations);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkUpdatePickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkUpdatePickupLocation = elevate(pickupLocations.bulkUpdatePickupLocation);",
              "",
              "export const bulkUpdatePickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocations) => {",
              "    try {",
              "      const result = await elevatedBulkUpdatePickupLocation(pickupLocations);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdatePickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "createPickupLocation",
      "params": [
        {
          "name": "pickupLocation",
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "PickupLocation to be created",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocation",
        "pickupLocation.address",
        "pickupLocation.shippingRuleId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                }
              ]
            }
          }
        ],
        "doc": "The created PickupLocation\n"
      },
      "docs": {
        "summary": "Creates a new PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "createPickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function createPickupLocation(pickupLocation) {",
              "  try {",
              "    const result = await pickupLocations.createPickupLocation(pickupLocation);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createPickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreatePickupLocation = elevate(pickupLocations.createPickupLocation);",
              "",
              "export const createPickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocation) => {",
              "    try {",
              "      const result = await elevatedCreatePickupLocation(pickupLocation);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createPickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "deletePickupLocation",
      "params": [
        {
          "name": "pickupLocationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the PickupLocation to delete",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocationId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete a PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "deletePickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function deletePickupLocation(pickupLocationId) {",
              "  try {",
              "    const result = await pickupLocations.deletePickupLocation(pickupLocationId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deletePickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeletePickupLocation = elevate(pickupLocations.deletePickupLocation);",
              "",
              "export const deletePickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocationId) => {",
              "    try {",
              "      const result = await elevatedDeletePickupLocation(pickupLocationId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deletePickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "getPickupLocation",
      "params": [
        {
          "name": "pickupLocationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the PickupLocation to retrieve",
          "required": true
        }
      ],
      "requiredFields": [
        "pickupLocationId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved PickupLocation\n"
      },
      "docs": {
        "summary": "Get a PickupLocation by id",
        "description": [],
        "examples": [
          {
            "title": "getPickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function getPickupLocation(pickupLocationId) {",
              "  try {",
              "    const result = await pickupLocations.getPickupLocation(pickupLocationId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getPickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetPickupLocation = elevate(pickupLocations.getPickupLocation);",
              "",
              "export const getPickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (pickupLocationId) => {",
              "    try {",
              "      const result = await elevatedGetPickupLocation(pickupLocationId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getPickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "queryPickupLocation",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Query PickupLocations using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)",
        "description": [
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`shippingRuleId`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`lt()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#lt),[`le()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#le),[`gt()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#gt),[`ge()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ge),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`lt()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#lt),[`le()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#le),[`gt()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#gt),[`ge()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ge),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`address.country`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`address.subdivision`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|",
          "|`address.city`|[`eq()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#eq),[`ne()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ne),[`exists()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#exists),[`in()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#in),[`hasSome()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#hasSome),[`startsWith()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#startsWith),[`ascending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#ascending),[`descending()`](wix-ecom-backend.PickupLocations.PickupLocationsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryPickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function queryPickupLocation() {",
              "  const { items } = pickupLocations.queryPickupLocation().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryPickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedQueryPickupLocation = elevate(pickupLocations.queryPickupLocation);",
              "",
              "export const queryPickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (query) => {",
              "    try {",
              "      const result = await elevatedQueryPickupLocation(query);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryPickupLocation",
      "isAdminMethod": true
    },
    {
      "name": "updatePickupLocation",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "PickupLocation ID",
          "required": true
        },
        {
          "name": "pickupLocation",
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.UpdatePickupLocation"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "pickupLocation",
        "pickupLocation.shippingRuleId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                }
              ]
            }
          }
        ],
        "doc": "The updated PickupLocation\n"
      },
      "docs": {
        "summary": "Update a PickupLocation",
        "description": [],
        "examples": [
          {
            "title": "updatePickupLocation example for dashboard page code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "",
              "async function updatePickupLocation(id, pickupLocation) {",
              "  try {",
              "    const result = await pickupLocations.updatePickupLocation(id, pickupLocation);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updatePickupLocation example for exporting from backend code",
            "body": [
              "import { pickupLocations } from 'wix-ecom-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdatePickupLocation = elevate(pickupLocations.updatePickupLocation);",
              "",
              "export const updatePickupLocation = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, pickupLocation) => {",
              "    try {",
              "      const result = await elevatedUpdatePickupLocation(id, pickupLocation);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updatePickupLocation",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Country code."
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Zip/postal code."
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.StreetAddress"
            }
          ],
          "doc": "Street name and number."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.StreetAddress"
            }
          ],
          "doc": "Street name and number."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreatePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreatePickupLocationResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocationError"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "pickupLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeletePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocationIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeletePickupLocationResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocationError"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdatePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocations",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdatePickupLocationResponse",
      "members": [
        {
          "name": "errors",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocationError"
                  }
                ]
              }
            }
          ],
          "doc": ""
        },
        {
          "name": "pickupLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Condition",
      "members": [
        {
          "name": "operator",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'EQ'`\n- `'GT'`\n- `'GTE'`\n- `'LT'`\n- `'LTE'`\n- `'UNKNOWN_LOGICAL_OPERATOR_TYPE'`"
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'BY_TOTAL_PRICE'`\n- `'BY_TOTAL_QUANTITY'`\n- `'BY_TOTAL_WEIGHT'`\n- `'UNKNOWN_TYPE'`"
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The value in respective to the condition type\nWeight values should be in the same weight units of the store: KG / LB\nTotal price is according to the store currency\nQuantity of items should be integers"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConditionalRates",
      "members": [
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "conditions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.Condition"
                  }
                ]
              }
            }
          ],
          "doc": "there is an AND logic between all the conditions. Empty conditions means true.\nFor example: weight > 0 and weight <= 10"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocation",
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "PickupLocation to be created"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreatePickupLocationResponse",
      "members": [
        {
          "name": "pickupLocation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "The created PickupLocation"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.Cursors"
            }
          ],
          "doc": "Cursor strings that point to the next page, previous page, or both."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the PickupLocation to delete"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeletePickupLocationResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DiffmatokyPayload",
      "members": [
        {
          "name": "compareChannel",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "errorInformation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.ErrorInformation"
            }
          ],
          "doc": ""
        },
        {
          "name": "left",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "right",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ErrorInformation",
      "members": [
        {
          "name": "stackTrace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPickupLocationRequest",
      "members": [
        {
          "name": "pickupLocationId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the PickupLocation to retrieve"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetPickupLocationResponse",
      "members": [
        {
          "name": "pickupLocation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "The retrieved PickupLocation"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PickupLocation",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this PickupLocation was created"
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "PickupLocation ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this PickupLocation was last updated"
        },
        {
          "name": "active",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "inactive pickup locations should not be shown in checkout"
        },
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.Address"
            }
          ],
          "doc": "Pickup Location Address"
        },
        {
          "name": "deliveryTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Expected delivery time in free text. For example, `\"3-5 business days\"`."
        },
        {
          "name": "instructions",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instructions for carrier. For example, `\"Please knock on the door. If unanswered, please call contact number. Thanks.\"`."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pickup Location Name"
        },
        {
          "name": "rates",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.ConditionalRates"
                  }
                ]
              }
            }
          ],
          "doc": "at runtime for a given pickup input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision"
        },
        {
          "name": "shippingRuleId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ShippingRuleId from ecom"
        }
      ],
      "docs": {
        "description": [
          "PickupLocation is the main entity of PickupLocations that can be used for lorem ipsum dolor"
        ]
      }
    },
    {
      "name": "PickupLocationError",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.ApplicationError"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPickupLocationRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.QueryV2"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryPickupLocationResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        },
        {
          "name": "pickupLocations",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved PickupLocations"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePickupLocation",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this PickupLocation was created"
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "PickupLocation ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this PickupLocation was last updated"
        },
        {
          "name": "active",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "inactive pickup locations should not be shown in checkout"
        },
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.Address"
            }
          ],
          "doc": "Pickup Location Address"
        },
        {
          "name": "deliveryTime",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Expected delivery time in free text. For example, `\"3-5 business days\"`."
        },
        {
          "name": "instructions",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instructions for carrier. For example, `\"Please knock on the door. If unanswered, please call contact number. Thanks.\"`."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pickup Location Name"
        },
        {
          "name": "rates",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ecom-backend.PickupLocations.ConditionalRates"
                  }
                ]
              }
            }
          ],
          "doc": "at runtime for a given pickup input, up to one rate (price) should be returned in an option. If more than one rate is valid then we return the lowest one."
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision"
        },
        {
          "name": "shippingRuleId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ShippingRuleId from ecom"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePickupLocationRequest",
      "members": [
        {
          "name": "pickupLocation",
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "PickupLocation to be updated, may be partial"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdatePickupLocationResponse",
      "members": [
        {
          "name": "pickupLocation",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ecom-backend.PickupLocations.PickupLocation"
            }
          ],
          "doc": "The updated PickupLocation"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
