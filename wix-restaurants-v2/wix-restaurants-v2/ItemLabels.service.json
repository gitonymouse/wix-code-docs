{
  "name": "ItemLabels",
  "memberOf": "wix-restaurants-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-restaurants.v2-item_label",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "cloneLabels",
      "params": [
        {
          "name": "metaSiteId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The MetaSiteId to clone from.",
          "required": true
        }
      ],
      "requiredFields": [
        "metaSiteId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clone labels from a different metasite",
        "description": [],
        "examples": [
          {
            "title": "cloneLabels example for dashboard page code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function cloneLabels(metaSiteId) {",
              "  try {",
              "    const result = await itemLabels.cloneLabels(metaSiteId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "cloneLabels example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCloneLabels = elevate(itemLabels.cloneLabels);",
              "",
              "export const cloneLabels = webMethod(",
              "  Permissions.Anyone,",
              "  async (metaSiteId) => {",
              "    try {",
              "      const result = await elevatedCloneLabels(metaSiteId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "cloneLabels",
      "isAdminMethod": true
    },
    {
      "name": "createLabel",
      "params": [
        {
          "name": "label",
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Item label details.",
          "required": true
        }
      ],
      "requiredFields": [
        "label"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-restaurants-v2.ItemLabels.Label"
                }
              ]
            }
          }
        ],
        "doc": "Item label.\n"
      },
      "docs": {
        "summary": "> **Note:** The Label API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "Creates an item Label."
        ],
        "examples": [
          {
            "title": "createLabel example for dashboard page code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function createLabel(label) {",
              "  try {",
              "    const result = await itemLabels.createLabel(label);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createLabel example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateLabel = elevate(itemLabels.createLabel);",
              "",
              "export const createLabel = webMethod(",
              "  Permissions.Anyone,",
              "  async (label) => {",
              "    try {",
              "      const result = await elevatedCreateLabel(label);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createLabel",
      "isAdminMethod": true
    },
    {
      "name": "deleteLabel",
      "params": [
        {
          "name": "labelId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item label.",
          "required": true
        }
      ],
      "requiredFields": [
        "labelId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "> **Note:** The Label API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "Deletes an Label."
        ],
        "examples": [
          {
            "title": "deleteLabel example for dashboard page code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function deleteLabel(labelId) {",
              "  try {",
              "    const result = await itemLabels.deleteLabel(labelId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteLabel example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteLabel = elevate(itemLabels.deleteLabel);",
              "",
              "export const deleteLabel = webMethod(",
              "  Permissions.Anyone,",
              "  async (labelId) => {",
              "    try {",
              "      const result = await elevatedDeleteLabel(labelId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteLabel",
      "isAdminMethod": true
    },
    {
      "name": "getLabel",
      "params": [
        {
          "name": "labelId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label ID.",
          "required": true
        }
      ],
      "requiredFields": [
        "labelId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-restaurants-v2.ItemLabels.Label"
                }
              ]
            }
          }
        ],
        "doc": "Item label.\n"
      },
      "docs": {
        "summary": "> **Note:** The Labels API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "Retrieves an item label by ID."
        ],
        "examples": [
          {
            "title": "getLabel example",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function getLabel(labelId) {",
              "  try {",
              "    const result = await itemLabels.getLabel(labelId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getLabel example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getLabel = webMethod(",
              "  Permissions.Anyone,",
              "  async (labelId) => {",
              "    try {",
              "      const result = await itemLabels.getLabel(labelId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getLabel"
    },
    {
      "name": "listLabels",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-restaurants-v2.ItemLabels.ListLabelsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "> **Note:** The Label API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "Retrieves a list of up to 500 item labels."
        ],
        "examples": [
          {
            "title": "listLabels example",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function listLabels() {",
              "  try {",
              "    const result = await itemLabels.listLabels();",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "listLabels example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const listLabels = webMethod(",
              "  Permissions.Anyone,",
              "  async () => {",
              "    try {",
              "      const result = await itemLabels.listLabels();",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "listLabels"
    },
    {
      "name": "queryLabels",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-restaurants-v2.ItemLabels.LabelsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "> **Note:** The Label API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "",
          "Retrieves a list of item labels given the provided paging, filtering, and sorting. Up to 500 labels can be returned per request.",
          "",
          "For a detailed list of supported operations, see the [Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/restaurants/menus/item-label/supported-filters-and-sorting) article. To learn how to query menus, see [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language).",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#eq),[`ne()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ne),[`in()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#in)|",
          "|`_createdDate`|[`eq()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#eq),[`ne()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ne),[`gt()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#gt),[`ge()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ge),[`lt()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#lt),[`le()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#le)|",
          "|`_updatedDate`|[`eq()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#eq),[`ne()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ne),[`gt()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#gt),[`ge()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ge),[`lt()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#lt),[`le()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#le)|",
          "|`name`|[`eq()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#eq),[`ne()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#ne),[`in()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#in),[`startsWith()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#startsWith)|",
          "|`icon`|[`exists()`](wix-restaurants-v2.ItemLabels.LabelsQueryBuilder#exists)|"
        ],
        "examples": [
          {
            "title": "queryLabels example",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function queryLabels() {",
              "  const { items } = itemLabels.queryLabels().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryLabels example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const queryLabels = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await itemLabels.queryLabels(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryLabels"
    },
    {
      "name": "updateLabel",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label ID.",
          "required": true
        },
        {
          "name": "label",
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.UpdateLabel"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "label",
        "label.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-restaurants-v2.ItemLabels.Label"
                }
              ]
            }
          }
        ],
        "doc": "Updated item label.\n"
      },
      "docs": {
        "summary": "> **Note:** The Label API only works with the Wix Restaurants Menus (New) app. Make sure you have installed this app from [Wix App Market](https://www.wix.com/app-market/wix-restaurants-menus-new).",
        "description": [
          "Updates an item Label.\n\nEach time an item label is updated, revision increments by 1. The existing revision must be included when updating the item labels. This ensures you're working with the latest item labels information, and it prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "updateLabel example for dashboard page code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "",
              "async function updateLabel(id, label, options) {",
              "  try {",
              "    const result = await itemLabels.updateLabel(id, label, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateLabel example for exporting from backend code",
            "body": [
              "import { itemLabels } from 'wix-restaurants.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateLabel = elevate(itemLabels.updateLabel);",
              "",
              "export const updateLabel = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, label, options) => {",
              "    try {",
              "      const result = await elevatedUpdateLabel(id, label, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateLabel",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "App",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The AppDefId"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance Id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CloneLabelsRequest",
      "members": [
        {
          "name": "metaSiteId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The MetaSiteId to clone from."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CloneLabelsResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateLabelRequest",
      "members": [
        {
          "name": "label",
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Item label details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateLabelResponse",
      "members": [
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-restaurants-v2.ItemLabels.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteLabelRequest",
      "members": [
        {
          "name": "labelId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteLabelResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFields",
      "members": [
        {
          "name": "namespaces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "Object"
                  }
                ]
              }
            }
          ],
          "doc": "Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n\nLearn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "File",
      "members": [
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by filename (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the file is related to"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLabelRequest",
      "members": [
        {
          "name": "labelId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLabelResponse",
      "members": [
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCache",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "localDc",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Is local DS"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidateCacheGetByOneOf",
            "members": [
              "app",
              "file",
              "metaSiteId",
              "page",
              "siteId",
              "uri"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheGetByOneOf",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Label",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the item label was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the item label was updated."
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.ExtendedFields"
            }
          ],
          "doc": "Extended fields."
        },
        {
          "name": "icon",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label icon."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label name."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the item label is updated. To prevent conflicting changes, the current revision must be passed when updating the item label. Ignored when creating a item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListLabelsRequest",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListLabelsResponse",
      "members": [
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-restaurants-v2.ItemLabels.Label"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved item labels."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Page",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the page is on"
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Page ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLabelsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.CursorQuery"
            }
          ],
          "doc": "Query options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLabelsResponse",
      "members": [
        {
          "name": "labels",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-restaurants-v2.ItemLabels.Label"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved item labels."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.CursorPagingMetadata"
            }
          ],
          "doc": "The metadata of the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "URI",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the URI is on"
        },
        {
          "name": "uriPath",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLabel",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the item label was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the item label was updated."
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.ExtendedFields"
            }
          ],
          "doc": "Extended fields."
        },
        {
          "name": "icon",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label icon."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item label name."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the item label is updated. To prevent conflicting changes, the current revision must be passed when updating the item label. Ignored when creating a item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLabelOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLabelRequest",
      "members": [
        {
          "name": "label",
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Item label to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateLabelResponse",
      "members": [
        {
          "name": "label",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-restaurants-v2.ItemLabels.Label"
            }
          ],
          "doc": "Updated item label."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
