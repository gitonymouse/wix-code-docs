{ "name": "Accordion",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ClickableMixin",
      "$w.ContainableMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Accordion.js" },
  "docs":
    { "summary": "A container that holds multiple collapsible [accordion item]($w.AccordionItem.html) elements.\n> This feature is currently only available in Editor X.",
      "description":
        [ "An accordion element holds",
          "multiple [accordion item]($w.AccordionItem.html) elements in a vertical stack, each with different content. One or more accordion items can be displayed at a time according to settings. ",
          "A site visitor can navigate between accordion items without leaving the page, by clicking an accordion item title.",
          "",
          "![Accordion Example](images/accordion.png \"Accordion Example\")",
          "",
          "With Velo, you can reverse the order of accordion items or navigate between them using code. You can also define event handlers that run when accordion item titles are clicked." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "expandedItems",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 59,
              "filename": "Accordion.js" },
            { "lineno": 73,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of expanded accordion items.",
            "description":
              [ "Gets a list of IDs of expanded accordion items or sets a list of expanded accordion items." ],
            "links": [],
            "examples":
              [ { "title": "Get a list of IDs of accordion items that are expanded",
                  "body":
                    [ "let  myExpandedItems = $w('#myAccordion').expandedItems;" ],
                  "extra":
                    {  } },
                { "title": "Set an accordion item as expanded by ID",
                  "body":
                    [ "let items = $w('#myAccordion').items;",
                      "$w('#myAccordion').expandedItems = [items[0].id];" ],
                  "extra":
                    {  } },
                { "title": "Set all accordion items as collapsed",
                  "body":
                    [ "$w('#myAccordion').expandedItems = [];" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.AccordionItem" ] },
        "locations":
          [ { "lineno": 38,
              "filename": "Accordion.js" },
            { "lineno": 53,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of the accordion items contained in an accordion element.",
            "description":
              [ "The accordion items list is in the same order as the accordion items appear.",
                "Each of the items is an object containing item ID and item label." ],
            "links": [],
            "examples":
              [ { "title": "Get a list of accordion items in an accordion element",
                  "body":
                    [ "let myItems = $w(\"#myAccordion\").items;" ],
                  "extra":
                    {  } },
                { "title": "Set list of accordion items in an accordion element",
                  "body":
                    [ "$w(\"#myAccordion\").items = [item1];" ],
                  "extra":
                    {  } },
                { "title": "Reverse order of accordion items in an accordion element",
                  "body":
                    [ "$w('#myAccordion').items = items.reverse();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "multipleExpand",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 79,
              "filename": "Accordion.js" },
            { "lineno": 93,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Sets if multiple accordion items can be expanded at one time.",
            "description":
              [ "Sets if you can have multiple accordion items expanded concurrently or only one accordion item expanded at a time." ],
            "links": [],
            "examples":
              [ { "title": "Get whether an accordion can expand multiple items",
                  "body":
                    [ "let  myExpandedItems = $w('#myAccordion').expandedItems; //true" ],
                  "extra":
                    {  } },
                { "title": "Set an accordion to expand multiple items",
                  "body":
                    [ "$w(\"#myAccordion\").multipleExpand = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClicked",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventHandler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when a site visitor clicks an accordion item title." } ],
        "ret":
          { "type": "$w.Accordion",
            "doc": "The accordion element on which the event is registered." },
        "locations":
          [ { "lineno": 22,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when any accordion item title is clicked.",
            "description":
              [ "`onItemClicked()` runs when a site visitor clicks on an accordion item title in an accordion element." ],
            "links":
              [ "[`onChange()`](#onChange)" ],
            "examples":
              [ { "title": "Get the ID of the accordion item whose title was clicked",
                  "body":
                    [ "$w(\"#myAccordionElement\").onItemClicked((event) => {",
                      " let itemClicked = event.items.id ; // \"item3\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }