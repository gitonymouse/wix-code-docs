{ "name": "Accordion",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ClickableMixin",
      "$w.ContainableMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Accordion.js" },
  "docs":
    { "summary": "A container that holds multiple collapsible accordion item elements.",
      "description":
        [ "> This feature is currently only available in Editor X.",
          "",
          "An accordion element holds",
          "multiple [accordion item]($w.AccordionItem.html) elements in a vertical stack, each with ",
          "different content. One or more accordion items can be expanded at a time according to settings. ",
          "A site visitor can expand and collapse accordion items by clicking an accordion item title.",
          "",
          "![Accordion Example](images/accordion.png \"Accordion Example\")",
          "",
          "",
          "With Velo, you can change the order of accordion items or expand and collapse them using code. You can also use event handlers that run when accordion item titles are clicked." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "expandedItems",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 69,
              "filename": "Accordion.js" },
            { "lineno": 85,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of IDs of expanded accordion items.",
            "description":
              [ "Set `expandedItems` to an empty array (`[]`) to collapse any open accordion items.  ",
                "",
                "Getting the `expandedItems` property returns the list of IDs of expanded accordion items." ],
            "links": [],
            "examples":
              [ { "title": "Get a list of IDs of accordion items that are expanded",
                  "body":
                    [ "let  myExpandedItems = $w('#myAccordion').expandedItems;" ],
                  "extra":
                    {  } },
                { "title": "Expand the first accordion item, and collapses any open accordion items",
                  "body":
                    [ "let items = $w('#myAccordion').items;",
                      "let firstItem = items[0];",
                      "$w('#myAccordion').expandedItems = [firstItem.id];" ],
                  "extra":
                    {  } },
                { "title": "Set all accordion items as collapsed",
                  "body":
                    [ "$w('#myAccordion').expandedItems = [];" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Accordion.Item" ] },
        "locations":
          [ { "lineno": 47,
              "filename": "Accordion.js" },
            { "lineno": 63,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of the items contained in an accordion element.",
            "description":
              [ "The items list is in the same order as the accordion items appear.",
                "Each of the items is an object that represents an accordion item. Each items object ",
                "consists of an item ID and an item label." ],
            "links": [],
            "examples":
              [ { "title": "Get list of items in an accordion element",
                  "body":
                    [ "let myItems = $w(\"#myAccordion\").items;" ],
                  "extra":
                    {  } },
                { "title": "Set list of items in an accordion element",
                  "body":
                    [ "let items = $w('#myAccordion').items;",
                      "let item1 = [items[0]];",
                      "$w('#myAccordion').items = item1;" ],
                  "extra":
                    {  } },
                { "title": "Reverse order of items in an accordion element",
                  "body":
                    [ "let myItems = $w('#myAccordion').items",
                      "$w('#myAccordion').items = myItems.reverse();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "multipleExpand",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 91,
              "filename": "Accordion.js" },
            { "lineno": 106,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets if multiple accordion items can be expanded at one time.",
            "description":
              [ "Gets or sets if you can have multiple accordion items expanded concurrently or only one accordion item expanded at a time.",
                "When set to `false` and accordionItem1 is open, when you expand accordionItem2, accordionItem1 collapses." ],
            "links": [],
            "examples":
              [ { "title": "Get whether an accordion can expand multiple items",
                  "body":
                    [ "let isMultipleExpand = $w(\"#myAccordion\").multipleExpand;" ],
                  "extra":
                    {  } },
                { "title": "Set an accordion to expand multiple items",
                  "body":
                    [ "$w(\"#myAccordion\").multipleExpand = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClicked",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventHandler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when a site visitor clicks an accordion item title." } ],
        "ret":
          { "type": "$w.Accordion",
            "doc": "The accordion element on which the event is registered." },
        "locations":
          [ { "lineno": 25,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when an accordion item title is clicked.",
            "description":
              [ "`onItemClicked()` runs when a site visitor clicks on an accordion item title in an accordion element." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID of the accordion item whose title was clicked",
                  "body":
                    [ "$w(\"#myAccordionItem\").onItemClicked((event) => {",
                      "  let itemClicked = event.id ; // \"item3\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Item",
        "locations":
          [ { "lineno": 40,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "An object used by the `items` property that contains the attributes of an accordion item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "id",
              "type": "string",
              "doc": "The ID of the accordion item.",
              "optional": true },
            { "name": "label",
              "type": "string",
              "doc": "The label of the accordion item. This is what a user sees.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }