{ "name": "Accordion",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ClickableMixin",
      "$w.ContainableMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Accordion.js" },
  "docs":
    { "summary": "A container that holds multiple collapsible accordion item elements.",
      "description":
        [ "> This feature is currently only available in Editor X.",
          "",
          "An accordion element holds",
          "multiple [accordion item]($w.AccordionItem.html) elements in a vertical stack, each with ",
          "different content. One or more accordion items can be expanded at a time according to settings. ",
          "A site visitor can expand and collapse accordion items by clicking an accordion item title.",
          "",
          "![Accordion Example](images/accordion.png \"Accordion Example\")",
          "",
          "",
          "With Velo, you can change the order of accordion items or expand and collapse them using code. You can also use event handlers that run when accordion item titles are clicked." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "expandedItems",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "string" ] },
        "locations":
          [ { "lineno": 63,
              "filename": "Accordion.js" },
            { "lineno": 79,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of IDs of expanded accordion items.",
            "description":
              [ "Gets a list of IDs of expanded accordion items or sets a list of expanded accordion items.",
                "> **Notes:**",
                "> When `multipleExpand` is set to `false`, multiple accordion items cannot be expanded concurrently." ],
            "links": [],
            "examples":
              [ { "title": "Get a list of IDs of accordion items that are expanded",
                  "body":
                    [ "let  myExpandedItems = $w('#accordion1').expandedItems;" ],
                  "extra":
                    {  } },
                { "title": "Set an accordion item as expanded by ID",
                  "body":
                    [ "let items = $w('#accordion1').items;",
                      "$w('#accordion1').expandedItems = [items[0].id];" ],
                  "extra":
                    {  } },
                { "title": "Set all accordion items as collapsed",
                  "body":
                    [ "$w('#accordion1').expandedItems = [];" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": true,
        "type": "Object",
        "locations":
          [ { "lineno": 41,
              "filename": "Accordion.js" },
            { "lineno": 57,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Gets or sets a list of the items contained in an accordion element.",
            "description":
              [ "The items list is in the same order as the accordion items appear.",
                "Each of the items is an object that represents an accordion item. Each items object ",
                "consists of an item ID and an item label." ],
            "links": [],
            "examples":
              [ { "title": "Get a list of items in an accordion element",
                  "body":
                    [ "let myItems = $w(\"#accordion1\").items;" ],
                  "extra":
                    {  } },
                { "title": "Set list of items in an accordion element",
                  "body":
                    [ "let items = $w('#accordion1').items;",
                      "$w(\"#accordion1\").items = [item1];" ],
                  "extra":
                    {  } },
                { "title": "Reverse order of items in an accordion element",
                  "body":
                    [ "let myItems = $w('#myAccordion').items",
                      "$w('#accordion1').items = myItems.reverse();" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "multipleExpand",
        "labels": [],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 85,
              "filename": "Accordion.js" },
            { "lineno": 99,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Sets if multiple accordion items can be expanded at one time.",
            "description":
              [ "Sets if you can have multiple accordion items expanded concurrently or only one accordion item expanded at a time." ],
            "links": [],
            "examples":
              [ { "title": "Get whether an accordion can expand multiple items",
                  "body":
                    [ "let isMultipleExpand = $w(\"#accordion1\").multipleExpand;" ],
                  "extra":
                    {  } },
                { "title": "Set an accordion to expand multiple items",
                  "body":
                    [ "$w(\"#accordion1\").multipleExpand = true;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onItemClicked",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "eventHandler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\nthe function expression to run when a site visitor clicks an accordion item title." } ],
        "ret":
          { "type": "$w.Accordion",
            "doc": "The accordion element on which the event is registered." },
        "locations":
          [ { "lineno": 25,
              "filename": "Accordion.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when an accordion item title is clicked.",
            "description":
              [ "`onItemClicked()` runs when a site visitor clicks on an accordion item title in an accordion element." ],
            "links":
              [ "[`onChange()`](#onChange)" ],
            "examples":
              [ { "title": "Get the ID of the accordion item whose title was clicked",
                  "body":
                    [ "$w(\"#accordionItem1\").onItemClicked((event) => {",
                      " let itemClicked = event.id ; // \"item3\"",
                      "});" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "click" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }