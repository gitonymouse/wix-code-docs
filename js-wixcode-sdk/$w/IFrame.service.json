{ "name": "IFrame",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "IFrame.js" },
  "docs":
    { "summary": "Provides functionality for iframe-based elements, such as [`HtmlComponent`]($w.HtmlComponent.html).",
      "description":
        [ "The HTML [iFrame](https://dev.wix.com/docs/develop-websites/articles/wix-editor-elements/other-elements/html-i-frame-element/working-with-the-html-iframe-element)",
          "element is used to embed and display external visual content or custom HTML code. ",
          "",
          "It supports communication ",
          "between the your page code and the code in an iFrame element using the",
          "[`postMessage()`](#postMessage) and [`onMessage()`](#onMessage) functions." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "scrolling",
        "labels":
          [ "new" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 20,
              "filename": "IFrame.js" },
            { "lineno": 27,
              "filename": "IFrame.js" } ],
        "docs":
          { "summary": "Sets or gets whether the iFrame element displays scrollbars.",
            "description":
              [ "Setting the `scrolling` property sets what happens when the content in",
                " the iFrame element is larger than the size of the component.",
                "",
                " The value can be set to:",
                "",
                " + `\"auto\"`: Scrollbars are displayed only if needed. (This is the default.)",
                " + `\"yes\"`: Scrollbars are always shown, even if they are not needed.",
                " + `\"no\"`: Scrollbars are never shown, even if they are needed).",
                "",
                " Getting the `scrolling` property returns which `ScrollType` the component",
                " is set to use." ],
            "links": [],
            "examples":
              [ { "title": "Set whether the iFrame element displays scrollbars",
                  "body":
                    [ "$w(\"#IFrameElement\").scrolling = \"no\";" ],
                  "extra":
                    {  } },
                { "title": "Get whether the iFrame element displays scrollbars",
                  "body":
                    [ "let compScrolling = $w(\"#myIFrameElement\").scrolling; // \"auto\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "src",
        "labels":
          [ "new" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 53,
              "filename": "IFrame.js" },
            { "lineno": 60,
              "filename": "IFrame.js" } ],
        "docs":
          { "summary": "Sets or gets the URL of the iFrame element's code.",
            "description":
              [ "Setting the `src` property sets the website that is",
                " displayed in the iFrame element. The `src` value must be set to an HTTPS",
                " URL.",
                "",
                " Getting the `src` property returns the URL of the website",
                " that is displayed in the iFrame element.",
                "",
                "> **Note:** The `src` property must be an HTTPS URL. Learn how to ",
                "[embed a site with an HTTP URL](https://support.wix.com/en/article/velo-working-with-the-html-iframe-element#embedding-another-site)." ],
            "links": [],
            "examples":
              [ { "title": "Get the displayed website's URL",
                  "body":
                    [ "let compUrl = $w(\"#myIFrameElement\").src;",
                      "// \"https://comp.com/page.html\"" ],
                  "extra":
                    {  } },
                { "title": "Set the displayed website",
                  "body":
                    [ "$w(\"#myIFrameElement\").src = \"https://en.wikipedia.org/wiki/HTTPS\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "onMessage",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.IFrameMessageEventHandler",
              "doc": "The name of the function or\nthe function expression to run when the iFrame element sends a message." } ],
        "ret":
          { "type": "$w.IFrame",
            "doc": "The iFrame element that triggered the event." },
        "locations":
          [ { "lineno": 151,
              "filename": "IFrame.js" } ],
        "docs":
          { "summary": "Adds an event handler that runs when the iFrame element\n sends a message.",
            "description":
              [ "The `onMessage()` function allows your page code to receive messages",
                " from an iFrame element on your page. When a message is received,",
                " the specified event handler is executed and the message can be retrieved",
                " using `event.data`.",
                "",
                " To send a message from your iFrame element, use the postMessage() function",
                " in the iFrame element's code. Generally, you call postMessage()",
                " from within a function:",
                "",
                "     <script type=\"text/javascript\">",
                "       function sendReturnMessage(msg) {",
                "         window.parent.postMessage(msg, \"http://mysite.com\");",
                "       }",
                "     </script>",
                "",
                " When posting a message from within your iFrame element, you should specify your",
                " site's URL as the `targetOrigin`. If you use `\"*\"` instead, your message can",
                " be intercepted by a malicious site. To learn more, see [Window.postMessage()](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).",
                "",
                " For more information on sending and receiving messages between your page",
                " and your iFrame element, see [Working with the HTML iFrame Element](https://support.wix.com/en/article/working-with-the-html-component-in-wix-code#messaging-1)." ],
            "links":
              [ "[postMessage( )](#postMessage)" ],
            "examples":
              [ { "title": "Receive a message from an iFrame element",
                  "body":
                    [ "$w(\"#myIFrameElement\").onMessage( (event) => {",
                      "  let receivedMessage = event.data;",
                      "} );" ],
                  "extra":
                    {  } },
                { "title": "Communicate with an iFrame element",
                  "body":
                    [ "$w.onReady(() => {",
                      "  // Send message to iFrame element",
                      "  $w('#sendButton').onClick(() => {",
                      "    $w('#myIFrameElement').postMessage('HELLO FROM THE PAGE');",
                      "  });",
                      "",
                      "  // Handle messages that the iFrame element sends to the page",
                      "  $w('#myIFrameElement').onMessage((event) => {",
                      "    $w('#message').text = event.data;",
                      "  });",
                      "});" ],
                  "extra":
                    { "description": "This example shows how to send information from the page to the iFrame element and from the iFrame element to the page. \n You can test out the code in our [example template](https://manage.wix.com/edit-template/from?originTemplateId=d39789d7-13ee-4208-8467-8a939cd8ed8c&templateId=cfd24f07-e15f-4091-b110-2b8b889fa1e3&autoDevMode=true)." } },
                { "title": "Send a message to an iFrame element and receive a confirmation",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Paste the following into the iFrame element:  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      "",
                      "<!doctype html>",
                      "<html>",
                      "<head>",
                      "",
                      "<script type=\"text/javascript\">",
                      "function init () {",
                      "  // when a message is received from the page code",
                      "  window.onmessage = (event) => {",
                      "    if (event.data) {",
                      "      console.log(\"iFrame element received a message!\");",
                      "      insertMessage(event.data);",
                      "    }",
                      "  }",
                      "}",
                      "",
                      "// display received message",
                      "function insertMessage(msg) {",
                      "  document.getElementById('demo').innerHTML = msg;",
                      "  sendReturnMessage(\"Message from the iFrame element!\");",
                      "}",
                      "",
                      "// send message to the page code",
                      "function sendReturnMessage(msg) {",
                      "  window.parent.postMessage(msg, \"http://mysite.com\");",
                      "}",
                      "</script>",
                      "",
                      "</head>",
                      "",
                      "<body onload=\"init();\" style=\"background-color:lightgray;\">",
                      "<h1>iFrame Element Test</h1>",
                      "<p id=\"demo\">Message will go here</p>",
                      "</body>",
                      "</html>",
                      "",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * This is the page code:                        *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * */",
                      "",
                      "$w.onReady(function () {",
                      "  // when a message is received from the iFrame element",
                      "  $w(\"#myIFrameElement\").onMessage( (event) => {",
                      "    console.log(`Message received by page code: ${event.data}`);",
                      "  } );",
                      "} );",
                      "",
                      "export function messageSendButton_onClick() {",
                      "  // send message to the iFrame element",
                      "  $w(\"#myIFrameElement\").postMessage(\"Message from page code!\");",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example assumes you have created a page with an iFrame element\n whose ID is `myIFrameElement` and a button whose onClick event handler\n is set to `messageSendButton_onClick`.\n\n When the user clicks the button, a message is sent to the HTML Code\n element. Code inside the element receives and displays the message. Then\n it sends a message back to the page code. The page code receives and\n logs the message." } } ],
            "extra":
              {  } },
        "extra":
          { "eventType": "message" } },
      { "name": "postMessage",
        "labels":
          [ "new" ],
        "nameParams": [],
        "params":
          [ { "name": "message",
              "type":
                [ "string",
                  "number",
                  "boolean",
                  "Object",
                  { "name": "Array",
                    "typeParams":
                      [ "*" ] } ],
              "doc": "The message to send to the iFrame element." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 85,
              "filename": "IFrame.js" } ],
        "docs":
          { "summary": "Sends a message to the iFrame element.",
            "description":
              [ "The `postMessage()` function sends a message from your page code to the ",
                " iFrame element.",
                "",
                " To receive the message from the `postMessage()` function in your",
                " iFrame element, create an event handler for the `window.onmessage` event ",
                " in the iFrame element's code. You create the event handler within an iFrame",
                " `<script>` tag. You get the received data by getting the data property",
                " of the event handler's event parameter.",
                "",
                " Often, you define the `window.onMessage` event handler in a function",
                " that gets called when the iFrame element loads using the `body onload`",
                " or `window.onload`:",
                "",
                "     <script type=\"text/javascript\">",
                "       window.onmessage = (event) => {",
                "         if (event.origin === \"http://mysite.com\") {",
                "           console.log(`iFrame element received a message: ${event.data}`);",
                "           //",
                "         }",
                "       };",
                "     </script>",
                "",
                " Remember to validate the `origin` of the message to ensure security, particularly in cross-origin scenarios.",
                "",
                " For more information on sending and receiving messages between your page",
                " and your iFrame element, see [Working with the iFrame Element](https://support.wix.com/en/article/working-with-the-html-component-in-wix-code#messaging-1).",
                "",
                "> **Notes:**",
                "> + An iFrame element needs to load before you can send it messages using the `postMessage()` function.",
                ">",
                "> + In cross-origin situations, an iFrame element may have a different loading lifecycle than your page.",
                ">   If you call postMessage()` inside the page's [`onReady()`]($w.iFrame#onReady)",
                ">   event handler, the iFrame element might not be ready yet.  To call `postMessage()`",
                ">   as soon as possible after a page loads, send a message from the iFrame element to the page code ",
                ">   when the iFrame element is loaded and then call `postMessage()` upon receipt of that message.",
                ">",
                "> + Also, an iFrame element can send messages to the page it is on before the iFrame element,",
                ">   including all its resources, has loaded completely. To make sure the iFrame element is loaded,",
                ">   send messages only after listening for an onLoad event in the iFrame element." ],
            "links":
              [ "[onMessage( )](#onMessage)" ],
            "examples":
              [ { "title": "Send a message to an iFrame element",
                  "body":
                    [ "$w(\"#myIFrameElement\").postMessage(\"Message from page code!\");" ],
                  "extra":
                    {  } },
                { "title": "Communicate with an iFrame element",
                  "body":
                    [ "$w.onReady(() => {",
                      "  // Send message to iFrame element",
                      "  $w('#sendButton').onClick(() => {",
                      "    $w('#myIFrameElement').postMessage('HELLO FROM THE PAGE');",
                      "  });",
                      "",
                      "  // Handle messages that the iFrame element sends to the page",
                      "  $w('#myIFrameElement').onMessage((event) => {",
                      "    $w('#message').text = event.data;",
                      "  });",
                      "});" ],
                  "extra":
                    { "description": "This example shows how to send information from the page to the iFrame element and from the iFrame element to the page. \n You can test out the code in our [example template](https://manage.wix.com/edit-template/from?originTemplateId=d39789d7-13ee-4208-8467-8a939cd8ed8c&templateId=cfd24f07-e15f-4091-b110-2b8b889fa1e3&autoDevMode=true)." } },
                { "title": "Send a message to an iFrame element and receive a confirmation",
                  "body":
                    [ "/* * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * Paste the following into the iFrame element:  *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      "",
                      "<!doctype html>",
                      "<html>",
                      "<head>",
                      "",
                      "<script type=\"text/javascript\">",
                      "function init () {",
                      "  // when a message is received from the page code",
                      "  window.onmessage = (event) => {",
                      "    if (event.data) {",
                      "      console.log(\"iFrame element received a message!\");",
                      "      insertMessage(event.data);",
                      "    }",
                      "  }",
                      "}",
                      "",
                      "// display received message",
                      "function insertMessage(msg) {",
                      "  document.getElementById('demo').innerHTML = msg;",
                      "  sendReturnMessage(\"Message from the iFrame element!\");",
                      "}",
                      "",
                      "// send message to the page code",
                      "function sendReturnMessage(msg) {",
                      "  window.parent.postMessage(msg, \"http://mysite.com\");",
                      "}",
                      "</script>",
                      "",
                      "</head>",
                      "",
                      "<body onload=\"init();\" style=\"background-color:lightgray;\">",
                      "<h1>iFrame Element Test</h1>",
                      "<p id=\"demo\">Message will go here</p>",
                      "</body>",
                      "</html>",
                      "",
                      " * * * * * * * * * * * * * * * * * * * * * * * * *",
                      " * This is the page code:                        *",
                      " * * * * * * * * * * * * * * * * * * * * * * * * */",
                      "",
                      "$w.onReady(function () {",
                      "  // when a message is received from the iFrame element",
                      "  $w(\"#myIFrameElement\").onMessage( (event) => {",
                      "    console.log(`Message received by page code: ${event.data}`);",
                      "  } );",
                      "} );",
                      "",
                      "export function messageSendButton_onClick() {",
                      "  // send message to the iFrame element",
                      "  $w(\"#myIFrameElement\").postMessage(\"Message from page code!\");",
                      "}",
                      "" ],
                  "extra":
                    { "description": "This example assumes you have created a page with an iFrame element\n whose ID is `myIFrameElement` and a button whose onClick event handler\n is set to `messageSendButton_onClick`.\n\n When the user clicks the button, a message is sent to the HTML Code\n element. Code inside the element receives and displays the message. Then\n it sends a message back to the page code. The page code receives and\n logs the message." } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }