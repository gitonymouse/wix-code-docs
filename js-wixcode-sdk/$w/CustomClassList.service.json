{ "name": "CustomClassList",
  "memberOf": "$w",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 1,
      "filename": "ClassList.js" },
  "docs":
    { "summary": "Provides functionality for manipulating custom CSS classes.",
      "description":
        [ "CustomClassList is a mixin that provides functionality for manipulating an element's custom CSS classes. For example, ",
          "you can add a custom class to an element or replace an existing class with a new custom class.",
          "",
          "Custom classes are those that you create on your site, not the predefined global classes",
          "that are provided for each element.  ",
          "",
          "**About Mixins**",
          "",
          "[Mixins](https://support.wix.com/en/article/velo-about-mixins) provide functionality that other elements can inherit and use. ",
          " ",
          "Mixins are not elements. You cannot add mixins to a page in the Editor like other `$w` elements, and mixins are not meant to be used directly ",
          "in your code. ",
          "For example, you would not write code like this, because it is out of context:",
          "",
          "```js",
          "let myClasses = $w(\"#CustomClassList\").customClassList.values();",
          "```",
          "",
          "Instead, you can code the following if myElement is an element that \"mixes in\" CustomClassList mixin.",
          "",
          "```js",
          "let myClasses = $w(\"#myElement\").customClassList.values();",
          "```",
          "",
          "> **Note:** This mixin only affects custom classes. If you use it for global classes, there is no effect on the element." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "value",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.CustomClassList",
        "locations":
          [ { "lineno": 35,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Gets a list of an element's custom CSS classes.",
            "description":
              [ "The `value` property returns a list of an element's custom CSS classes ",
                "as a space delimited string. If the element has no custom classes, ",
                "the `value` property returns an empty string.",
                "",
                "> **Note:** the `value` property cannot be used to add a class to an element.",
                "Use the [`add`](https://www.wix.com/velo/reference/$w/CustomClasslist/add) function",
                "to add one ore more custom classes to an element." ],
            "links": [],
            "examples":
              [ { "title": "Get the classes of an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.add(\"className1\", \"className2\");",
                      "myElement.customClassList.value; // \"className1 className2\"" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "add",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The names of the custom classes to add to an element.",
              "spread": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 54,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Adds custom CSS classes to an element's class list.",
            "description":
              [ "Adds one or more custom CSS classes to the class list of an element." ],
            "links": [],
            "examples":
              [ { "title": "Add a single class to an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.add(\"className1\");" ],
                  "extra":
                    {  } },
                { "title": "Add multiple classes to an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.add(\"className1\", \"className2\");" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "contains",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "Custom class to check.",
              "spread": true } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 86,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Indicates whether the element's class list contains a specified custom CSS class.",
            "description":
              [ "Indicates whether the element's class list contains a specified custom CSS class. ",
                "Returns `true` if the element contains the class." ],
            "links": [],
            "examples":
              [ { "title": "Indicate whether an element contains a specified class",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.add(\"className1\");",
                      "myElement.customClassList.contains(\"className1\"); //true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "remove",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The custom class to remove from the element's list of classes.",
              "spread": true } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 66,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Removes custom CSS classes from an element's class list.",
            "description":
              [ "Removes one or more custom CSS classes from an element's class list." ],
            "links": [],
            "examples":
              [ { "title": "Remove a single class from an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.remove(\"className1\");" ],
                  "extra":
                    {  } },
                { "title": "Remove multiple classes from an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.remove(\"className1\", \"className2\");" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "replace",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "currentClassName",
              "type": "string",
              "doc": "The custom class to replace." },
            { "name": "newClassName",
              "type": "string",
              "doc": "The new class to add." } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 101,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Replaces a custom CSS class of an element with a different custom CSS class.",
            "description":
              [ "The `replace()` function replaces a custom CSS class of an element with a different custom class. ",
                "If the `currentClassName` is not one of the element's classes, the element's class list is not affected. ",
                "Returns `true` if the replacement is successful." ],
            "links": [],
            "examples":
              [ { "title": "Replace an existing class with a new class",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.replace(\"className1, className2\");" ],
                  "extra":
                    {  } },
                { "title": "Toggle to replace an existing class with a new class",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "if( myElement.customClassList.contains(\"className1\") ) {",
                      "  myElement.customClassList.replace(\"className1, className2\");",
                      "}",
                      "else {",
                      "  myElement.customClassList.replace(\"className2, className1\");",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "toggle",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "className",
              "type": "string",
              "doc": "The custom class to toggle." } ],
        "ret":
          { "type": "boolean" },
        "locations":
          [ { "lineno": 116,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Toggles an element's custom CSS class.",
            "description":
              [ "The `toggle()` function either adds or removes an element's custom CSS class.",
                "- Returns `false` when an existing custom class gets removed from the element's class list.",
                "- Returns `true` when the custom class gets added to the element's class list." ],
            "links": [],
            "examples":
              [ { "title": "Toggle to add a missing class",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.toggle(\"className1\")  // true" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "values",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Array",
                "typeParams":
                  [ "string" ] } },
        "locations":
          [ { "lineno": 78,
              "filename": "ClassList.js" } ],
        "docs":
          { "summary": "Gets an array of an element's custom CSS classes.",
            "links": [],
            "examples":
              [ { "title": "Get the classes of an element",
                  "body":
                    [ "let myElement = $w(\"#myElement\");",
                      "myElement.customClassList.add(\"className1\", \"className2\");",
                      "myElement.customClassList.values(); // [\"className1, className2\"]" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }