{ "name": "AccordionItem",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.HiddenCollapsedMixin",
      "$w.ContainableMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "AccordionItem.js" },
  "docs":
    { "summary": "An accordion item within an [accordion]($w.Accordion.html) element.",
      "description":
        [ "An accordion item element is contained within an [accordion]($w.Accordion.html) element. Each accordion element contains multiple accordion items.",
          "One or multiple accordion items can be displayed concurrently according to settings. The site visitor can ",
          "navigate between accordion items without leaving the page, by clicking an accordion item title.",
          "",
          "//  * ![accordion item Example](images/accordion-items.png \"AccordionItem Example\")" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "collapsed",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "boolean",
        "locations":
          [ { "lineno": 41,
              "filename": "AccordionItem.js" },
            { "lineno": 56,
              "filename": "AccordionItem.js" } ],
        "docs":
          { "summary": "Indicates if an element is collapsed.",
            "description":
              [ "Indicates if an element is collapsed." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "label",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 17,
              "filename": "AccordionItem.js" },
            { "lineno": 35,
              "filename": "AccordionItem.js" } ],
        "docs":
          { "summary": "Sets or gets the accordion item's label.",
            "description":
              [ "Sets or gets an accordion item's label.",
                "The accordion item label appears in the accordion item's title. It is limited to 120 characters." ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "collapse",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the element's `collapsed` property has been set to `true`." },
        "locations":
          [ { "lineno": 62,
              "filename": "AccordionItem.js" } ],
        "docs":
          { "summary": "Collapses the element.",
            "description":
              [ "The `collapse()` function returns a Promise that is resolved when the",
                " element's [`collapsed`](#collapsed) property has been set to `true`.",
                "",
                " You can also collapse an element",
                " when the page loads by using the Properties and Events panel in the Editor.",
                "",
                " >**Note:** The `collapse()` function doesn't remove elements from the DOM." ],
            "links":
              [ "[expand( )](#expand)",
                "[hide( )]($w.HiddenMixin.html#hide)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "expand",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "Fulfilled - When the element's `collapsed` property has been set to `false`." },
        "locations":
          [ { "lineno": 88,
              "filename": "AccordionItem.js" } ],
        "docs":
          { "summary": "Expands the element.",
            "description":
              [ "The `expand()` function returns a Promise that is resolved when the",
                " element's [`collapsed`](#collapsed) property has been set to `false`",
                "",
                "> **Notes:** ",
                "> + In Editor X, an element will not become visible by using `expand()` if it has been marked as \"Don't Display\" for the current breakpoint. Calling `expand()` will however, change the `collapsed` property of the element to `false`.",
                "> ",
                ">",
                "> + It is recommended not to mix `expand()` and `collapse()` with \"Don't Display\" in Editor X." ],
            "links":
              [ "[expand( )](#expand)",
                "[show( )]($w.HiddenMixin.html#show)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }