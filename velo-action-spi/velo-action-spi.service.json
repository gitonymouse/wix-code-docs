{ "name": "velo-action-spi",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "invoke-action-index.js" },
  "docs":
    { "summary": "The Velo Action SPI.",
      "description":
        [ "When you create a new automation on your site, you are presented with a variety of actions to perform after your automation is ",
          "triggered. The actions available to you depend on which apps you have installed on your site. However, you also have the choice ",
          "to create your own action, independent of any app.",
          "",
          "The Velo Action SPI allows you to provide your own actions for automations on your site. You can use the SPI to write",
          "code for a custom action instead of selecting a premade ",
          "action. The action you create is specific for your site and cannot be used on other sites.",
          "",
          "## Before you start",
          "",
          "+ Make sure you're familiar with [automations](https://support.wix.com/en/article/wix-automations-getting-started) and how they ",
          "  work on the Wix platform.",
          "+ Publish your site.",
          "+ This SPI is intended for site owners who want to create custom actions on a single site. If you're a third-party app developer ",
          "  interested in becoming an automation provider, see our documentation [here](https://dev.wix.com/docs/rest/api-reference/wix-automations/introduction).",
          "",
          "## Creating a custom action",
          "",
          "1. Create a [new automation](https://support.wix.com/en/article/wix-automations-creating-a-new-automation) from scratch.",
          "2. Under **Choose an Action** select **Run Velo Code**. Then click **Start Coding** to add your code.",
          "",
          "   ![Run velo code action](./images/run-velo-code.png)",
          "",
          "3. The site will prompt you to create a new code file. Give the file a name and click **Create & Start Coding**.",
          "",
          "   __Important:__ Automations creates a file with the name you give under the **Custom Extensions** tab in your site's backend code.",
          "   Do not add or edit the code in this file, as it will not work properly. Write all your code directly in the interface that the",
          "   automation provides in your dashboard.",
          "",
          "5. You should now see something like this:",
          "",
          "   ![Write velo action code window](./images/write-velo-code0.png)",
          "",
          "   The **Write Velo Code** window contains two tabs. The first is the .js file where you write your code. The file contains a ",
          "   single function, [`invoke()`](velo-action-spi/invoke), which returns an empty object. ",
          "   Write all your code inside `invoke()`. Do not delete the `return` statement.",
          "",
          "   The second tab, which appears under **Payload view**, lets you view the payload expected from the trigger. This changes ",
          "   depending on the trigger you select. The displayed payload is read-only.",
          "",
          "6. When you finish writing your code, click **Save**.",
          "",
          "## Testing your custom action",
          "",
          "Once you've written the code for your action, you can test it with sample data. Wix provides sample data that matches the structure",
          "of your trigger payload. You can edit this sample payload as you need to test your action.",
          "",
          "Here's an example of the sample test data Wix provides. Note that your sample data may look different, depending on the trigger",
          "you've selected:",
          "",
          "```json",
          "{",
          "  \"status\": \"ACTIVE\",",
          "  \"contactId\": \"edca2245-7ce3-4d95-bfe9-b2012110eb8f\",",
          "  \"contact\": {",
          "      \"name\": {",
          "          \"last\": \"Doe\",",
          "          \"first\": \"John\"",
          "      },",
          "      \"email\": \"johndoe@email.com\",",
          "      \"locale\": \"de\",",
          "      \"company\": \"Wix\",",
          "      \"birthdate\": \"2018-11-13\",",
          "      \"address\": {",
          "          \"city\": \"New York\",",
          "          \"addressLine\": \"744 Cherry Hill Court\",",
          "          \"formattedAddress\": \"301 Hamilton Ave, Palo Alto 94303, USA\",",
          "          \"country\": \"USA\",",
          "          \"postalCode\": \"123456\",",
          "          \"addressLine2\": \"2nd floor\",",
          "          \"subdivision\": \"subdivision\"",
          "      },",
          "      \"jobTitle\": \"CEO\",",
          "      \"phone\": \"(888)555-1212\"",
          "  }",
          "}",
          "```",
          "",
          "You can edit any of the fields above.",
          "",
          "To test your code, follow the instructions under **Run your code to test this action**, then click **Run Code**.",
          "",
          "Once you've tested your code and are sure your action works, you can activate your automation.",
          "",
          "## Editing your custom action",
          "",
          "To edit your action code, [edit your automation](https://support.wix.com/en/article/wix-automations-managing-your-automations#editing-duplicating-or-renaming-an-automation)",
          "and select the **Run Velo code** action, then click on **Edit Code**. Make the changes you want, save the code, and test.",
          "",
          "> **Note:**",
          "> If you choose the **Run Velo code** action but change the trigger, you will have to create a new file and write new code, even if",
          "you have already saved the automation." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "invoke",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "payload",
              "type": "Object",
              "doc": "The payload received from the trigger." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The function returns an empty object." },
        "locations":
          [ { "lineno": 1,
              "filename": "invoke-action.js" } ],
        "docs":
          { "summary": "Runs your customized action when an automation is triggered.",
            "description":
              [ "Wix calls this function when an automation is triggered, for example by a form submission or a completed order. Therefore, write any code for ",
                "your action in `invoke()`. Use the [Velo APIs](https://www.wix.com/velo/reference/api-overview) in your code.",
                "",
                "For example, let's say you want to save a site visitor's contact data to a collection when they submit a form. In this case,",
                "Wix calls `invoke()` when the form is submitted. Write the code to save the ",
                "contact data, using the relevant [wix-data](https://www.wix.com/velo/reference/wix-data) methods, in the `invoke()` function.",
                "",
                "`Invoke()` accepts the trigger payload as a parameter. This payload will change depending on what your trigger is. You can access the payload",
                "fields and use them in your action code." ],
            "links": [],
            "examples":
              [ { "title": "Save contact data to a collection on your site",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "",
                      "export const invoke = async ({payload}) => {",
                      "",
                      "let toInsert = {",
                      "  \"plan_id\": payload.plan_id,",
                      "  \"Plan name\" : payload.plan_title,",
                      "  \"name\": payload.contact.name ,",
                      "  \"email\": payload.contact.email,",
                      "  \"phone\": payload.contact.phone ",
                      "  }",
                      "",
                      "  // Insert the contact into our site collection",
                      "  // of contact data for plan purchasers",
                      "  wixData.insert('PurchaserContactData',toInsert)",
                      "  .then((results) => {",
                      "    console.log('Data inserted successfully:', results._id);",
                      "  })",
                      "  .catch((err) => {",
                      "    console.error('Error inserting data:', err);",
                      "  });",
                      "    return {} // The function must return an empty object",
                      "};" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages": [],
  "extra":
    {  } }