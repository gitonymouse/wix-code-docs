{ "name": "velo-action-spi",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "invoke-action-index.js" },
  "docs":
    { "summary": "The Velo Action SPI.",
      "description":
        [ "When you create a new automation on your site, you're presented with a variety of actions to perform after your automation is ",
          "triggered. The actions available to you depend on which apps you have installed on your site. However, you also have the choice ",
          "to create your own action, independent of any app.",
          "",
          "The Velo Action SPI allows you to provide your own actions for automations on your site. You can use the SPI to write",
          "code for a custom action instead of selecting a premade ",
          "action. The action you create is specific for your site and cannot be used on other sites.",
          "",
          "## Before you start",
          "",
          "+ Make sure you're familiar with [Wix Automations](https://support.wix.com/en/article/wix-automations-getting-started) and how they ",
          "  work on Wix.",
          "+ Publish your site.",
          "+ This custom extension is intended for site owners who want to create custom actions on a single site. If you're a 3rd-party app developer ",
          "  interested in becoming an automation provider, see our documentation [here](https://dev.wix.com/docs/rest/api-reference/wix-automations/introduction).",
          "",
          "## Create a custom action",
          "",
          "To use a custom action as part of an automation, start by creating a new automation in your site dashboard.",
          "",
          "1. Go to the [Automations](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Ftriggers) ",
          "   page in your dashboard.",
          "2. Click **New Automation**, then **Start from Scratch**.",
          "3. Select and configure a [trigger](https://support.wix.com/en/article/wix-automations-creating-a-new-automation#step-2-choose-a-trigger).",
          "",
          "   <blockquote class=\"important\">",
          "",
          "   __Important:__",
          "   The code file you create for your custom action is associated with the original trigger you selected. If you change the trigger,",
          "   a new code file will be created and you'll have to write new code. The initial file you create is still saved, and if you restore",
          "   the trigger it is associated with, you'll be able to access it again in the automation.",
          "",
          "   </blockquote>",
          "",
          "4. Under **Choose an Action**, select **Run Velo code**. Then click **Start Coding** to add your code.",
          "",
          "   ![Run velo code action](./images/run-velo-code.png)",
          "",
          "   You'll be prompted to create a new code file.",
          "",
          "5. Give the file a name and click **Create & Start Coding**.",
          "   ",
          "   <blockquote class=\"important\">",
          "",
          "   __Important:__ ",
          "   A file is created with the name you give under the **Custom Extensions** tab in your site's backend code.",
          "   Do not add or edit the code in this file, as it will not run when the automation is triggered. Write code only in the",
          "   automation in your dashboard.",
          "",
          "   </blockquote>",
          "",
          "   You should now see something like this:",
          "",
          "   ![Write velo action code](./images/write-velo-code0.png)",
          "",
          "   The **Write Velo Code** modal contains two tabs. The first is the .js file where you write your code. The file contains a ",
          "   single function, [`invoke()`](velo-action-spi/invoke), which returns an empty object. ",
          "   Write any code that you want the action to execute inside `invoke()`. Do not delete the `return` statement.",
          "",
          "   The second tab, which appears under **Payload view**, lets you view the expected structure of the trigger payload. This changes ",
          "   depending on the trigger you select. The displayed payload is read-only.",
          "",
          "6. When you finish writing your code, click **Save**.",
          "",
          "   Now that you have set up and coded your custom action, you can activate the automation immediately. However, we recommend",
          "   testing the action code first.",
          "",
          "7. To test your code, follow the instructions under **Run your code to test this action**, then click **Run Code**.",
          "",
          "   Wix provides sample data that matches the structure of your trigger payload. You can edit any of the fields in the sample payload",
          "   to test your action.",
          "",
          "   Once you test your code and are sure your action works, activate your automation.",
          "",
          "## Edit your custom action",
          "",
          "To edit your action code, [edit your automation](https://support.wix.com/en/article/wix-automations-managing-your-automations#editing-duplicating-or-renaming-an-automation)",
          "and select the **Run Velo code** action, then click on **Edit Code**. Make the changes you want, save the code, and test." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "invoke",
        "labels":
          [ "changed" ],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "velo-action-spi.Options",
              "doc": "The payload received from the trigger." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "Object" ] },
            "doc": "Fulfilled - The function returns the payload." },
        "locations":
          [ { "lineno": 1,
              "filename": "invoke-action.js" } ],
        "docs":
          { "summary": "Runs your custom action when an automation is triggered.",
            "description":
              [ "Wix calls this function when an automation is triggered, for example by a form submission or a completed order. Therefore, write ",
                "any code for your action in `invoke()`. Use the [Velo APIs](https://www.wix.com/velo/reference/api-overview) to create your ",
                "action in the same way as you use them in your site's page code.",
                "",
                "For example, let's say you want to save a site visitor's contact data to a collection when they submit a form. In this case,",
                "Wix calls `invoke()` when the form is submitted. Write the code to save the ",
                "contact data, using the relevant [wix-data](https://www.wix.com/velo/reference/wix-data) methods, in the `invoke()` function.",
                "",
                "`invoke()` accepts the trigger payload as a parameter. This payload changes depending on what your trigger is. You can access the payload",
                "fields and use them in your action code." ],
            "links": [],
            "examples":
              [ { "title": "Save data of a customer who purchased a plan",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "",
                      "export const invoke = async ({payload}) => {",
                      "",
                      "  const toInsert = {",
                      "    \"plan_id\": payload.plan_id,",
                      "    \"plan_name\" : payload.plan_title,",
                      "    \"name\": payload.contact.name ,",
                      "    \"email\": payload.contact.email,",
                      "    \"phone\": payload.contact.phone ",
                      "    };",
                      "",
                      "    // Insert the contact into our site collection",
                      "    // of contact data for plan purchasers",
                      "    wixData.insert('PurchaserContactData', toInsert)",
                      "      .then((results) => {",
                      "        console.log('Data inserted successfully:', results._id);",
                      "    })",
                      "      .catch((err) => {",
                      "        console.error('Error inserting data:', err);",
                      "    });",
                      "      return {}; // The function must return an empty object",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Options",
        "locations":
          [ { "lineno": 24,
              "filename": "invoke-action.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "payload",
              "type": "velo-action-spi.Object",
              "doc": "The payload object." } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }