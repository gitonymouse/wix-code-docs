{
  "name": "Inventory",
  "memberOf": "wix-stores-v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-stores.v3-inventory_item",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreateInventoryItems",
      "params": [
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be created.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkCreateInventoryItemsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "inventoryItems",
        "inventoryItems.productId",
        "inventoryItems.variantId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkCreateInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates multiple Inventory items.",
        "description": [],
        "examples": [
          {
            "title": "bulkCreateInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkCreateInventoryItems(inventoryItems, options) {",
              "   try {",
              "     const result = await inventory.bulkCreateInventoryItems(inventoryItems, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreateInventoryItems",
      "isAdminMethod": true
    },
    {
      "name": "bulkDecrementInventoryItems",
      "params": [
        {
          "name": "decrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.DecrementDataById"
                  }
                ]
              }
            }
          ],
          "doc": "Which inventory items to decrement, and how much to decrement from each one.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "decrementData",
        "decrementData.decrementBy",
        "decrementData.inventoryItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Decrement inventory items quantity.\nThe item must be on track for allowing quantity decrement.\nA bulk decrement request is all or nothing if the restrict_inventory is true and at least one of the items goes into negative inventory or passes the preOrder limit,\nthe request will fail with an INSUFFICIENT_INVENTORY error and an increment back operation will be executed.\nThe item quantity can go into negative if restrict_inventory is false or the item has been purchased as preOrder.\nWhen preorder_request is true and the item is available for preOrder, Item preorder_counter will increase and item quantity will stay the same.",
        "description": [],
        "examples": [
          {
            "title": "bulkDecrementInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkDecrementInventoryItems(decrementData, options) {",
              "   try {",
              "     const result = await inventory.bulkDecrementInventoryItems(decrementData, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDecrementInventoryItems",
      "isAdminMethod": true
    },
    {
      "name": "bulkDecrementInventoryItemsByFilter",
      "params": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsByFilterOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "filter",
        "options",
        "options.decrementBy"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsByFilterResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Decrement the inventory quantity to the items which satisfy the provided filter.\nThe item must be on track for allowing quantity decrement.\nThe item quantity cannot go into negative.",
        "description": [],
        "examples": [
          {
            "title": "bulkDecrementInventoryItemsByFilter example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkDecrementInventoryItemsByFilter(filter, options) {",
              "   try {",
              "     const result = await inventory.bulkDecrementInventoryItemsByFilter(filter, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDecrementInventoryItemsByFilter",
      "isAdminMethod": true
    },
    {
      "name": "bulkDecrementInventoryItemsByVariantAndLocation",
      "params": [
        {
          "name": "decrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.DecrementDataByVariantAndLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Which inventory items to decrement, and how much to decrement from each one.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsByVariantAndLocationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "decrementData",
        "decrementData.decrementBy",
        "decrementData.variantId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkDecrementInventoryItemsByVariantAndLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Decrement inventory items quantity.\nThe item must be on track for allowing quantity decrement.\nA bulk decrement request is all or nothing if the restrict_inventory is true and at least one of the items goes into negative inventory or passes the preOrder limit,\nthe request will fail with an INSUFFICIENT_INVENTORY error and an increment back operation will be executed.\nThe item quantity can go into negative if restrict_inventory is false or the item has been purchased as preOrder.\nWhen preorder_request is true and the item is available for preOrder, Item preorder_counter will increase and item quantity will stay the same.",
        "description": [],
        "examples": [
          {
            "title": "bulkDecrementInventoryItemsByVariantAndLocation example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkDecrementInventoryItemsByVariantAndLocation(decrementData, options) {",
              "   try {",
              "     const result = await inventory.bulkDecrementInventoryItemsByVariantAndLocation(decrementData, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDecrementInventoryItemsByVariantAndLocation",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeleteInventoryItems",
      "params": [
        {
          "name": "inventoryItemIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of inventories to be deleted.",
          "required": true
        }
      ],
      "requiredFields": [
        "inventoryItemIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkDeleteInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes up to 100 products with variants.",
        "description": [],
        "examples": [
          {
            "title": "bulkDeleteInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkDeleteInventoryItems(inventoryItemIds) {",
              "   try {",
              "     const result = await inventory.bulkDeleteInventoryItems(inventoryItemIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDeleteInventoryItems",
      "isAdminMethod": true
    },
    {
      "name": "bulkIncrementInventoryItems",
      "params": [
        {
          "name": "incrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.IncrementDataById"
                  }
                ]
              }
            }
          ],
          "doc": "Which items to increment, and how much to increment from each one.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "incrementData",
        "incrementData.incrementBy",
        "incrementData.inventoryItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Increment inventory items quantity.\nThe item must be on track for allowing quantity increment.",
        "description": [],
        "examples": [
          {
            "title": "bulkIncrementInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkIncrementInventoryItems(incrementData, options) {",
              "   try {",
              "     const result = await inventory.bulkIncrementInventoryItems(incrementData, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkIncrementInventoryItems",
      "isAdminMethod": true
    },
    {
      "name": "bulkIncrementInventoryItemsByFilter",
      "params": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsByFilterOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "filter",
        "options",
        "options.incrementBy"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsByFilterResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Increment the inventory quantity to the items which satisfy the provided filter.\nThe item must be on track for allowing quantity increment.",
        "description": [],
        "examples": [
          {
            "title": "bulkIncrementInventoryItemsByFilter example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkIncrementInventoryItemsByFilter(filter, options) {",
              "   try {",
              "     const result = await inventory.bulkIncrementInventoryItemsByFilter(filter, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkIncrementInventoryItemsByFilter",
      "isAdminMethod": true
    },
    {
      "name": "bulkIncrementInventoryItemsByVariantAndLocation",
      "params": [
        {
          "name": "incrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.IncrementDataByVariantAndLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Which items to increment, and how much to increment from each one.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsByVariantAndLocationOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "incrementData",
        "incrementData.incrementBy",
        "incrementData.variantId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkIncrementInventoryItemsByVariantAndLocationResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Increment inventory items quantity.\nThe item must be on track for allowing quantity increment.",
        "description": [],
        "examples": [
          {
            "title": "bulkIncrementInventoryItemsByVariantAndLocation example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkIncrementInventoryItemsByVariantAndLocation(incrementData, options) {",
              "   try {",
              "     const result = await inventory.bulkIncrementInventoryItemsByVariantAndLocation(incrementData, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkIncrementInventoryItemsByVariantAndLocation",
      "isAdminMethod": true
    },
    {
      "name": "bulkSetInventoryItemsForProduct",
      "params": [
        {
          "name": "productId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The id of the product to set inventory items to.",
          "required": true
        },
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be created or updated.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkSetInventoryItemsForProductOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "inventoryItems",
        "inventoryItems.productId",
        "inventoryItems.variantId",
        "productId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkSetInventoryItemsForProductResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Sets inventory items on specific product.\nIf the [variantId, locationId] provided for a inventory item is already exist in one of the inventory items of this product, this inventory item get the new values provided in the request.\nIf the [variantId, locationId] provided for a inventory item does not exists on any inventory items of this product - a new inventory item will be created.\nIf any inventory items related to this product before this action has [variantId, locationId] selection that was not provided in any inventory item in the request - these inventory items will be removed.\nAfter calling this endpoint the product will have only inventory items provided in BulkSetInventoryItemsForProductRequest.\nAll inventory items in the provided request must have the same product_id as provided in the request param.",
        "description": [],
        "examples": [
          {
            "title": "bulkSetInventoryItemsForProduct example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkSetInventoryItemsForProduct(productId, inventoryItems, options) {",
              "   try {",
              "     const result = await inventory.bulkSetInventoryItemsForProduct(productId, inventoryItems, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkSetInventoryItemsForProduct",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdateInventoryItems",
      "params": [
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.MaskedInventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be updated.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkUpdateInventoryItemsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "inventoryItems",
        "inventoryItems.inventoryItem._id",
        "inventoryItems.inventoryItem.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkUpdateInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Update multiple Inventory items, supports partial update.",
        "description": [],
        "examples": [
          {
            "title": "bulkUpdateInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkUpdateInventoryItems(inventoryItems, options) {",
              "   try {",
              "     const result = await inventory.bulkUpdateInventoryItems(inventoryItems, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdateInventoryItems",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdateInventoryItemsByFilter",
      "params": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkUpdateInventoryItemsByFilterOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "filter",
        "options.inventoryItem"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.BulkUpdateInventoryItemsByFilterResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Update multiple Inventory items which satisfy the provided filter.",
        "description": [],
        "examples": [
          {
            "title": "bulkUpdateInventoryItemsByFilter example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function bulkUpdateInventoryItemsByFilter(filter, options) {",
              "   try {",
              "     const result = await inventory.bulkUpdateInventoryItemsByFilter(filter, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdateInventoryItemsByFilter",
      "isAdminMethod": true
    },
    {
      "name": "countInventoryItems",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.CountInventoryItemsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.CountInventoryItemsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns total count of inventory items satisfying filter",
        "description": [],
        "examples": [
          {
            "title": "countInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function countInventoryItems(options) {",
              "   try {",
              "     const result = await inventory.countInventoryItems(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "countInventoryItems"
    },
    {
      "name": "createInventoryItem",
      "params": [
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "inventoryItem",
        "inventoryItem.productId",
        "inventoryItem.variantId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                }
              ]
            }
          }
        ],
        "doc": "The created Inventory item.\n"
      },
      "docs": {
        "summary": "Creates a new Inventory item.\nThe combination of variant_id and location_id is unique.",
        "description": [],
        "examples": [
          {
            "title": "createInventoryItem example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function createInventoryItem(inventoryItem) {",
              "   try {",
              "     const result = await inventory.createInventoryItem(inventoryItem);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createInventoryItem",
      "isAdminMethod": true
    },
    {
      "name": "deleteInventoryItem",
      "params": [
        {
          "name": "inventoryItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "inventoryItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete an Inventory item.",
        "description": [],
        "examples": [
          {
            "title": "deleteInventoryItem example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function deleteInventoryItem(inventoryItemId) {",
              "   try {",
              "     const result = await inventory.deleteInventoryItem(inventoryItemId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteInventoryItem",
      "isAdminMethod": true
    },
    {
      "name": "getInventoryItem",
      "params": [
        {
          "name": "inventoryItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "inventoryItemId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved Inventory item.\n"
      },
      "docs": {
        "summary": "Retrieves a inventory item with the provided ID.",
        "description": [],
        "examples": [
          {
            "title": "getInventoryItem example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function getInventoryItem(inventoryItemId) {",
              "   try {",
              "     const result = await inventory.getInventoryItem(inventoryItemId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getInventoryItem"
    },
    {
      "name": "queryInventoryItems",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-stores-v3.Inventory.InventoryItemsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Query Inventory items using [WQL - Wix Query Language].",
        "description": [
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`inStock`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`quantity`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#lt),[`le()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#le),[`gt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#gt),[`ge()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`_id`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#startsWith)|",
          "|`_createdDate`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#lt),[`le()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#le),[`gt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#gt),[`ge()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#lt),[`le()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#le),[`gt()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#gt),[`ge()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`variantId`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#startsWith)|",
          "|`locationId`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#startsWith)|",
          "|`productId`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#startsWith)|",
          "|`trackQuantity`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`availability.status`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`availabilityStatus`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|",
          "|`preorderInfo.enabled`|[`eq()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#eq),[`ne()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ne),[`exists()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#exists),[`in()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#hasSome),[`ascending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Inventory.InventoryItemsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryInventoryItems example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function queryInventoryItems() {",
              "   const { items } = inventory.queryInventoryItems().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryInventoryItems"
    },
    {
      "name": "updateInventoryItem",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Inventory ID",
          "required": true
        },
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.UpdateInventoryItem"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.UpdateInventoryItemOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "inventoryItem",
        "inventoryItem.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                }
              ]
            }
          }
        ],
        "doc": "The updated Inventory item.\n"
      },
      "docs": {
        "summary": "Update a Inventory item, supports partial update.\nPass the latest `revision` for a successful update.",
        "description": [],
        "examples": [
          {
            "title": "updateInventoryItem example",
            "body": [
              "import { inventory } from 'wix-stores.v3';",
              "  ",
              " async function updateInventoryItem(id, inventoryItem, options) {",
              "   try {",
              "     const result = await inventory.updateInventoryItem(id, inventoryItem, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateInventoryItem",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "App",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The AppDefId"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance Id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateInventoryItemsOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateInventoryItemsRequest",
      "members": [
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be created."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateInventoryItemsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByFilterOptions",
      "members": [
        {
          "name": "decrementBy",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to decrement by."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByFilterRequest",
      "members": [
        {
          "name": "decrementBy",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to decrement by."
        },
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByFilterResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Guid token that can be used to query \"AsyncJobService\"."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByVariantAndLocationOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "restrictInventory",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Should allow having negative inventory following this decrement action.\nIf its undefined then the Value is true"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByVariantAndLocationRequest",
      "members": [
        {
          "name": "decrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.DecrementDataByVariantAndLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Which inventory items to decrement, and how much to decrement from each one."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "restrictInventory",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Should allow having negative inventory following this decrement action.\nIf its undefined then the Value is true"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsByVariantAndLocationResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items updated by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "restrictInventory",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Should allow having negative inventory following this decrement action.\nIf its undefined then the Value is true"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsRequest",
      "members": [
        {
          "name": "decrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.DecrementDataById"
                  }
                ]
              }
            }
          ],
          "doc": "Which inventory items to decrement, and how much to decrement from each one."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "restrictInventory",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Should allow having negative inventory following this decrement action.\nIf its undefined then the Value is true"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDecrementInventoryItemsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items updated by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteInventoryItemsRequest",
      "members": [
        {
          "name": "inventoryItemIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of inventories to be deleted."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteInventoryItemsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventories deleted by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByFilterOptions",
      "members": [
        {
          "name": "incrementBy",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to increment by."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByFilterRequest",
      "members": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "incrementBy",
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to increment by."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByFilterResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Guid token that can be used to query \"AsyncJobService\"."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByVariantAndLocationOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByVariantAndLocationRequest",
      "members": [
        {
          "name": "incrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.IncrementDataByVariantAndLocation"
                  }
                ]
              }
            }
          ],
          "doc": "Which items to increment, and how much to increment from each one."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsByVariantAndLocationResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items updated by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsRequest",
      "members": [
        {
          "name": "incrementData",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.IncrementDataById"
                  }
                ]
              }
            }
          ],
          "doc": "Which items to increment, and how much to increment from each one."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkIncrementInventoryItemsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items updated by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkInventoryItemResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Created or updated inventory item. Optional - returned only if requested with `return_entity` set to `true`."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ItemMetadata"
            }
          ],
          "doc": "Information about successful action or error for failure."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSetInventoryItemsForProductOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSetInventoryItemsForProductRequest",
      "members": [
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be created or updated."
        },
        {
          "name": "productId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The id of the product to set inventory items to."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkSetInventoryItemsForProductResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Created inventory items by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsByFilterOptions",
      "members": [
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be updated, may be partial."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsByFilterRequest",
      "members": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be updated, may be partial."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsByFilterResponse",
      "members": [
        {
          "name": "jobId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Guid token that can be used to query \"AsyncJobService\"."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsRequest",
      "members": [
        {
          "name": "inventoryItems",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.MaskedInventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "List of inventory items to be updated."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full inventory item entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateInventoryItemsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata details as: totalSuccess and totalFailure."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.BulkInventoryItemResult"
                  }
                ]
              }
            }
          ],
          "doc": "Inventory items updated by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountInventoryItemsOptions",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\nTo understand supported filters and limitations see `QueryInventoryItems` method."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountInventoryItemsRequest",
      "members": [
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)\nTo understand supported filters and limitations see `QueryInventoryItems` method."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CountInventoryItemsResponse",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateInventoryItemRequest",
      "members": [
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateInventoryItemResponse",
      "members": [
        {
          "name": "inventoryItem",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "The created Inventory item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DecrementDataById",
      "members": [
        {
          "name": "decrementBy",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to decrement by."
        },
        {
          "name": "inventoryItemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item."
        },
        {
          "name": "preorderRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the request to decrement the item's inventory was made as part of a purchase that includes preorder items.\nIf true and the item is available for preorder in the default location, we allow negative inventory.\nIf false and the item is not available for preorder, we allow regular buy flow (no negative inventory)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DecrementDataByVariantAndLocation",
      "members": [
        {
          "name": "decrementBy",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to decrement by."
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Location."
        },
        {
          "name": "preorderRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the request to decrement the item's inventory was made as part of a purchase that includes preorder items.\nIf true and the item is available for preorder in the default location, we allow negative inventory.\nIf false and the item is not available for preorder, we allow regular buy flow (no negative inventory)."
        },
        {
          "name": "variantId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Variant."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteInventoryItemRequest",
      "members": [
        {
          "name": "inventoryItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteInventoryItemResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExtendedFields",
      "members": [
        {
          "name": "namespaces",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "Object"
                  }
                ]
              }
            }
          ],
          "doc": "Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\nThe value of each key is structured according to the schema defined when the extended fields were configured.\n\nYou can only access fields for which you have the appropriate permissions.\n\nLearn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetInventoryItemRequest",
      "members": [
        {
          "name": "inventoryItemId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetInventoryItemResponse",
      "members": [
        {
          "name": "inventoryItem",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "The retrieved Inventory item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IncrementDataById",
      "members": [
        {
          "name": "incrementBy",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to increment by."
        },
        {
          "name": "inventoryItemId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Inventory item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IncrementDataByVariantAndLocation",
      "members": [
        {
          "name": "incrementBy",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity to increment by."
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Location."
        },
        {
          "name": "variantId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Variant."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCache",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "localDc",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Is local DS"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidateCacheGetByOneOf",
            "members": [
              "app",
              "metaSiteId",
              "page",
              "siteId",
              "uri"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheGetByOneOf",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryCursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load.\nCursor token returned in the query response. To be used on the next query request, but not the first query request."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryItem",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Inventory was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Inventory ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Inventory was last updated."
        },
        {
          "name": "availability",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ItemAvailability"
            }
          ],
          "doc": "Item availability, availability is combination of status and available quantity."
        },
        {
          "name": "availabilityStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item availability status, availability is combination of status and available quantity.\n+ OUT_OF_STOCK: no available quantity\n+ IN_STOCK: available quantity can be found in `quantity` field.\n+ PREORDER: available quantity can be found in `preorderInfo.quantity` field."
        },
        {
          "name": "categoriesId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Item categories ID."
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ExtendedFields"
            }
          ],
          "doc": "Extensions enabling users to save custom data related to the inventory item."
        },
        {
          "name": "inStock",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Inventory tracking status, when set to true, item is available for sale without quantity limit."
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location ID, location_id with variant_id is unique."
        },
        {
          "name": "preorderInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.PreorderInfo"
            }
          ],
          "doc": "Item preorder info."
        },
        {
          "name": "productId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Product ID."
        },
        {
          "name": "quantity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity currently left in inventory.\nIn some scenarios, quantity could go negative, for example when decreasing inventory for an order that has already been paid."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision."
        },
        {
          "name": "trackQuantity",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the quantity is being tracked."
        },
        {
          "name": "variantId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Variant ID."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInventoryItemTrackingMethodOneOf",
            "members": [
              "inStock",
              "quantity"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "InventoryItem is the main entity of InventoryService"
        ]
      }
    },
    {
      "name": "InventoryItemStockStatusUpdatedEvent",
      "members": [
        {
          "name": "newInStock",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Inventory item new status."
        },
        {
          "name": "previousInStock",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Inventory item previous status."
        }
      ],
      "docs": {
        "description": [
          "Report when Inventory item stock status changed from in stock to out of stock and the opposite."
        ]
      }
    },
    {
      "name": "InventoryItemTrackingMethodOneOf",
      "members": [
        {
          "name": "inStock",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Inventory tracking status, when set to true, item is available for sale without quantity limit."
        },
        {
          "name": "quantity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity currently left in inventory.\nIn some scenarios, quantity could go negative, for example when decreasing inventory for an order that has already been paid."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryItemUpdatedWithReason",
      "members": [
        {
          "name": "currentEntity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Current entity"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The reason for the inventory change."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryPaging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryCursorPaging"
            }
          ],
          "doc": "Cursor pointing to page of results. Cannot be used together with `paging`. `cursorPaging.cursor` can not be used together with `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryPaging"
            }
          ],
          "doc": "Pointer to page of results using offset. Cannot be used together with `cursorPaging`."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInventoryQueryPagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InventoryQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryCursorPaging"
            }
          ],
          "doc": "Cursor pointing to page of results. Cannot be used together with `paging`. `cursorPaging.cursor` can not be used together with `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryPaging"
            }
          ],
          "doc": "Pointer to page of results using offset. Cannot be used together with `cursorPaging`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemAvailability",
      "members": [
        {
          "name": "quantity",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Available quantity, when not defined then unlimited number of items can be purchased."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If `AvailableStatus` is NOT_AVAILABLE the item is not available\nIf `AvailableStatus` is PURCHASE and available_quantity is N then up to N items can be purchased right now\nIf `AvailableStatus` is PURCHASE and available_quantity is not defined then unlimited number of items can be purchased right now\nIf `AvailableStatus` is PREORDER and available_quantity is N then up to N items can be purchased as preorder\nIf `AvailableStatus` is PREORDER and available_quantity is not defined then unlimited number of items can be purchased as preorder"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MaskedInventoryItem",
      "members": [
        {
          "name": "inventoryItem",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be updated, may be partial."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Page",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the page is on"
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Page ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PlatformPagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items returned in this response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.Cursors"
            }
          ],
          "doc": "Cursors to navigate through result pages. Returned if cursor paging was used."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PreorderInfo",
      "members": [
        {
          "name": "counter",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "How many times this item was purchased as a preorder, limited by the value of PreorderSettings.limit.\nIt may cross the limit if the restrict_inventory_value = false."
        },
        {
          "name": "enabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the item is available for preorder."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Optional - Number of products that can be purchased as preorder after stock reaches zero.\nIf not defined -100,000 products can be purchased as preorder."
        },
        {
          "name": "message",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Optional - A message the buyer will see when the item is out of stock and preorder is enabled."
        },
        {
          "name": "quantity",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Available quantity for preorder."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryInventoryItemsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryQuery"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryInventoryItemsResponse",
      "members": [
        {
          "name": "inventoryItems",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Inventory.InventoryItem"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved Inventory items."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.PlatformPagingMetadataV2"
            }
          ],
          "doc": "Paging metadata. Contains cursor which can be used in next query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "URI",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the URI is on"
        },
        {
          "name": "uriPath",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateInventoryItem",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Inventory was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Inventory ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Inventory was last updated."
        },
        {
          "name": "availability",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ItemAvailability"
            }
          ],
          "doc": "Item availability, availability is combination of status and available quantity."
        },
        {
          "name": "availabilityStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item availability status, availability is combination of status and available quantity.\n+ OUT_OF_STOCK: no available quantity\n+ IN_STOCK: available quantity can be found in `quantity` field.\n+ PREORDER: available quantity can be found in `preorderInfo.quantity` field."
        },
        {
          "name": "categoriesId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Item categories ID."
        },
        {
          "name": "extendedFields",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.ExtendedFields"
            }
          ],
          "doc": "Extensions enabling users to save custom data related to the inventory item."
        },
        {
          "name": "inStock",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Inventory tracking status, when set to true, item is available for sale without quantity limit."
        },
        {
          "name": "locationId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location ID, location_id with variant_id is unique."
        },
        {
          "name": "preorderInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.PreorderInfo"
            }
          ],
          "doc": "Item preorder info."
        },
        {
          "name": "productId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Product ID."
        },
        {
          "name": "quantity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Quantity currently left in inventory.\nIn some scenarios, quantity could go negative, for example when decreasing inventory for an order that has already been paid."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision."
        },
        {
          "name": "trackQuantity",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the quantity is being tracked."
        },
        {
          "name": "variantId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Variant ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateInventoryItemOptions",
      "members": [
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateInventoryItemRequest",
      "members": [
        {
          "name": "inventoryItem",
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "Inventory item to be updated, may be partial."
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Reason data"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateInventoryItemResponse",
      "members": [
        {
          "name": "inventoryItem",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Inventory.InventoryItem"
            }
          ],
          "doc": "The updated Inventory item."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
