{
  "name": "Brand",
  "memberOf": "wix-stores-v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-stores.v3-brand",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreateBrands",
      "params": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be created or updated.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkCreateBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brands",
        "brands.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkCreateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates multiple brands.",
        "description": [],
        "examples": [
          {
            "title": "bulkCreateBrands example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function bulkCreateBrands(brands, options) {",
              "  try {",
              "    const result = await brand.bulkCreateBrands(brands, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkCreateBrands example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkCreateBrands = elevate(brand.bulkCreateBrands);",
              "",
              "export const bulkCreateBrands = webMethod(",
              "  Permissions.Anyone,",
              "  async (brands, options) => {",
              "    try {",
              "      const result = await elevatedBulkCreateBrands(brands, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreateBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeleteBrands",
      "params": [
        {
          "name": "brandIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of brands to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "brandIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkDeleteBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes multiple brands",
        "description": [],
        "examples": [
          {
            "title": "bulkDeleteBrands example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function bulkDeleteBrands(brandIds) {",
              "  try {",
              "    const result = await brand.bulkDeleteBrands(brandIds);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkDeleteBrands example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkDeleteBrands = elevate(brand.bulkDeleteBrands);",
              "",
              "export const bulkDeleteBrands = webMethod(",
              "  Permissions.Anyone,",
              "  async (brandIds) => {",
              "    try {",
              "      const result = await elevatedBulkDeleteBrands(brandIds);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDeleteBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkGetOrCreateBrands",
      "params": [
        {
          "name": "brandNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The brands names to fetch or create if they don't exist",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkGetOrCreateBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brandNames"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkGetOrCreateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches brands by name, or creates them if they doesn't exist.",
        "description": [],
        "examples": [
          {
            "title": "bulkGetOrCreateBrands example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function bulkGetOrCreateBrands(brandNames, options) {",
              "  try {",
              "    const result = await brand.bulkGetOrCreateBrands(brandNames, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkGetOrCreateBrands example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkGetOrCreateBrands = elevate(brand.bulkGetOrCreateBrands);",
              "",
              "export const bulkGetOrCreateBrands = webMethod(",
              "  Permissions.Anyone,",
              "  async (brandNames, options) => {",
              "    try {",
              "      const result = await elevatedBulkGetOrCreateBrands(brandNames, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkGetOrCreateBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdateBrands",
      "params": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.MaskedBrand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be updated",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkUpdateBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brands",
        "brands.brand._id",
        "brands.brand.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkUpdateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Bulk updates brands",
        "description": [],
        "examples": [
          {
            "title": "bulkUpdateBrands example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function bulkUpdateBrands(brands, options) {",
              "  try {",
              "    const result = await brand.bulkUpdateBrands(brands, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkUpdateBrands example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkUpdateBrands = elevate(brand.bulkUpdateBrands);",
              "",
              "export const bulkUpdateBrands = webMethod(",
              "  Permissions.Anyone,",
              "  async (brands, options) => {",
              "    try {",
              "      const result = await elevatedBulkUpdateBrands(brands, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdateBrands",
      "isAdminMethod": true
    },
    {
      "name": "createBrand",
      "params": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be created",
          "required": true
        }
      ],
      "requiredFields": [
        "brand",
        "brand.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The created Brand\n"
      },
      "docs": {
        "summary": "Creates a new Brand",
        "description": [],
        "examples": [
          {
            "title": "createBrand example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function createBrand(brand) {",
              "  try {",
              "    const result = await brand.createBrand(brand);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createBrand example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateBrand = elevate(brand.createBrand);",
              "",
              "export const createBrand = webMethod(",
              "  Permissions.Anyone,",
              "  async (brand) => {",
              "    try {",
              "      const result = await elevatedCreateBrand(brand);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createBrand",
      "isAdminMethod": true
    },
    {
      "name": "deleteBrand",
      "params": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to delete",
          "required": true
        }
      ],
      "requiredFields": [
        "brandId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete a Brand, the deleted brand will also be removed from any product it's assigned to",
        "description": [],
        "examples": [
          {
            "title": "deleteBrand example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function deleteBrand(brandId) {",
              "  try {",
              "    const result = await brand.deleteBrand(brandId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteBrand example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteBrand = elevate(brand.deleteBrand);",
              "",
              "export const deleteBrand = webMethod(",
              "  Permissions.Anyone,",
              "  async (brandId) => {",
              "    try {",
              "      const result = await elevatedDeleteBrand(brandId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteBrand",
      "isAdminMethod": true
    },
    {
      "name": "getBrand",
      "params": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to retrieve",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.GetBrandOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brandId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved Brand\n"
      },
      "docs": {
        "summary": "Get a Brand by id",
        "description": [],
        "examples": [
          {
            "title": "getBrand example",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function getBrand(brandId, options) {",
              "  try {",
              "    const result = await brand.getBrand(brandId, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getBrand example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getBrand = webMethod(",
              "  Permissions.Anyone,",
              "  async (brandId, options) => {",
              "    try {",
              "      const result = await brand.getBrand(brandId, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getBrand"
    },
    {
      "name": "getOrCreateBrand",
      "params": [
        {
          "name": "brandName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The brand name to fetch or create if doesn't exist",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.GetOrCreateBrandOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brandName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.GetOrCreateBrandResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches the brand by name, or creates it if it doesn't exist.",
        "description": [],
        "examples": [
          {
            "title": "getOrCreateBrand example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function getOrCreateBrand(brandName, options) {",
              "  try {",
              "    const result = await brand.getOrCreateBrand(brandName, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getOrCreateBrand example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetOrCreateBrand = elevate(brand.getOrCreateBrand);",
              "",
              "export const getOrCreateBrand = webMethod(",
              "  Permissions.Anyone,",
              "  async (brandName, options) => {",
              "    try {",
              "      const result = await elevatedGetOrCreateBrand(brandName, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getOrCreateBrand",
      "isAdminMethod": true
    },
    {
      "name": "queryBrands",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.QueryBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-stores-v3.Brand.BrandsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Query Brands using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)",
        "description": [
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-stores-v3.Brand.BrandsQueryBuilder#eq),[`ne()`](wix-stores-v3.Brand.BrandsQueryBuilder#ne),[`exists()`](wix-stores-v3.Brand.BrandsQueryBuilder#exists),[`in()`](wix-stores-v3.Brand.BrandsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Brand.BrandsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Brand.BrandsQueryBuilder#startsWith)|",
          "|`_createdDate`|[`eq()`](wix-stores-v3.Brand.BrandsQueryBuilder#eq),[`ne()`](wix-stores-v3.Brand.BrandsQueryBuilder#ne),[`exists()`](wix-stores-v3.Brand.BrandsQueryBuilder#exists),[`in()`](wix-stores-v3.Brand.BrandsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Brand.BrandsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Brand.BrandsQueryBuilder#lt),[`le()`](wix-stores-v3.Brand.BrandsQueryBuilder#le),[`gt()`](wix-stores-v3.Brand.BrandsQueryBuilder#gt),[`ge()`](wix-stores-v3.Brand.BrandsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Brand.BrandsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Brand.BrandsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-stores-v3.Brand.BrandsQueryBuilder#eq),[`ne()`](wix-stores-v3.Brand.BrandsQueryBuilder#ne),[`exists()`](wix-stores-v3.Brand.BrandsQueryBuilder#exists),[`in()`](wix-stores-v3.Brand.BrandsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Brand.BrandsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Brand.BrandsQueryBuilder#lt),[`le()`](wix-stores-v3.Brand.BrandsQueryBuilder#le),[`gt()`](wix-stores-v3.Brand.BrandsQueryBuilder#gt),[`ge()`](wix-stores-v3.Brand.BrandsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Brand.BrandsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Brand.BrandsQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-stores-v3.Brand.BrandsQueryBuilder#eq),[`ne()`](wix-stores-v3.Brand.BrandsQueryBuilder#ne),[`exists()`](wix-stores-v3.Brand.BrandsQueryBuilder#exists),[`in()`](wix-stores-v3.Brand.BrandsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Brand.BrandsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Brand.BrandsQueryBuilder#startsWith),[`ascending()`](wix-stores-v3.Brand.BrandsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Brand.BrandsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryBrands example",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function queryBrands() {",
              "  const { items } = brand.queryBrands().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryBrands example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const queryBrands = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await brand.queryBrands(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryBrands"
    },
    {
      "name": "updateBrand",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID",
          "required": true
        },
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.UpdateBrand"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.UpdateBrandOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "brand",
        "brand.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The updated Brand\n"
      },
      "docs": {
        "summary": "Update a Brand, supports partial update\nPass the latest `revision` for a successful update",
        "description": [],
        "examples": [
          {
            "title": "updateBrand example for dashboard page code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "",
              "async function updateBrand(id, brand, options) {",
              "  try {",
              "    const result = await brand.updateBrand(id, brand, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateBrand example for exporting from backend code",
            "body": [
              "import { brand } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateBrand = elevate(brand.updateBrand);",
              "",
              "export const updateBrand = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, brand, options) => {",
              "    try {",
              "      const result = await elevatedUpdateBrand(id, brand, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateBrand",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "App",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The AppDefId"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance Id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Brand",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was last updated"
        },
        {
          "name": "assignedProductsCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of products using this brand.\n> **Note:** This field is returned only when you pass `fields: \"ASSIGNED_PRODUCT_COUNT\"` in the request for Get Brand and Query Brands endpoints."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes by the server.\nfor an update operation to succeed, you MUST pass the latest revision"
        }
      ],
      "docs": {
        "description": [
          "Brand is the main entity of Brands that can be used for lorem ipsum dolor"
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkBrandsResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Updated brand Optional - returned only if requested with `return_entity` set to `true`."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ItemMetadata"
            }
          ],
          "doc": "Information about successful action or error for failure."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsRequest",
      "members": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be created or updated."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResult"
                  }
                ]
              }
            }
          ],
          "doc": "brands created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteBrandsRequest",
      "members": [
        {
          "name": "brandIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of brands to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.ItemMetadata"
                  }
                ]
              }
            }
          ],
          "doc": "bulk action results"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateBrandsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateBrandsRequest",
      "members": [
        {
          "name": "brandNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The brands names to fetch or create if they don't exist"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResult"
                  }
                ]
              }
            }
          ],
          "doc": "brands created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsRequest",
      "members": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.MaskedBrand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be updated"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResult"
                  }
                ]
              }
            }
          ],
          "doc": "Updated brands"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBrandRequest",
      "members": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be created"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The created Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Cursors"
            }
          ],
          "doc": "Cursor strings that point to the next page, previous page, or both."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBrandRequest",
      "members": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to delete"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBrandResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "File",
      "members": [
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by filename (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the file is related to"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetBrandOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetBrandRequest",
      "members": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to retrieve"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The retrieved Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateBrandOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateBrandRequest",
      "members": [
        {
          "name": "brandName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The brand name to fetch or create if doesn't exist"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The retrieved, or created Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCache",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "localDc",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Is local DS"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidateCacheGetByOneOf",
            "members": [
              "app",
              "file",
              "metaSiteId",
              "page",
              "siteId",
              "uri"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheGetByOneOf",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MaskedBrand",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "brands to be updated, may be partial"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Page",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the page is on"
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Page ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryBrandsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryBrandsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorQuery"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryBrandsResponse",
      "members": [
        {
          "name": "brands",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved Brands"
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "URI",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the URI is on"
        },
        {
          "name": "uriPath",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrand",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was last updated"
        },
        {
          "name": "assignedProductsCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of products using this brand.\n> **Note:** This field is returned only when you pass `fields: \"ASSIGNED_PRODUCT_COUNT\"` in the request for Get Brand and Query Brands endpoints."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes by the server.\nfor an update operation to succeed, you MUST pass the latest revision"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandRequest",
      "members": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be updated, may be partial"
        },
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The updated Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
