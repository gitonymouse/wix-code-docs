{
  "name": "Brand",
  "memberOf": "wix-stores-v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-stores-v3-brand",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreateBrands",
      "params": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be created or updated.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkCreateBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brands",
        "brands.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkCreateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates multiple brands.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkCreateBrands example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function bulkCreateBrands(brands, options) {",
              "   try {",
              "     const result = await brand.bulkCreateBrands(brands, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreateBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeleteBrands",
      "params": [
        {
          "name": "brandIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of brands to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "brandIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkDeleteBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes multiple brands",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkDeleteBrands example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function bulkDeleteBrands(brandIds) {",
              "   try {",
              "     const result = await brand.bulkDeleteBrands(brandIds);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDeleteBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkGetOrCreateBrands",
      "params": [
        {
          "name": "brandNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The brands names to fetch or create if they don't exist",
          "required": true
        }
      ],
      "requiredFields": [
        "brandNames"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkGetOrCreateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches brands by name, or creates them if they doesn't exist.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkGetOrCreateBrands example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function bulkGetOrCreateBrands(brandNames) {",
              "   try {",
              "     const result = await brand.bulkGetOrCreateBrands(brandNames);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkGetOrCreateBrands",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdateBrands",
      "params": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.MaskedBrand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be updated",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkUpdateBrandsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "brands",
        "brands.brand._id",
        "brands.brand.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.BulkUpdateBrandsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Bulk updates brands",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "bulkUpdateBrands example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function bulkUpdateBrands(brands, options) {",
              "   try {",
              "     const result = await brand.bulkUpdateBrands(brands, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdateBrands",
      "isAdminMethod": true
    },
    {
      "name": "createBrand",
      "params": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be created",
          "required": true
        }
      ],
      "requiredFields": [
        "brand",
        "brand.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The created Brand\n"
      },
      "docs": {
        "summary": "Creates a new Brand",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "createBrand example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function createBrand(brand) {",
              "   try {",
              "     const result = await brand.createBrand(brand);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createBrand",
      "isAdminMethod": true
    },
    {
      "name": "deleteBrand",
      "params": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to delete",
          "required": true
        }
      ],
      "requiredFields": [
        "brandId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Delete a Brand, the deleted brand will also be removed from any product it's assigned to",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "deleteBrand example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function deleteBrand(brandId) {",
              "   try {",
              "     const result = await brand.deleteBrand(brandId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteBrand",
      "isAdminMethod": true
    },
    {
      "name": "getBrand",
      "params": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to retrieve",
          "required": true
        }
      ],
      "requiredFields": [
        "brandId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The retrieved Brand\n"
      },
      "docs": {
        "summary": "Get a Brand by id",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getBrand example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function getBrand(brandId) {",
              "   try {",
              "     const result = await brand.getBrand(brandId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getBrand",
      "isAdminMethod": true
    },
    {
      "name": "getOrCreateBrand",
      "params": [
        {
          "name": "brandName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The brand name to fetch or create if doesn't exist",
          "required": true
        }
      ],
      "requiredFields": [
        "brandName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.GetOrCreateBrandResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches the brand by name, or creates it if it doesn't exist.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getOrCreateBrand example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function getOrCreateBrand(brandName) {",
              "   try {",
              "     const result = await brand.getOrCreateBrand(brandName);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getOrCreateBrand",
      "isAdminMethod": true
    },
    {
      "name": "queryBrands",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-stores-v3.Brand.BrandsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Query endpoint for wix-stores-v3",
        "description": [
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`name`|[`eq()`](wix-stores-v3.Brand.BrandsQueryBuilder#eq),[`ne()`](wix-stores-v3.Brand.BrandsQueryBuilder#ne),[`exists()`](wix-stores-v3.Brand.BrandsQueryBuilder#exists),[`in()`](wix-stores-v3.Brand.BrandsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Brand.BrandsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Brand.BrandsQueryBuilder#startsWith),[`ascending()`](wix-stores-v3.Brand.BrandsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Brand.BrandsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryBrands example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function queryBrands() {",
              "   const { items } = brand.queryBrands().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryBrands",
      "isAdminMethod": true
    },
    {
      "name": "updateBrand",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID",
          "required": true
        },
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.UpdateBrand"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "brand",
        "brand.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Brand.Brand"
                }
              ]
            }
          }
        ],
        "doc": "The updated Brand\n"
      },
      "docs": {
        "summary": "Update a Brand, supports partial update\nPass the latest `revision` for a successful update",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "updateBrand example",
            "body": [
              "import { brand } from 'wix-stores-v3';",
              "  ",
              " async function updateBrand(id, brand, options) {",
              "   try {",
              "     const result = await brand.updateBrand(id, brand, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateBrand",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Brand",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was last updated"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes by the server.\nfor an update operation to succeed, you MUST pass the latest revision"
        }
      ],
      "docs": {
        "description": [
          "Brand is the main entity of Brands that can be used for lorem ipsum dolor"
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkBrandsResults",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Updated brand Optional - returned only if requested with `return_entity` set to `true`."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ItemMetadata"
            }
          ],
          "doc": "Information about successful action or error for failure."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsRequest",
      "members": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be created or updated."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full brand entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResults"
                  }
                ]
              }
            }
          ],
          "doc": "brands created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteBrandsRequest",
      "members": [
        {
          "name": "brandIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of brands to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.ItemMetadata"
                  }
                ]
              }
            }
          ],
          "doc": "bulk action results"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateBrandsRequest",
      "members": [
        {
          "name": "brandNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The brands names to fetch or create if they don't exist"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResults"
                  }
                ]
              }
            }
          ],
          "doc": "brands created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full category entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsRequest",
      "members": [
        {
          "name": "brands",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.MaskedBrand"
                  }
                ]
              }
            }
          ],
          "doc": "List of brands to be updated"
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full category entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateBrandsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.BulkBrandsResults"
                  }
                ]
              }
            }
          ],
          "doc": "Updated brands"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBrandRequest",
      "members": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be created"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The created Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBrandRequest",
      "members": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to delete"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteBrandResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetBrandRequest",
      "members": [
        {
          "name": "brandId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Brand to retrieve"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The retrieved Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateBrandRequest",
      "members": [
        {
          "name": "brandName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The brand name to fetch or create if doesn't exist"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MaskedBrand",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "brands to be updated, may be partial"
        },
        {
          "name": "fieldMask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Explicit list of fields to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryBrandsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorQuery"
            }
          ],
          "doc": "WQL expression"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryBrandsResponse",
      "members": [
        {
          "name": "brands",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Brand.Brand"
                  }
                ]
              }
            }
          ],
          "doc": "The retrieved Brands"
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrand",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was created"
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand ID"
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Represents the time this Brand was last updated"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Brand name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Represents the current state of an item. Each time the item is modified, its `revision` changes by the server.\nfor an update operation to succeed, you MUST pass the latest revision"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandRequest",
      "members": [
        {
          "name": "brand",
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "Brand to be updated, may be partial"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateBrandResponse",
      "members": [
        {
          "name": "brand",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Brand.Brand"
            }
          ],
          "doc": "The updated Brand"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
