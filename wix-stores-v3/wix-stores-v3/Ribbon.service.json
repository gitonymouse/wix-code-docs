{
  "name": "Ribbon",
  "memberOf": "wix-stores-v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-stores.v3-ribbon",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreateRibbons",
      "params": [
        {
          "name": "ribbons",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                  }
                ]
              }
            }
          ],
          "doc": "List of ribbons to be created.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkCreateRibbonsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "ribbons",
        "ribbons.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.BulkCreateRibbonsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates multiple ribbons.",
        "description": [],
        "examples": [
          {
            "title": "bulkCreateRibbons example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function bulkCreateRibbons(ribbons, options) {",
              "  try {",
              "    const result = await ribbon.bulkCreateRibbons(ribbons, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkCreateRibbons example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkCreateRibbons = elevate(ribbon.bulkCreateRibbons);",
              "",
              "export const bulkCreateRibbons = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbons, options) => {",
              "    try {",
              "      const result = await elevatedBulkCreateRibbons(ribbons, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreateRibbons",
      "isAdminMethod": true
    },
    {
      "name": "bulkDeleteRibbons",
      "params": [
        {
          "name": "ribbonIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of ribbons to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "ribbonIds"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.BulkDeleteRibbonsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes multiple ribbons",
        "description": [],
        "examples": [
          {
            "title": "bulkDeleteRibbons example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function bulkDeleteRibbons(ribbonIds) {",
              "  try {",
              "    const result = await ribbon.bulkDeleteRibbons(ribbonIds);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkDeleteRibbons example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkDeleteRibbons = elevate(ribbon.bulkDeleteRibbons);",
              "",
              "export const bulkDeleteRibbons = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbonIds) => {",
              "    try {",
              "      const result = await elevatedBulkDeleteRibbons(ribbonIds);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkDeleteRibbons",
      "isAdminMethod": true
    },
    {
      "name": "bulkGetOrCreateRibbons",
      "params": [
        {
          "name": "ribbonNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The ribbon names to fetch or create if they don't exist",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkGetOrCreateRibbonsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "ribbonNames"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.BulkGetOrCreateRibbonsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches multiple ribbons by name, or creates them if they doesn't exist.",
        "description": [],
        "examples": [
          {
            "title": "bulkGetOrCreateRibbons example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function bulkGetOrCreateRibbons(ribbonNames, options) {",
              "  try {",
              "    const result = await ribbon.bulkGetOrCreateRibbons(ribbonNames, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkGetOrCreateRibbons example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkGetOrCreateRibbons = elevate(ribbon.bulkGetOrCreateRibbons);",
              "",
              "export const bulkGetOrCreateRibbons = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbonNames, options) => {",
              "    try {",
              "      const result = await elevatedBulkGetOrCreateRibbons(ribbonNames, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkGetOrCreateRibbons",
      "isAdminMethod": true
    },
    {
      "name": "bulkUpdateRibbons",
      "params": [
        {
          "name": "ribbons",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.MaskedRibbon"
                  }
                ]
              }
            }
          ],
          "doc": "List of ribbons to be updated",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkUpdateRibbonsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "ribbons",
        "ribbons.ribbon._id",
        "ribbons.ribbon.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.BulkUpdateRibbonsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Bulk updates ribbons",
        "description": [],
        "examples": [
          {
            "title": "bulkUpdateRibbons example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function bulkUpdateRibbons(ribbons, options) {",
              "  try {",
              "    const result = await ribbon.bulkUpdateRibbons(ribbons, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "bulkUpdateRibbons example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedBulkUpdateRibbons = elevate(ribbon.bulkUpdateRibbons);",
              "",
              "export const bulkUpdateRibbons = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbons, options) => {",
              "    try {",
              "      const result = await elevatedBulkUpdateRibbons(ribbons, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkUpdateRibbons",
      "isAdminMethod": true
    },
    {
      "name": "createRibbon",
      "params": [
        {
          "name": "ribbon",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "Ribbon to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "ribbon",
        "ribbon.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                }
              ]
            }
          }
        ],
        "doc": "The created Ribbon.\n"
      },
      "docs": {
        "summary": "Creates a Ribbon.",
        "description": [
          "The request body must include name."
        ],
        "examples": [
          {
            "title": "createRibbon example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function createRibbon(ribbon) {",
              "  try {",
              "    const result = await ribbon.createRibbon(ribbon);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createRibbon example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateRibbon = elevate(ribbon.createRibbon);",
              "",
              "export const createRibbon = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbon) => {",
              "    try {",
              "      const result = await elevatedCreateRibbon(ribbon);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createRibbon",
      "isAdminMethod": true
    },
    {
      "name": "deleteRibbon",
      "params": [
        {
          "name": "ribbonId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Ribbon to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "ribbonId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a Ribbon.",
        "description": [
          "Deleting a Ribbon permanently removes them from the Ribbon List."
        ],
        "examples": [
          {
            "title": "deleteRibbon example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function deleteRibbon(ribbonId) {",
              "  try {",
              "    const result = await ribbon.deleteRibbon(ribbonId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteRibbon example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteRibbon = elevate(ribbon.deleteRibbon);",
              "",
              "export const deleteRibbon = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbonId) => {",
              "    try {",
              "      const result = await elevatedDeleteRibbon(ribbonId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteRibbon",
      "isAdminMethod": true
    },
    {
      "name": "getOrCreateRibbon",
      "params": [
        {
          "name": "ribbonName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The ribbon name to fetch or create if doesn't exist",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.GetOrCreateRibbonOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "ribbonName"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.GetOrCreateRibbonResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Fetches the ribbon by name, or creates it if it doesn't exist.",
        "description": [],
        "examples": [
          {
            "title": "getOrCreateRibbon example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function getOrCreateRibbon(ribbonName, options) {",
              "  try {",
              "    const result = await ribbon.getOrCreateRibbon(ribbonName, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getOrCreateRibbon example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetOrCreateRibbon = elevate(ribbon.getOrCreateRibbon);",
              "",
              "export const getOrCreateRibbon = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbonName, options) => {",
              "    try {",
              "      const result = await elevatedGetOrCreateRibbon(ribbonName, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getOrCreateRibbon",
      "isAdminMethod": true
    },
    {
      "name": "getRibbon",
      "params": [
        {
          "name": "ribbonId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the Ribbon to retrieve.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.GetRibbonOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "ribbonId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                }
              ]
            }
          }
        ],
        "doc": "The requested Ribbon.\n"
      },
      "docs": {
        "summary": "Retrieves a Ribbon.",
        "description": [],
        "examples": [
          {
            "title": "getRibbon example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function getRibbon(ribbonId, options) {",
              "  try {",
              "    const result = await ribbon.getRibbon(ribbonId, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getRibbon example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedGetRibbon = elevate(ribbon.getRibbon);",
              "",
              "export const getRibbon = webMethod(",
              "  Permissions.Anyone,",
              "  async (ribbonId, options) => {",
              "    try {",
              "      const result = await elevatedGetRibbon(ribbonId, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getRibbon",
      "isAdminMethod": true
    },
    {
      "name": "queryRibbons",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.QueryRibbonsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-stores-v3.Ribbon.RibbonsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of Ribbons, given the provided [paging, filtering, and sorting][1].",
        "description": [
          "",
          "Up to 1,000 Ribbons can be returned per request.",
          "",
          "To learn how to query Ribbons, see [API Query Language][2].",
          "",
          "[1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging",
          "[2]: https://dev.wix.com/api/rest/getting-started/api-query-language",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#eq),[`ne()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ne),[`exists()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#exists),[`in()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#startsWith)|",
          "|`_createdDate`|[`eq()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#eq),[`ne()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ne),[`exists()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#exists),[`in()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#lt),[`le()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#le),[`gt()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#gt),[`ge()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#eq),[`ne()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ne),[`exists()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#exists),[`in()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#hasSome),[`lt()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#lt),[`le()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#le),[`gt()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#gt),[`ge()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ge),[`ascending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#eq),[`ne()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ne),[`exists()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#exists),[`in()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#in),[`hasSome()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#hasSome),[`startsWith()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#startsWith),[`ascending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#ascending),[`descending()`](wix-stores-v3.Ribbon.RibbonsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryRibbons example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function queryRibbons() {",
              "  const { items } = ribbon.queryRibbons().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryRibbons example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedQueryRibbons = elevate(ribbon.queryRibbons);",
              "",
              "export const queryRibbons = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedQueryRibbons(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryRibbons",
      "isAdminMethod": true
    },
    {
      "name": "updateRibbon",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ribbon ID.",
          "required": true
        },
        {
          "name": "ribbon",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.UpdateRibbon"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.UpdateRibbonOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "ribbon",
        "ribbon.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                }
              ]
            }
          }
        ],
        "doc": "Updated Ribbon.\n"
      },
      "docs": {
        "summary": "Updates a Ribbon.",
        "description": [
          "Each time the Ribbon is updated,\n`revision` increments by 1.\nThe current `revision` must be passed when updating the Ribbon.\nThis ensures you're working with the latest Ribbon\nand prevents unintended overwrites."
        ],
        "examples": [
          {
            "title": "updateRibbon example for dashboard page code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "",
              "async function updateRibbon(id, ribbon, options) {",
              "  try {",
              "    const result = await ribbon.updateRibbon(id, ribbon, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateRibbon example for exporting from backend code",
            "body": [
              "import { ribbon } from 'wix-stores.v3';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateRibbon = elevate(ribbon.updateRibbon);",
              "",
              "export const updateRibbon = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, ribbon, options) => {",
              "    try {",
              "      const result = await elevatedUpdateRibbon(id, ribbon, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateRibbon",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "App",
      "members": [
        {
          "name": "appDefId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The AppDefId"
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The instance Id"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateRibbonsOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full ribbon entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateRibbonsRequest",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full ribbon entity in the response."
        },
        {
          "name": "ribbons",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                  }
                ]
              }
            }
          ],
          "doc": "List of ribbons to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateRibbonsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.BulkRibbonResult"
                  }
                ]
              }
            }
          ],
          "doc": "ribbons created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteRibbonsRequest",
      "members": [
        {
          "name": "ribbonIds",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of ribbons to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteRibbonsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.ItemMetadata"
                  }
                ]
              }
            }
          ],
          "doc": "ribbons deleted by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateRibbonsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateRibbonsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "ribbonNames",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "The ribbon names to fetch or create if they don't exist"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkGetOrCreateRibbonsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.BulkRibbonResult"
                  }
                ]
              }
            }
          ],
          "doc": "ribbons created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkRibbonResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "Updated ribbon Optional - returned only if requested with `return_entity` set to `true`."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.ItemMetadata"
            }
          ],
          "doc": "Information about successful action or error for failure."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateRibbonsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full ribbon entity in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateRibbonsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full ribbon entity in the response."
        },
        {
          "name": "ribbons",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.MaskedRibbon"
                  }
                ]
              }
            }
          ],
          "doc": "List of ribbons to be updated"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkUpdateRibbonsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.BulkRibbonResult"
                  }
                ]
              }
            }
          ],
          "doc": "Updated ribbons"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateRibbonRequest",
      "members": [
        {
          "name": "ribbon",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "Ribbon to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateRibbonResponse",
      "members": [
        {
          "name": "ribbon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "The created Ribbon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Cursors"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Indicates if there are more results after the current page.\nIf `true`, another page of results can be retrieved.\nIf `false`, this is the last page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteRibbonRequest",
      "members": [
        {
          "name": "ribbonId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Id of the Ribbon to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteRibbonResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "File",
      "members": [
        {
          "name": "fileName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by filename (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the file is related to"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateRibbonOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateRibbonRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "ribbonName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The ribbon name to fetch or create if doesn't exist"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetOrCreateRibbonResponse",
      "members": [
        {
          "name": "ribbon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRibbonOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRibbonRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "ribbonId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the Ribbon to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRibbonResponse",
      "members": [
        {
          "name": "ribbon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "The requested Ribbon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCache",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "localDc",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Is local DS"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "reason",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "tell us why you're invalidating the cache. You don't need to add your app name"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidateCacheGetByOneOf",
            "members": [
              "app",
              "file",
              "metaSiteId",
              "page",
              "siteId",
              "uri"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheGetByOneOf",
      "members": [
        {
          "name": "app",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.App"
            }
          ],
          "doc": "Invalidate by App"
        },
        {
          "name": "file",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.File"
            }
          ],
          "doc": "Invalidate by file (for media files such as PDFs)"
        },
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "page",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Page"
            }
          ],
          "doc": "Invalidate by page id"
        },
        {
          "name": "siteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!"
        },
        {
          "name": "uri",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.URI"
            }
          ],
          "doc": "Invalidate by URI path"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MaskedRibbon",
      "members": [
        {
          "name": "ribbon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "ribbons to be updated, may be partial"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Page",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the page is on"
        },
        {
          "name": "pageId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Invalidate by Page ID"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRibbonsOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRibbonsRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.CursorQuery"
            }
          ],
          "doc": "WQL expression."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRibbonsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        },
        {
          "name": "ribbons",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-stores-v3.Ribbon.Ribbon"
                  }
                ]
              }
            }
          ],
          "doc": "List of Ribbons."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Ribbon",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the Ribbon was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ribbon ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the Ribbon was last updated."
        },
        {
          "name": "assignedProductCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of products assigned to this ribbon.\n> **Note:** This field is returned by the API only when you pass `fields: \"ASSIGNED_PRODUCT_COUNT\"` in the request for Get Ribbon and Query Ribbons endpoints."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ribbon name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the Ribbon is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the Ribbon.\n\nIgnored when creating a Ribbon."
        }
      ],
      "docs": {
        "description": [
          "Ribbon is the main entity of RibbonService"
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "URI",
      "members": [
        {
          "name": "metaSiteId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "the msid the URI is on"
        },
        {
          "name": "uriPath",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRibbon",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the Ribbon was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ribbon ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the Ribbon was last updated."
        },
        {
          "name": "assignedProductCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of products assigned to this ribbon.\n> **Note:** This field is returned by the API only when you pass `fields: \"ASSIGNED_PRODUCT_COUNT\"` in the request for Get Ribbon and Query Ribbons endpoints."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ribbon name"
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the Ribbon is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the Ribbon.\n\nIgnored when creating a Ribbon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRibbonOptions",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRibbonRequest",
      "members": [
        {
          "name": "fields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "A list of requested fields to be included in the response."
        },
        {
          "name": "ribbon",
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "Ribbon to be updated, may be partial."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRibbonResponse",
      "members": [
        {
          "name": "ribbon",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-stores-v3.Ribbon.Ribbon"
            }
          ],
          "doc": "Updated Ribbon."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
