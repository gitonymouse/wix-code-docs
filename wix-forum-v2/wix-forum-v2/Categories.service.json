{
  "name": "Categories",
  "memberOf": "wix-forum-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-forum.v2-category",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "getCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the retrieved category.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.GetCategoryOptions"
            }
          ],
          "doc": "Options specifying which fields to return.",
          "required": false
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.Category"
                }
              ]
            }
          }
        ],
        "doc": "Retrieved category for the provided category ID.\n"
      },
      "docs": {
        "summary": "Returns a single category by ID.",
        "description": [],
        "examples": [
          {
            "title": "getCategory example",
            "body": [
              "import { categories } from '@wix/wix-forum.v2';",
              "  ",
              " async function getCategory(categoryId, options) {",
              "   try {",
              "     const result = await categories.getCategory(categoryId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getCategory",
      "isAdminMethod": true
    },
    {
      "name": "getCategoryBySlug",
      "params": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.GetCategoryBySlugOptions"
            }
          ],
          "doc": "Options specifying which fields to return.",
          "required": false
        }
      ],
      "requiredFields": [
        "slug"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.CategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns a single category by URL slug.",
        "description": [],
        "examples": [
          {
            "title": "getCategoryBySlug example",
            "body": [
              "import { categories } from '@wix/wix-forum.v2';",
              "  ",
              " async function getCategoryBySlug(slug, options) {",
              "   try {",
              "     const result = await categories.getCategoryBySlug(slug, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getCategoryBySlug",
      "isAdminMethod": true
    },
    {
      "name": "queryCategories",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.QueryCategoriesOptions"
            }
          ],
          "doc": "Options for sorting, filtering, paging, and specifying return fields.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.QueryCategoriesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of categories, given the provided paging, filtering, and sorting.",
        "description": [
          "Query Categories runs with these defaults, which you can override:\n\n- `paging.limit` is `10`\n- `paging.offset` is `0`\n\nFor field support for filters and sorting,\nsee [Categories: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-forum/wix-forum/filter-and-sort#category-api-supported-filters-and-sorting).\n\nTo learn about working with _Query_ endpoints, see\n[API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n[Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging),\nand [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection)."
        ],
        "examples": [
          {
            "title": "queryCategories example",
            "body": [
              "import { categories } from '@wix/wix-forum.v2';",
              "  ",
              " async function queryCategories(options) {",
              "   try {",
              "     const result = await categories.queryCategories(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryCategories",
      "isAdminMethod": true
    },
    {
      "name": "subscribeContactToCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.SubscribeContactToCategoryOptions"
            }
          ],
          "doc": "Options for subscribing the contact.",
          "required": false
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Subscribes a contact to a specific forum category.",
        "description": [
          "By default a contact isn't subscribed to any forum categories.\n\nBy subscribing a contact to a category, the contact receives notifications for that category.\n\nIf `contactId` is not provided, it is implicitly resolved from the caller's context."
        ],
        "examples": [
          {
            "title": "subscribeContactToCategory example",
            "body": [
              "import { categories } from '@wix/wix-forum.v2';",
              "  ",
              " async function subscribeContactToCategory(categoryId, options) {",
              "   try {",
              "     const result = await categories.subscribeContactToCategory(categoryId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "subscribeContactToCategory",
      "isAdminMethod": true
    },
    {
      "name": "unsubscribeContactFromCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.UnsubscribeContactFromCategoryOptions"
            }
          ],
          "doc": "Options for unsubscribing the contact.",
          "required": false
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Unsubscribes a contact from a specific forum category.",
        "description": [
          "By default a contact isn't subscribed to any forum categories.\n\nBy unsubscribing a contact from a category, the contact wonâ€™t receive notifications for that category.\n\nIf `contactId` is not provided, it is implicitly resolved from the caller's context."
        ],
        "examples": [
          {
            "title": "unsubscribeContactFromCategory example",
            "body": [
              "import { categories } from '@wix/wix-forum.v2';",
              "  ",
              " async function unsubscribeContactFromCategory(categoryId, options) {",
              "   try {",
              "     const result = await categories.unsubscribeContactFromCategory(categoryId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "unsubscribeContactFromCategory",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoriesPaging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoriesSort",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Records can be sorted by:\nrank\npostCount\npostViewCount"
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Records can be sorted in ascending (default) or descending order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Category",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date category was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "_updatedDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date category was updated."
        },
        {
          "name": "additionalCommentReactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Reaction"
                  }
                ]
              }
            }
          ],
          "doc": "Defines what additional reactions may be applied on the comment under the posts created in this category."
        },
        {
          "name": "additionalPostReactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Reaction"
                  }
                ]
              }
            }
          ],
          "doc": "Defines what additional reactions may be applied on the posts created in this category."
        },
        {
          "name": "categoryAccess",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Whether all site visitors and members (`PUBLIC`), all members (`MEMBERS_ONLY`), or only specific members and groups of members with roles, badges or paid subscriptions (`PRIVATE`) can access posts in category.\n\nSupported values: `\"UNKNOWN\"`, `\"PUBLIC\"`, `\"MEMBERS_ONLY\"`, `\"PRIVATE\"`."
        },
        {
          "name": "commentInteraction",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Defines what interactions may be applied on the comment under the posts created in this category.\n\nSupported values: `\"REACTION\"`, `\"VOTE\"`.\n"
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category description."
        },
        {
          "name": "groups",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of groups which can access category if `categoryAccess` is `'PRIVATE'`."
        },
        {
          "name": "headerImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header image."
        },
        {
          "name": "headerTitle",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header title."
        },
        {
          "name": "headerType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header type.\n\nSupported values: `\"NONE\"`, `\"COLOR\"`, `\"IMAGE\"`.\n"
        },
        {
          "name": "mainCommentReaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Reaction"
            }
          ],
          "doc": "Defines which icon will be used for the main reaction on the comment under the posts created in this category.\n\nDefault `type`: `\"LIKE\"`.\n"
        },
        {
          "name": "mainPostReaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Reaction"
            }
          ],
          "doc": "Defines which icon will be used for main reaction on the posts created in this category.\n\nDefault `type`: `\"LIKE\"`.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "noMemberPosting",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether only admins and moderators can write posts in category."
        },
        {
          "name": "parentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category parent ID."
        },
        {
          "name": "postCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of posts in category."
        },
        {
          "name": "postInteraction",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Defines what interactions may be applied on the posts created in this category, like or multiple reactions."
        },
        {
          "name": "postViewCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of post views in category."
        },
        {
          "name": "rank",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The position of the category in the display order."
        },
        {
          "name": "slug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category slug."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the retrieved category."
        },
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoryResponse",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Retrieved category for the provided category ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategorySlugRequest",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        },
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ColorComponent",
      "members": [
        {
          "name": "color",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Hex Color Code"
        },
        {
          "name": "opacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Opacity (from 0 to 1)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCategoryOptions",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCategoryRequest",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCategoryResponse",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCategoryBySlugOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCategoryOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Keyword",
      "members": [
        {
          "name": "isMain",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the keyword is the main focus keyword."
        },
        {
          "name": "term",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Keyword value."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadOptions",
      "members": [
        {
          "name": "categoryId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read posts category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadRequest",
      "members": [
        {
          "name": "categoryId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read posts category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkCategoryReadRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkCategoryReadResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object (e.g., { $and: [{ postViewCount: { $gt: 0 } }, { postCount: { $gt: 0 }] } )"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.CategoriesPaging"
            }
          ],
          "doc": "Paging object (e.g., {limit: 10, offset: 100 } )"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.CategoriesSort"
                  }
                ]
              }
            }
          ],
          "doc": "Array of sort objects (e.g.,  [{ fieldName: rank, order: Order.ASC }] )"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesRequest",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object (e.g., { $and: [{ postViewCount: { $gt: 0 } }, { postCount: { $gt: 0 }] } )"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.CategoriesPaging"
            }
          ],
          "doc": "Paging object (e.g., {limit: 10, offset: 100 } )"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.CategoriesSort"
                  }
                ]
              }
            }
          ],
          "doc": "Array of sort objects (e.g.,  [{ fieldName: rank, order: Order.ASC }] )"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesResponse",
      "members": [
        {
          "name": "categories",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Category"
                  }
                ]
              }
            }
          ],
          "doc": "List of categories."
        },
        {
          "name": "metaData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.QueryCategoriesResponseMetaData"
            }
          ],
          "doc": "Pagination."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesResponseMetaData",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of records returned."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset of records."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of records that match the filters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Reaction",
      "members": [
        {
          "name": "code",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANGRY'`\n- `'CLAP'`\n- `'HAHA'`\n- `'LIKE'`\n- `'LOVE'`\n- `'SAD'`\n- `'SMILE'`\n- `'THINKING'`\n- `'THUMBS_DOWN'`\n- `'THUMBS_UP'`\n- `'WOW'`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfReactionReactionOneOf",
            "members": [
              "type"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReactionReactionOneOf",
      "members": [
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANGRY'`\n- `'CLAP'`\n- `'HAHA'`\n- `'LIKE'`\n- `'LOVE'`\n- `'SAD'`\n- `'SMILE'`\n- `'THINKING'`\n- `'THUMBS_DOWN'`\n- `'THUMBS_UP'`\n- `'WOW'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SeoSchema",
      "members": [
        {
          "name": "settings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Settings"
            }
          ],
          "doc": "SEO general settings."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "SEO tag information."
        }
      ],
      "docs": {
        "description": [
          "The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\nThe search engines use this information for ranking purposes, or to display snippets in the search results.\nThis data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself."
        ]
      }
    },
    {
      "name": "Settings",
      "members": [
        {
          "name": "keywords",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Keyword"
                  }
                ]
              }
            }
          ],
          "doc": "User-selected keyword terms for a specific page."
        },
        {
          "name": "preventAutoRedirect",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled.\n\nDefault: `false` (Auto Redirect is enabled.)\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SubscribeContactToCategoryOptions",
      "members": [
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SubscribeContactToCategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SubscribeContactToCategoryResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Tag",
      "members": [
        {
          "name": "children",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag inner content. For example, `<title> inner content </title>`."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is a custom tag."
        },
        {
          "name": "disabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is disabled."
        },
        {
          "name": "meta",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "SEO tag meta data. For example, `{height: 300, width: 240}`."
        },
        {
          "name": "props",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\nFor example: `{'name': 'description', 'content': 'the description itself'}`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag type.\n\nSupported values: `title`, `meta`, `script`, `link`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnsubscribeContactFromCategoryOptions",
      "members": [
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnsubscribeContactFromCategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Contact ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UnsubscribeContactFromCategoryResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCategoryOptions",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Editable category data."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCategoryRequest",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Editable category data."
        },
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
