{
  "name": "Categories",
  "memberOf": "wix-forum-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-forum.v2-category",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createCategory",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.CreateCategoryOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "options.category.description",
        "options.category.name"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.CategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates a new category.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "createCategory example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function createCategory(options) {",
              "   try {",
              "     const result = await categories.createCategory(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createCategory",
      "isAdminMethod": true
    },
    {
      "name": "deleteCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category.",
          "required": true
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.DeleteCategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a category (only if it is not last category).",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "deleteCategory example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function deleteCategory(categoryId) {",
              "   try {",
              "     const result = await categories.deleteCategory(categoryId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteCategory",
      "isAdminMethod": true
    },
    {
      "name": "getCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the retrieved category.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.GetCategoryOptions"
            }
          ],
          "doc": "Options specifying which fields to return.",
          "required": false
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.CategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns a single category by ID.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getCategory example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function getCategory(categoryId, options) {",
              "   try {",
              "     const result = await categories.getCategory(categoryId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getCategory",
      "isAdminMethod": true
    },
    {
      "name": "getCategoryBySlug",
      "params": [
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.GetCategoryBySlugOptions"
            }
          ],
          "doc": "Options specifying which fields to return.",
          "required": false
        }
      ],
      "requiredFields": [
        "slug"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.CategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Returns a single category by URL slug.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "getCategoryBySlug example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function getCategoryBySlug(slug, options) {",
              "   try {",
              "     const result = await categories.getCategoryBySlug(slug, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getCategoryBySlug",
      "isAdminMethod": true
    },
    {
      "name": "markAllPostsAsRead",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.MarkAllPostsAsReadOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Marks all category posts as read for identity who made a request. If categoryId is not provided it marks all posts in the forum as read",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "markAllPostsAsRead example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function markAllPostsAsRead(options) {",
              "   try {",
              "     const result = await categories.markAllPostsAsRead(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "markAllPostsAsRead",
      "isAdminMethod": true
    },
    {
      "name": "markCategoryRead",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read category.",
          "required": true
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Marks category as read for identity who made a request.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "markCategoryRead example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function markCategoryRead(categoryId) {",
              "   try {",
              "     const result = await categories.markCategoryRead(categoryId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "markCategoryRead",
      "isAdminMethod": true
    },
    {
      "name": "queryCategories",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.QueryCategoriesOptions"
            }
          ],
          "doc": "Options for sorting, filtering, paging, and specifying return fields.",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.QueryCategoriesResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of categories, given the provided paging, filtering, and sorting.",
        "description": [
          "Query Categories runs with these defaults, which you can override:\n\n- `paging.limit` is `10`\n- `paging.offset` is `0`\n\nFor field support for filters and sorting,\nsee [Categories: Supported Filters and Sorting](https://dev.wix.com/docs/rest/api-reference/wix-forum/wix-forum/filter-and-sort#category-api-supported-filters-and-sorting).\n\nTo learn about working with _Query_ endpoints, see\n[API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),\n[Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging),\nand [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).\n\nThis function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "queryCategories example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function queryCategories(options) {",
              "   try {",
              "     const result = await categories.queryCategories(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryCategories",
      "isAdminMethod": true
    },
    {
      "name": "updateCategory",
      "params": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.UpdateCategoryOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "categoryId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-forum-v2.Categories.CategoryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Updates a category's fields according to `fieldMask`.",
        "description": [
          "This function is not a universal function and runs only on the backend."
        ],
        "examples": [
          {
            "title": "updateCategory example",
            "body": [
              "import { categories } from 'wix-forum.v2';",
              "  ",
              " async function updateCategory(categoryId, options) {",
              "   try {",
              "     const result = await categories.updateCategory(categoryId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateCategory",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "CategoriesPaging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items to load."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoriesSort",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Records can be sorted by:\nrank\npostCount\npostViewCount"
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Records can be sorted in ascending (default) or descending order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Category",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date category was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category ID."
        },
        {
          "name": "_updatedDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date category was updated."
        },
        {
          "name": "additionalCommentReactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Reaction"
                  }
                ]
              }
            }
          ],
          "doc": "Defines what additional reactions may be applied on the comment under the posts created in this category."
        },
        {
          "name": "additionalPostReactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Reaction"
                  }
                ]
              }
            }
          ],
          "doc": "Defines what additional reactions may be applied on the posts created in this category."
        },
        {
          "name": "categoryAccess",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Whether all site visitors and members (`PUBLIC`), all members (`MEMBERS_ONLY`), or only specific members and groups of members with roles, badges or paid subscriptions (`PRIVATE`) can access posts in category.\n\nSupported values: `\"UNKNOWN\"`, `\"PUBLIC\"`, `\"MEMBERS_ONLY\"`, `\"PRIVATE\"`."
        },
        {
          "name": "commentInteraction",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Defines what interactions may be applied on the comment under the posts created in this category.\n\nSupported values: `\"REACTION\"`, `\"VOTE\"`.\n"
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category description."
        },
        {
          "name": "groups",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "IDs of groups which can access category if `categoryAccess` is `'PRIVATE'`."
        },
        {
          "name": "headerImage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header image."
        },
        {
          "name": "headerTitle",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header title."
        },
        {
          "name": "headerType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category header type.\n\nSupported values: `\"NONE\"`, `\"COLOR\"`, `\"IMAGE\"`.\n"
        },
        {
          "name": "mainCommentReaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Reaction"
            }
          ],
          "doc": "Defines which icon will be used for the main reaction on the comment under the posts created in this category.\n\nDefault `type`: `\"LIKE\"`.\n"
        },
        {
          "name": "mainPostReaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Reaction"
            }
          ],
          "doc": "Defines which icon will be used for main reaction on the posts created in this category.\n\nDefault `type`: `\"LIKE\"`.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category name."
        },
        {
          "name": "noMemberPosting",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether only admins and moderators can write posts in category."
        },
        {
          "name": "parentId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category parent ID."
        },
        {
          "name": "postCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of posts in category."
        },
        {
          "name": "postInteraction",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Defines what interactions may be applied on the posts created in this category, like or multiple reactions."
        },
        {
          "name": "postViewCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of post views in category."
        },
        {
          "name": "rank",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The position of the category in the display order."
        },
        {
          "name": "slug",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category slug."
        },
        {
          "name": "url",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Category URL."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the retrieved category."
        },
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategoryResponse",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Retrieved category for the provided category ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CategorySlugRequest",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        },
        {
          "name": "slug",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "URL slug."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ColorComponent",
      "members": [
        {
          "name": "color",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Hex Color Code"
        },
        {
          "name": "opacity",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Opacity (from 0 to 1)"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCategoryOptions",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateCategoryRequest",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCategoryRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteCategoryResponse",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCategoryBySlugOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetCategoryOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Keyword",
      "members": [
        {
          "name": "isMain",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the keyword is the main focus keyword."
        },
        {
          "name": "term",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Keyword value."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadOptions",
      "members": [
        {
          "name": "categoryId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read posts category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadRequest",
      "members": [
        {
          "name": "categoryId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read posts category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkAllPostsAsReadResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkCategoryReadRequest",
      "members": [
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the read category."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MarkCategoryReadResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesOptions",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be included in the response.\n\nSupported Values: `\"URL\"`.\n"
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object (e.g., { $and: [{ postViewCount: { $gt: 0 } }, { postCount: { $gt: 0 }] } )"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.CategoriesPaging"
            }
          ],
          "doc": "Paging object (e.g., {limit: 10, offset: 100 } )"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.CategoriesSort"
                  }
                ]
              }
            }
          ],
          "doc": "Array of sort objects (e.g.,  [{ fieldName: rank, order: Order.ASC }] )"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesRequest",
      "members": [
        {
          "name": "extraFields",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Array of extra category fields to be added in the response. `UNKNOWN` must not be passed."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object (e.g., { $and: [{ postViewCount: { $gt: 0 } }, { postCount: { $gt: 0 }] } )"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.CategoriesPaging"
            }
          ],
          "doc": "Paging object (e.g., {limit: 10, offset: 100 } )"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.CategoriesSort"
                  }
                ]
              }
            }
          ],
          "doc": "Array of sort objects (e.g.,  [{ fieldName: rank, order: Order.ASC }] )"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesResponse",
      "members": [
        {
          "name": "categories",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Category"
                  }
                ]
              }
            }
          ],
          "doc": "List of categories."
        },
        {
          "name": "metaData",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.QueryCategoriesResponseMetaData"
            }
          ],
          "doc": "Pagination."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryCategoriesResponseMetaData",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of records returned."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset of records."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of records that match the filters."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Reaction",
      "members": [
        {
          "name": "code",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANGRY'`\n- `'CLAP'`\n- `'HAHA'`\n- `'LIKE'`\n- `'LOVE'`\n- `'SAD'`\n- `'SMILE'`\n- `'THINKING'`\n- `'THUMBS_DOWN'`\n- `'THUMBS_UP'`\n- `'WOW'`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfReactionReactionOneOf",
            "members": [
              "type"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReactionReactionOneOf",
      "members": [
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANGRY'`\n- `'CLAP'`\n- `'HAHA'`\n- `'LIKE'`\n- `'LOVE'`\n- `'SAD'`\n- `'SMILE'`\n- `'THINKING'`\n- `'THUMBS_DOWN'`\n- `'THUMBS_UP'`\n- `'WOW'`"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SeoSchema",
      "members": [
        {
          "name": "settings",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Settings"
            }
          ],
          "doc": "SEO general settings."
        },
        {
          "name": "tags",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Tag"
                  }
                ]
              }
            }
          ],
          "doc": "SEO tag information."
        }
      ],
      "docs": {
        "description": [
          "The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\nThe search engines use this information for ranking purposes, or to display snippets in the search results.\nThis data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself."
        ]
      }
    },
    {
      "name": "Settings",
      "members": [
        {
          "name": "keywords",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-forum-v2.Categories.Keyword"
                  }
                ]
              }
            }
          ],
          "doc": "User-selected keyword terms for a specific page."
        },
        {
          "name": "preventAutoRedirect",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled.\n\nDefault: `false` (Auto Redirect is enabled.)\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Tag",
      "members": [
        {
          "name": "children",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag inner content. For example, `<title> inner content </title>`."
        },
        {
          "name": "custom",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is a custom tag."
        },
        {
          "name": "disabled",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the tag is disabled."
        },
        {
          "name": "meta",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "SEO tag meta data. For example, `{height: 300, width: 240}`."
        },
        {
          "name": "props",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "A `{'key':'value'}` pair object where each SEO tag property (`'name'`, `'content'`, `'rel'`, `'href'`) contains a value.\nFor example: `{'name': 'description', 'content': 'the description itself'}`."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "SEO tag type.\n\nSupported values: `title`, `meta`, `script`, `link`.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCategoryOptions",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Editable category data."
        },
        {
          "name": "fieldMask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Field mask of fields to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateCategoryRequest",
      "members": [
        {
          "name": "category",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-forum-v2.Categories.Category"
            }
          ],
          "doc": "Editable category data."
        },
        {
          "name": "categoryId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of category."
        },
        {
          "name": "fieldMask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Field mask of fields to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
