{
  "name": "Cache",
  "memberOf": "wix-cache-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-cache-backend-invalidate_cache_request",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "invalidateCache",
      "params": [
        {
          "name": "invalidationMethods",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-cache-backend.Cache.InvalidationMethods"
                  }
                ]
              }
            }
          ],
          "doc": "An array of objects containing a `tag` field used to identify the cache to invalidate. All cached return values with any listed tags are invalidated. If no tags are specified, nothing is invalidated.",
          "required": true
        }
      ],
      "requiredFields": [
        "invalidationMethods"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Clears the cache of the function return values using specified tags.",
        "description": [
          "This function invalidates or clears the cached return values of your backend function calls, using specified tags. The `invalidationMethods` parameter takes an array of objects, each containing a `tag` field that represents the tags associated with the cached return values. These tags are defined using the `webMethod()` function in the [`wix-web-module`](https://dev.wix.com/docs/velo/api-reference/wix-web-module/web-method). For example, using an array such as `[{ tag: \"contacts\" }, { tag: \"labels\" }]` will invalidate any previously cached return values tagged with \"contacts\" or \"labels\".\n\n<blockquote class=\"important\">\n\n__Important:__\n- If you don't use the `tags` identifier property when caching the function call's return value, you can only invalidate the cached return value when the TTL expires, or when you republish your site with a code change.\n\n- This function only invalidates the caches from your backend function calls. To invalidate the Server Side Rendering (SSR) cache for your site, use the `invalidateCache()` function from the [`wix-site-backend`](https://dev.wix.com/docs/velo/api-reference/wix-site-backend/invalidate-cache) module.\n\n</blockquote>"
        ],
        "examples": [
          {
            "title": "Cache the value returned from a function, then invalidate it ",
            "body": [
              "import { cache } from \"wix-cache-backend\";",
              "import { webMethod, Permissions } from \"wix-web-module\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "// Cache the return value",
              "export const cachedMultiply = webMethod(Permissions.Anyone, (a, b) => a * b, {",
              "  cache: {",
              "    tags: [\"multiply\", \"math\"],",
              "    ttl: 604000,",
              "  },",
              "});",
              "",
              "",
              "// Invalidate the cache",
              "const invalidationMethods = [{ tag: \"multiply\" }, { tag: \"math\" }];",
              "const elevatedInvalidateCache = elevate(cache.invalidateCache);",
              "",
              "export const invalidateCache = webMethod(Permissions.Anyone, async () => {",
              "  try {",
              "    await elevatedInvalidateCache(invalidationMethods);",
              "    console.log(\"Successfully invalidated cache.\")",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "});",
              "",
              "/* Promise resolves to void */"
            ]
          },
          {
            "title": "Invalidate cached return value from queryContacts() @description:",
            "body": [
              "import { cache } from \"wix-cache-backend\";",
              "import { contacts } from \"wix-crm.v2\";",
              "import { webMethod, Permissions } from \"wix-web-module\";",
              "import { elevate } from \"wix-auth\";",
              "",
              "// Query contacts and cache result",
              "const elevatedQueryContact = elevate(contacts.queryContacts);",
              "",
              "export const myQueryContactFunction = webMethod(",
              "  Permissions.Anyone,",
              "  async () => {",
              "    try {",
              "      const contact = await elevatedQueryContact().find();",
              "      return contact.items;",
              "    } catch (error) {",
              "      console.log(error);",
              "      // Handle the error",
              "    }",
              "  },",
              "  {",
              "    cache: {",
              "      tags: [\"contact\", \"crm\"],",
              "      ttl: 85500,",
              "    },",
              "  }",
              ");",
              "",
              "",
              "",
              "// Invalidate cached query return value",
              "/* Sample invalidationMethods value:",
              " * [",
              " *   { tag: \"contact\" },",
              " *   { tag: \"crm\" }",
              " * ]",
              " */",
              "const elevatedInvalidateCache = elevate(cache.invalidateCache);",
              "",
              "export const invalidateCache = webMethod(",
              "  Permissions.Anyone,",
              "  async (invalidationMethods) => {",
              "    try {",
              "      await elevatedInvalidateCache(invalidationMethods);",
              "      return console.log(\"Successfully invalidated cache.\");",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "invalidateCache",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "InvalidateCacheOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheRequest",
      "members": [
        {
          "name": "invalidationMethods",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-cache-backend.Cache.InvalidationMethods"
                  }
                ]
              }
            }
          ],
          "doc": "An array of objects containing a `tag` field used to identify the cache to invalidate. All cached return values with any listed tags are invalidated. If no tags are specified, nothing is invalidated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidationMethods",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Identifiers of the caches to invalidate."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidationMethodsInvalidateByOneOf",
            "members": [
              "tag"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidationMethodsInvalidateByOneOf",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Identifiers of the caches to invalidate."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
