{
  "name": "wix-cache-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-cache-backend",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "biLoggerFactory",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-cache-backend.BiLogger"
          }
        ],
        "doc": null
      },
      "docs": {
        "description": []
      },
      "isVeloEvent": false,
      "syntaxName": "biLoggerFactory"
    },
    {
      "name": "invalidateCache",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-cache-backend.InvalidateCacheOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "invalidateCache example for dashboard page code",
            "body": [
              "import * as wixCacheBackend from 'wix-cache-backend';",
              "",
              "async function invalidateCache(options) {",
              "  try {",
              "    const result = await .invalidateCache(options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "invalidateCache example for exporting from backend code",
            "body": [
              "import * as wixCacheBackend from 'wix-cache-backend';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedInvalidateCache = elevate(.invalidateCache);",
              "",
              "export const invalidateCache = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await elevatedInvalidateCache(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "invalidateCache"
    }
  ],
  "messages": [
    {
      "name": "InvalidateCacheOptions",
      "members": [
        {
          "name": "invalidationMethods",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-cache-backend.InvalidationMethods"
                  }
                ]
              }
            }
          ],
          "doc": "The method by which to invalidate the cache. All sites containing any of these tags will be invalidated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheRequest",
      "members": [
        {
          "name": "invalidationMethods",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-cache-backend.InvalidationMethods"
                  }
                ]
              }
            }
          ],
          "doc": "The method by which to invalidate the cache. All sites containing any of these tags will be invalidated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidateCacheResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidationMethods",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag to invalidate by"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfInvalidationMethodsInvalidateByOneOf",
            "members": [
              "tag"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "InvalidationMethodsInvalidateByOneOf",
      "members": [
        {
          "name": "tag",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tag to invalidate by"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
