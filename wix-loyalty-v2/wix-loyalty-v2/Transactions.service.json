{
  "name": "Transactions",
  "memberOf": "wix-loyalty-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-loyalty.v2-loyalty_transaction",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkCreateLoyaltyTransactions",
      "params": [
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.BulkCreateLoyaltyTransactionsOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Transactions.BulkCreateLoyaltyTransactionsResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Creates up to 100 Loyalty transactions.",
        "description": [],
        "examples": [
          {
            "title": "bulkCreateLoyaltyTransactions example",
            "body": [
              "import { transactions } from '@wix/wix-loyalty.v2';",
              "  ",
              " async function bulkCreateLoyaltyTransactions(options) {",
              "   try {",
              "     const result = await transactions.bulkCreateLoyaltyTransactions(options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "bulkCreateLoyaltyTransactions",
      "isAdminMethod": true
    },
    {
      "name": "createLoyaltyTransaction",
      "params": [
        {
          "name": "loyaltyTransaction",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
            }
          ],
          "doc": "LoyaltyTransaction to be created.",
          "required": true
        }
      ],
      "requiredFields": [
        "loyaltyTransaction"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
                }
              ]
            }
          }
        ],
        "doc": "The created LoyaltyTransaction.\n"
      },
      "docs": {
        "summary": "Creates a LoyaltyTransaction.",
        "description": [],
        "examples": [
          {
            "title": "createLoyaltyTransaction example",
            "body": [
              "import { transactions } from '@wix/wix-loyalty.v2';",
              "  ",
              " async function createLoyaltyTransaction(loyaltyTransaction) {",
              "   try {",
              "     const result = await transactions.createLoyaltyTransaction(loyaltyTransaction);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createLoyaltyTransaction",
      "isAdminMethod": true
    },
    {
      "name": "getLoyaltyTransaction",
      "params": [
        {
          "name": "loyaltyTransactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the LoyaltyTransaction to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "loyaltyTransactionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
                }
              ]
            }
          }
        ],
        "doc": "The requested LoyaltyTransaction.\n"
      },
      "docs": {
        "summary": "Retrieves a LoyaltyTransaction.",
        "description": [],
        "examples": [
          {
            "title": "getLoyaltyTransaction example",
            "body": [
              "import { transactions } from '@wix/wix-loyalty.v2';",
              "  ",
              " async function getLoyaltyTransaction(loyaltyTransactionId) {",
              "   try {",
              "     const result = await transactions.getLoyaltyTransaction(loyaltyTransactionId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getLoyaltyTransaction",
      "isAdminMethod": true
    },
    {
      "name": "queryLoyaltyTransactions",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of LoyaltyTransactions, given the provided [paging, filtering, and sorting][1].",
        "description": [
          "",
          "Up to 1,000 LoyaltyTransactions can be returned per request.",
          "",
          "To learn how to query LoyaltyTransactions, see [API Query Language][2].",
          "",
          "[1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging",
          "[2]: https://dev.wix.com/api/rest/getting-started/api-query-language",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`startsWith()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#startsWith),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|",
          "|`accountId`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`startsWith()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#startsWith),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|",
          "|`amount`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`lt()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#lt),[`le()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#le),[`gt()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#gt),[`ge()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ge),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|",
          "|`transactionType`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|",
          "|`description`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`startsWith()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#startsWith),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|",
          "|`idempotencyKey`|[`eq()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#eq),[`ne()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ne),[`exists()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#exists),[`in()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#in),[`hasSome()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#hasSome),[`startsWith()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#startsWith),[`ascending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#ascending),[`descending()`](wix-loyalty-v2.Transactions.LoyaltyTransactionsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryLoyaltyTransactions example",
            "body": [
              "import { transactions } from '@wix/wix-loyalty.v2';",
              "  ",
              " async function queryLoyaltyTransactions() {",
              "   const { items } = transactions.queryLoyaltyTransactions().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryLoyaltyTransactions",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AdjustInfo",
      "members": [
        {
          "name": "amountAfter",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount after adjust."
        },
        {
          "name": "amountBefore",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount before adjust."
        },
        {
          "name": "appId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateLoyaltyTransactionsOptions",
      "members": [
        {
          "name": "loyaltyTransactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
                  }
                ]
              }
            }
          ],
          "doc": "Transactions to create."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Determines if entities must be returned in response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateLoyaltyTransactionsRequest",
      "members": [
        {
          "name": "loyaltyTransactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
                  }
                ]
              }
            }
          ],
          "doc": "Transactions to create."
        },
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Determines if entities must be returned in response."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateLoyaltyTransactionsResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Transactions.BulkLoyaltyTransactionResult"
                  }
                ]
              }
            }
          ],
          "doc": "Results of bulk creation."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkLoyaltyTransactionResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
            }
          ],
          "doc": "Only exists if `returnEntity` was set to true in the request."
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ItemMetadata"
            }
          ],
          "doc": "Individual loyalty transaction metadata."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateLoyaltyTransactionRequest",
      "members": [
        {
          "name": "loyaltyTransaction",
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
            }
          ],
          "doc": "LoyaltyTransaction to be created."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateLoyaltyTransactionResponse",
      "members": [
        {
          "name": "loyaltyTransaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
            }
          ],
          "doc": "The created LoyaltyTransaction."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.Cursors"
            }
          ],
          "doc": "Cursor strings that point to the next page, previous page, or both."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Transactions.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EarnInfo",
      "members": [
        {
          "name": "activityType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "appId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "orderId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ExpireInfo",
      "members": [
        {
          "name": "amountAfter",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount after expiration."
        },
        {
          "name": "amountBefore",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Amount before expiration."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLoyaltyTransactionRequest",
      "members": [
        {
          "name": "loyaltyTransactionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the LoyaltyTransaction to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetLoyaltyTransactionResponse",
      "members": [
        {
          "name": "loyaltyTransaction",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
            }
          ],
          "doc": "The requested LoyaltyTransaction."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "LoyaltyTransaction",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the LoyaltyTransaction was created."
        },
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "LoyaltyTransaction ID."
        },
        {
          "name": "accountId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Account ID."
        },
        {
          "name": "adjustInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.AdjustInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Points earned, adjusted, redeemed, or expired in the transaction."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction description. Only present for automated transactions of `type` `\"EARN\"` or `\"REDEEM\"`, when set by the site owner in the dashboard."
        },
        {
          "name": "earnInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EarnInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "expireInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ExpireInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "idempotencyKey",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique string identifier generated by the app. Wix uses this identifier to recognize subsequent retries of the same request.\n\nOnly present if points were added manually using the [Earn Points endpoint](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n"
        },
        {
          "name": "redeemInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.RedeemInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "refundInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.RefundInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "transactionType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Transaction type.\n\n+ `\"EARN\"`: Points were earned by the customer taking an action. See [Earn Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/earn-points).\n+ `\"REDEEM\"`: Points were redeemed by the customer for a reward.\n+ `\"ADJUST\"`: Point balance was manually adjusted to a loyalty account. See [Adjust Points](https://dev.wix.com/api/rest/wix-loyalty-program/accounts/adjust-points).\n+ `\"REFUND\"`: Points were refunded for a previously redeemed reward.\n+ `\"EXPIRE\"`: Points were expired because customer took no action for a configured time.\n"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfLoyaltyTransactionTransactionTypeInfoOneOf",
            "members": [
              "adjustInfo",
              "earnInfo",
              "expireInfo",
              "redeemInfo",
              "refundInfo"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Loyalty transaction."
        ]
      }
    },
    {
      "name": "LoyaltyTransactionTransactionTypeInfoOneOf",
      "members": [
        {
          "name": "adjustInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.AdjustInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "earnInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.EarnInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "expireInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.ExpireInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "redeemInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.RedeemInfo"
            }
          ],
          "doc": ""
        },
        {
          "name": "refundInfo",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.RefundInfo"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLoyaltyTransactionsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.CursorQuery"
            }
          ],
          "doc": "WQL expression."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryLoyaltyTransactionsResponse",
      "members": [
        {
          "name": "loyaltyTransactions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-loyalty-v2.Transactions.LoyaltyTransaction"
                  }
                ]
              }
            }
          ],
          "doc": "List of LoyaltyTransactions."
        },
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-loyalty-v2.Transactions.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RedeemInfo",
      "members": [
        {
          "name": "referenceEntityId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the specific item that was redeemed in this transaction.\n\nEach reward that is redeemed has a unique `referenceEntityId`."
        },
        {
          "name": "rewardId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the reward that was redeemed."
        },
        {
          "name": "rewardType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Type of reward that was redeemed."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "RefundInfo",
      "members": [
        {
          "name": "appId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
