{
  "name": "TicketDefinitions",
  "memberOf": "wix-events-v3",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-events.v3-ticket_definition",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "bulkDeleteTicketDefinitions",
      "params": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter",
          "required": true
        }
      ],
      "requiredFields": [
        "filter"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes ticket definitions by filter.",
        "description": [],
        "examples": [
          {
            "title": "bulkDeleteTicketDefinitions example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function bulkDeleteTicketDefinitions(filter) {",
              "   try {",
              "     const result = await ticketDefinitions.bulkDeleteTicketDefinitions(filter);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "createTicketDefinition",
      "params": [
        {
          "name": "definition",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "Ticket definition info.",
          "required": true
        }
      ],
      "requiredFields": [
        "definition",
        "definition.eventId",
        "definition.feeType",
        "definition.name",
        "definition.pricing"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
                }
              ]
            }
          }
        ],
        "doc": "Created ticket definition.\n"
      },
      "docs": {
        "summary": "Creates a ticket definition.",
        "description": [],
        "examples": [
          {
            "title": "createTicketDefinition example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function createTicketDefinition(definition) {",
              "   try {",
              "     const result = await ticketDefinitions.createTicketDefinition(definition);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "deleteTicketDefinition",
      "params": [
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the ticket definition to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "definitionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Permanently deletes a ticket definition.",
        "description": [],
        "examples": [
          {
            "title": "deleteTicketDefinition example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function deleteTicketDefinition(definitionId) {",
              "   try {",
              "     const result = await ticketDefinitions.deleteTicketDefinition(definitionId);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "getTicketDefinition",
      "params": [
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.GetTicketDefinitionOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "definitionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
                }
              ]
            }
          }
        ],
        "doc": "The requested ticket definition.\n"
      },
      "docs": {
        "summary": "Retrieves a ticket definition.",
        "description": [],
        "examples": [
          {
            "title": "getTicketDefinition example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function getTicketDefinition(definitionId, options) {",
              "   try {",
              "     const result = await ticketDefinitions.getTicketDefinition(definitionId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "queryTicketDefinitions",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-events-v3.TicketDefinitions.DefinitionsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of ticket definitions according to the provided filters and paging.",
        "description": [
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`id`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`eventId`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`revision`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`lt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#lt),[`le()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#le),[`gt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#gt),[`ge()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ge),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`createdDate`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`lt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#lt),[`le()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#le),[`gt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#gt),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`updatedDate`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`lt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#lt),[`le()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#le),[`gt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#gt),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`name`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`hidden`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`limit`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`lt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#lt),[`le()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#le),[`gt()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#gt),[`ge()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ge),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`pricing.pricingOptions.options.id`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|",
          "|`pricing.pricingOptions.options.name`|[`eq()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#eq),[`ne()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ne),[`in()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#in),[`exists()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#exists),[`ascending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#ascending),[`descending()`](wix-events.v3.Definitions.TicketDefinitionsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryTicketDefinitions example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function queryTicketDefinitions() {",
              "   const { items } = ticketDefinitions.queryTicketDefinitions().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "reorderTicketDefinitions",
      "params": [
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID.",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.ReorderTicketDefinitionsOptions"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "eventId",
        "options",
        "options.definitionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Changes ticket definitions order in an event dashboard and available tickets list in tickets picker.",
        "description": [],
        "examples": [
          {
            "title": "reorderTicketDefinitions example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function reorderTicketDefinitions(eventId, options) {",
              "   try {",
              "     const result = await ticketDefinitions.reorderTicketDefinitions(eventId, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    },
    {
      "name": "updateTicketDefinition",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID.",
          "required": true
        },
        {
          "name": "definition",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.UpdateTicketDefinition"
            }
          ],
          "doc": "",
          "required": true
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.UpdateTicketDefinitionOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [
        "_id",
        "definition",
        "definition.eventId",
        "definition.feeType",
        "definition.name",
        "definition.pricing",
        "definition.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
                }
              ]
            }
          }
        ],
        "doc": "The updated ticket definition.\n"
      },
      "docs": {
        "summary": "Updates a ticket definition.\nEach time the ticket definition is updated, `revision` increments by 1. The existing `revision` must be included when updating the ticket definition. This ensures you're working with the latest ticket definition and prevents unintended overwrites.",
        "description": [],
        "examples": [
          {
            "title": "updateTicketDefinition example",
            "body": [
              "import { ticketDefinitions } from 'wix-events.v3';",
              "  ",
              " async function updateTicketDefinition(id, definition, options) {",
              "   try {",
              "     const result = await ticketDefinitions.updateTicketDefinition(id, definition, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ]
    }
  ],
  "messages": [
    {
      "name": "Address",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine1",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "addressLine2",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Free text providing more detailed address info. Usually contains Apt, Suite, Floor"
        },
        {
          "name": "city",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "city name"
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "country code"
        },
        {
          "name": "postalCode",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "zip/postal code"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision (usually state or region) code according to ISO 3166-2"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfAddressStreetOneOf",
            "members": [
              "addressLine",
              "streetAddress"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          "Physical address"
        ]
      }
    },
    {
      "name": "AddressLocation",
      "members": [
        {
          "name": "latitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "longitude",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AddressStreetOneOf",
      "members": [
        {
          "name": "addressLine",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Main address line (usually street and number) as free text"
        },
        {
          "name": "streetAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.StreetAddress"
            }
          ],
          "doc": "a break down of the street to number and street name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteTicketDefinitionsRequest",
      "members": [
        {
          "name": "filter",
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkDeleteTicketDefinitionsResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTicketDefinitionRequest",
      "members": [
        {
          "name": "definition",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "Ticket definition info."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTicketDefinitionResponse",
      "members": [
        {
          "name": "definition",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "Created ticket definition."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load per page."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTicketDefinitionRequest",
      "members": [
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the ticket definition to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTicketDefinitionResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventCopied",
      "members": [
        {
          "name": "derivedFromEventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID. Indicates the original event which current event was derived from."
        },
        {
          "name": "derivedFromInstanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Instance ID. Indicates the original app instance which current event was derived from."
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "location",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Location"
            }
          ],
          "doc": "Event location."
        },
        {
          "name": "scheduleConfig",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.ScheduleConfig"
            }
          ],
          "doc": "Event schedule configuration."
        },
        {
          "name": "status",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event status."
        },
        {
          "name": "ticketDefinitions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Record",
                "typeParams": [
                  {
                    "nativeType": "string"
                  },
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Map of copied ticket definitions from original event.\nKey represents ticket def id in the original event.\nValue represents ticket def id in the newly created event."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event created timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EventDeleted",
      "members": [
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        },
        {
          "name": "timestamp",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event deleted timestamp in ISO UTC format."
        },
        {
          "name": "title",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event title."
        },
        {
          "name": "userId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event creator user ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTicketDefinitionOptions",
      "members": [
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Currently the only supported fieldset is `salesDetails`. <br/> <br/> See [field projection](https://dev.wix.com/api/rest/getting-started/field-projection) for more information."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTicketDefinitionRequest",
      "members": [
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Currently the only supported fieldset is `salesDetails`. <br/> <br/> See [field projection](https://dev.wix.com/api/rest/getting-started/field-projection) for more information."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTicketDefinitionResponse",
      "members": [
        {
          "name": "definition",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "The requested ticket definition."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Location",
      "members": [
        {
          "name": "address",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Single line address representation."
        },
        {
          "name": "coordinates",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.MapCoordinates"
            }
          ],
          "doc": "Location map coordinates."
        },
        {
          "name": "fullAddress",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Address"
            }
          ],
          "doc": "Full address derived from formatted single line `address`.\nWhen `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\nIf provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\nMigration notes:\n- `full_address.formatted_address` is equivalent to `address`.\n- `full_address.geocode` is equivalent to `coordinates`.\n"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location name."
        },
        {
          "name": "tbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event location as TBD (To Be Determined).\nWhen event location is not yet defined, `name` is displayed instead of location address.\n`coordinates`, `address`, `type` and `full_address` are not required when location is TBD."
        },
        {
          "name": "type",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Location type."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MapCoordinates",
      "members": [
        {
          "name": "lat",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Latitude."
        },
        {
          "name": "lng",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Longitude."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Money",
      "members": [
        {
          "name": "amount",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Deprecated:** Use `value` instead."
        },
        {
          "name": "currency",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ISO 4217 format of the currency i.e. `USD`."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Occurrence",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Paging",
      "members": [
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to load per page."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items to skip in the current sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        },
        {
          "name": "offset",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Offset that was requested."
        },
        {
          "name": "tooManyToCount",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Flag that indicates the server failed to calculate the `total` field."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PricingOption",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket pricing option ID."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket pricing option name."
        },
        {
          "name": "price",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Money"
            }
          ],
          "doc": "Ticket pricing option price."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PricingOptions",
      "members": [
        {
          "name": "options",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v3.TicketDefinitions.PricingOption"
                  }
                ]
              }
            }
          ],
          "doc": "Multiple ticket pricing options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTicketDefinitionsRequest",
      "members": [
        {
          "name": "query",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.QueryV2"
            }
          ],
          "doc": "Query options. See [API Query Langauge](https://dev.wix.com/api/rest/getting-started/api-query-language) for more details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTicketDefinitionsResponse",
      "members": [
        {
          "name": "definitions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
                  }
                ]
              }
            }
          ],
          "doc": "List of ticket definitions."
        },
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.PagingMetadataV2"
            }
          ],
          "doc": "Metadata for the paginated results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "fieldsets",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Currently the only supported fieldset is `salesDetails`. <br/> <br/> See [field projection](https://dev.wix.com/api/rest/getting-started/field-projection) for more information."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format: <br/> `\"filter\" : { \"fieldName1\": \"value1\", \"fieldName2\":{\"$operator\":\"value2\"} }`. <br/> <br/> **Example:** <br/> `\"filter\" : { \"id\": \"2224a9d1-79e6-4549-a5c5-bf7ce5aac1a5\", \"revision\": {\"$ne\":\"1\"} }`"
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v3.TicketDefinitions.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format: <br/> `[{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]` <br/> <br/> **Example:** <br/> `[{\"fieldName\":\"createdDate\",\"direction\":\"DESC\"}]` <br/> <br/> See [supported fields](https://dev.wix.com/api/rest/wix-events/policy-v2/filter-and-sort) for more information."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfQueryV2PagingMethodOneOf",
            "members": [
              "cursorPaging",
              "paging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2PagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "paging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Paging"
            }
          ],
          "doc": "Paging options to limit and skip the number of items."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Recurrences",
      "members": [
        {
          "name": "categoryId",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurring event category ID."
        },
        {
          "name": "occurrences",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-events-v3.TicketDefinitions.Occurrence"
                  }
                ]
              }
            }
          ],
          "doc": "Event occurrences."
        },
        {
          "name": "status",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Recurrence status."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderTicketDefinitionsOptions",
      "members": [
        {
          "name": "afterDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` after the referenced ticket definition."
        },
        {
          "name": "beforeDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` before the referenced ticket definition."
        },
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderTicketDefinitionsRequest",
      "members": [
        {
          "name": "afterDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` after the referenced ticket definition."
        },
        {
          "name": "beforeDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` before the referenced ticket definition."
        },
        {
          "name": "definitionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID."
        },
        {
          "name": "eventId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfReorderTicketDefinitionsRequestReferenceDefinitionOneOf",
            "members": [
              "afterDefinitionId",
              "beforeDefinitionId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderTicketDefinitionsRequestReferenceDefinitionOneOf",
      "members": [
        {
          "name": "afterDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` after the referenced ticket definition."
        },
        {
          "name": "beforeDefinitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Move the given `definitionId` before the referenced ticket definition."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ReorderTicketDefinitionsResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SalePeriod",
      "members": [
        {
          "name": "displayNotOnSale",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to display this ticket if it's not on sale."
        },
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Ticket sale end timestamp."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Ticket sale start timestamp."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "SalesDetails",
      "members": [
        {
          "name": "reservedCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of tickets reserved."
        },
        {
          "name": "soldCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of tickets sold."
        },
        {
          "name": "unsoldCount",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of tickets not sold yet. Empty if ticket is unlimited."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ScheduleConfig",
      "members": [
        {
          "name": "endDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event end timestamp."
        },
        {
          "name": "endDateHidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether end date is hidden in the formatted schedule."
        },
        {
          "name": "recurrences",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Recurrences"
            }
          ],
          "doc": "Event recurrences."
        },
        {
          "name": "scheduleTbd",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Defines event as TBD (To Be Determined) schedule.\nWhen event time is not yet defined, TBD message is displayed instead of event start and end times.\n`startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD."
        },
        {
          "name": "scheduleTbdMessage",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "TBD message."
        },
        {
          "name": "showTimeZone",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether time zone is displayed in formatted schedule."
        },
        {
          "name": "startDate",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event start timestamp."
        },
        {
          "name": "timeZoneId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order (ASC/DESC). Defaults to ASC"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "StreetAddress",
      "members": [
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street name"
        },
        {
          "name": "number",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "street number"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Subdivision",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision short code"
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "subdivision full-name"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketDefinition",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the ticket definition was created in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time of the ticket definition's latest update in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the ticket definition belongs."
        },
        {
          "name": "feeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Fee calculation method."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this ticket type is hidden to customers and cannot be purchased."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "limited",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the ticket has limited quantity."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "policyText",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "pricing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketPricing"
            }
          ],
          "doc": "Ticket definition pricing."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the ticket definition is updated. To prevent conflicting changes, the existing revision must be used when updating a ticket definition."
        },
        {
          "name": "salePeriod",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.SalePeriod"
            }
          ],
          "doc": "Ticket definition sale period."
        },
        {
          "name": "saleStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition sale status."
        },
        {
          "name": "salesDetails",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.SalesDetails"
            }
          ],
          "doc": "Ticket definition sales."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketPricing",
      "members": [
        {
          "name": "fixedPrice",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Money"
            }
          ],
          "doc": "Ticket price."
        },
        {
          "name": "free",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the ticket is free."
        },
        {
          "name": "guestPrice",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Money"
            }
          ],
          "doc": "Min price per ticket, customizable."
        },
        {
          "name": "pricingOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.PricingOptions"
            }
          ],
          "doc": "Ticket pricing options."
        },
        {
          "name": "pricingType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket pricing type."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfTicketPricingPriceOneOf",
            "members": [
              "fixedPrice",
              "guestPrice",
              "pricingOptions"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TicketPricingPriceOneOf",
      "members": [
        {
          "name": "fixedPrice",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Money"
            }
          ],
          "doc": "Ticket price."
        },
        {
          "name": "guestPrice",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.Money"
            }
          ],
          "doc": "Min price per ticket, customizable."
        },
        {
          "name": "pricingOptions",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.PricingOptions"
            }
          ],
          "doc": "Ticket pricing options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinition",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time when the ticket definition was created in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time of the ticket definition's latest update in `yyyy-mm-ddThh:mm:sssZ` format."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "eventId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event ID to which the ticket definition belongs."
        },
        {
          "name": "feeType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Fee calculation method."
        },
        {
          "name": "hidden",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether this ticket type is hidden to customers and cannot be purchased."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": ""
        },
        {
          "name": "limited",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the ticket has limited quantity."
        },
        {
          "name": "name",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "policyText",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        },
        {
          "name": "pricing",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketPricing"
            }
          ],
          "doc": "Ticket definition pricing."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the ticket definition is updated. To prevent conflicting changes, the existing revision must be used when updating a ticket definition."
        },
        {
          "name": "salePeriod",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.SalePeriod"
            }
          ],
          "doc": "Ticket definition sale period."
        },
        {
          "name": "saleStatus",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition sale status."
        },
        {
          "name": "salesDetails",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.SalesDetails"
            }
          ],
          "doc": "Ticket definition sales."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinitionOptions",
      "members": [
        {
          "name": "mask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of exact fields to update. For example, if you define only `name`, then all other fields will be ignored."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinitionRequest",
      "members": [
        {
          "name": "definition",
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "Ticket definition to update."
        },
        {
          "name": "mask",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of exact fields to update. For example, if you define only `name`, then all other fields will be ignored."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinitionResponse",
      "members": [
        {
          "name": "definition",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "The updated ticket definition."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinitionSortIndexRequest",
      "members": [
        {
          "name": "definitionId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Ticket definition ID"
        },
        {
          "name": "revision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The revision of the ticket definition"
        },
        {
          "name": "sortIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "the sort index of a ticket definition to set"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTicketDefinitionSortIndexResponse",
      "members": [
        {
          "name": "definition",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-events-v3.TicketDefinitions.TicketDefinition"
            }
          ],
          "doc": "the updated ticket definition"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
