{
  "name": "TaxRegions",
  "memberOf": "wix-billing-v2",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-billing.v2-tax_region",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "createTaxRegion",
      "params": [
        {
          "name": "taxRegion",
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Tax region to create.",
          "required": true
        }
      ],
      "requiredFields": [
        "taxRegion",
        "taxRegion.appId",
        "taxRegion.country",
        "taxRegion.taxIncludedInPrice"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
                }
              ]
            }
          }
        ],
        "doc": "Created tax region.\n"
      },
      "docs": {
        "summary": "Creates a tax region.",
        "description": [
          "Tax regions require a tax calculator `appId`. Use\n[List Tax Calculators](https://dev.wix.com/docs/rest/business-management/payments/tax/tax-calculation/list-tax-calculators)\nto retrieve a list of available calculators for a site.\n\nWix uses tax regions to [calculate tax](https://dev.wix.com/docs/rest/business-management/payments/tax/tax-calculation/calculate-tax)."
        ],
        "examples": [
          {
            "title": "createTaxRegion example for dashboard page code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "",
              "async function createTaxRegion(taxRegion, options) {",
              "  try {",
              "    const result = await taxRegions.createTaxRegion(taxRegion, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "createTaxRegion example for exporting from backend code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedCreateTaxRegion = elevate(taxRegions.createTaxRegion);",
              "",
              "export const createTaxRegion = webMethod(",
              "  Permissions.Anyone,",
              "  async (taxRegion, options) => {",
              "    try {",
              "      const result = await elevatedCreateTaxRegion(taxRegion, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "createTaxRegion",
      "isAdminMethod": true
    },
    {
      "name": "deleteTaxRegion",
      "params": [
        {
          "name": "taxRegionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tax region to delete.",
          "required": true
        }
      ],
      "requiredFields": [
        "taxRegionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Deletes a tax region.",
        "description": [
          "When a tax region is deleted, tax is not calculated and zero tax will be returned for addresses in this region."
        ],
        "examples": [
          {
            "title": "deleteTaxRegion example for dashboard page code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "",
              "async function deleteTaxRegion(taxRegionId) {",
              "  try {",
              "    const result = await taxRegions.deleteTaxRegion(taxRegionId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "deleteTaxRegion example for exporting from backend code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedDeleteTaxRegion = elevate(taxRegions.deleteTaxRegion);",
              "",
              "export const deleteTaxRegion = webMethod(",
              "  Permissions.Anyone,",
              "  async (taxRegionId) => {",
              "    try {",
              "      const result = await elevatedDeleteTaxRegion(taxRegionId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "deleteTaxRegion",
      "isAdminMethod": true
    },
    {
      "name": "getTaxRegion",
      "params": [
        {
          "name": "taxRegionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tax region to retrieve.",
          "required": true
        }
      ],
      "requiredFields": [
        "taxRegionId"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
                }
              ]
            }
          }
        ],
        "doc": "Retrieved tax region.\n"
      },
      "docs": {
        "summary": "Retrieves a tax region.",
        "description": [],
        "examples": [
          {
            "title": "getTaxRegion example",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "",
              "async function getTaxRegion(taxRegionId) {",
              "  try {",
              "    const result = await taxRegions.getTaxRegion(taxRegionId);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "getTaxRegion example for exporting from backend code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const getTaxRegion = webMethod(",
              "  Permissions.Anyone,",
              "  async (taxRegionId) => {",
              "    try {",
              "      const result = await taxRegions.getTaxRegion(taxRegionId);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "getTaxRegion"
    },
    {
      "name": "queryTaxRegions",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of tax regions, given the provided paging, filtering, and sorting.",
        "description": [
          "",
          "For field support for filters and sorting, see [Tax Regions: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-management/payments/tax/tax-regions/supported-filters-and-sorting).",
          "",
          "To learn about working with _Query_ endpoints, see",
          "[API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language),",
          "[Sorting and Paging](https://dev.wix.com/api/rest/getting-started/sorting-and-paging),",
          "and [Field Projection](https://dev.wix.com/api/rest/getting-started/field-projection).",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`startsWith()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#startsWith),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|",
          "|`country`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`startsWith()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#startsWith),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|",
          "|`subdivision`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`startsWith()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#startsWith),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|",
          "|`appId`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`startsWith()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#startsWith),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`lt()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#lt),[`le()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#le),[`gt()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#gt),[`ge()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ge),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#eq),[`ne()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ne),[`exists()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#exists),[`in()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#in),[`hasSome()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#hasSome),[`lt()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#lt),[`le()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#le),[`gt()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#gt),[`ge()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ge),[`ascending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#ascending),[`descending()`](wix-billing-v2.TaxRegions.TaxRegionsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryTaxRegions example",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "",
              "async function queryTaxRegions() {",
              "  const { items } = taxRegions.queryTaxRegions().find();",
              "}",
              ""
            ]
          },
          {
            "title": "queryTaxRegions example for exporting from backend code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "",
              "export const queryTaxRegions = webMethod(",
              "  Permissions.Anyone,",
              "  async (options) => {",
              "    try {",
              "      const result = await taxRegions.queryTaxRegions(options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "queryTaxRegions"
    },
    {
      "name": "updateTaxRegion",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax region ID.",
          "required": true
        },
        {
          "name": "taxRegion",
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.UpdateTaxRegion"
            }
          ],
          "doc": "",
          "required": true
        }
      ],
      "requiredFields": [
        "_id",
        "taxRegion",
        "taxRegion.revision"
      ],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
                }
              ]
            }
          }
        ],
        "doc": "Updated tax region.\n"
      },
      "docs": {
        "summary": "Updates a tax region.",
        "description": [
          "Each time the tax region is updated, `revision` increments by 1.\nThe current `revision` must be passed when updating the tax region.\nThis ensures you're working with the latest tax region and prevents\nunintended overwrites."
        ],
        "examples": [
          {
            "title": "updateTaxRegion example for dashboard page code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "",
              "async function updateTaxRegion(id, taxRegion, options) {",
              "  try {",
              "    const result = await taxRegions.updateTaxRegion(id, taxRegion, options);",
              "    return result;",
              "  } catch (error) {",
              "    console.error(error);",
              "    // Handle the error",
              "  }",
              "}",
              ""
            ]
          },
          {
            "title": "updateTaxRegion example for exporting from backend code",
            "body": [
              "import { taxRegions } from 'wix-billing.v2';",
              "import { webMethod, Permissions } from 'wix-web-module';",
              "import { elevate } from 'wix-auth';",
              "",
              "const elevatedUpdateTaxRegion = elevate(taxRegions.updateTaxRegion);",
              "",
              "export const updateTaxRegion = webMethod(",
              "  Permissions.Anyone,",
              "  async (id, taxRegion, options) => {",
              "    try {",
              "      const result = await elevatedUpdateTaxRegion(id, taxRegion, options);",
              "      return result;",
              "    } catch (error) {",
              "      console.error(error);",
              "      // Handle the error",
              "    }",
              "  }",
              ");",
              ""
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "customLabels": [
        {
          "id": "maturity-beta"
        }
      ],
      "syntaxName": "updateTaxRegion",
      "isAdminMethod": true
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ApplicationError",
      "members": [
        {
          "name": "code",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Error code."
        },
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Data related to the error."
        },
        {
          "name": "description",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Description of the error."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkActionMetadata",
      "members": [
        {
          "name": "totalFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that couldn't be processed."
        },
        {
          "name": "totalSuccesses",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items that were successfully processed."
        },
        {
          "name": "undetailedFailures",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of failures without details because detailed failure threshold was exceeded."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTaxRegionOptions",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full tax region objects in the response.\n\nDefault: `true`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTaxRegionRequest",
      "members": [
        {
          "name": "returnEntity",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether to return the full tax region objects in the response.\n\nDefault: `true`\n"
        },
        {
          "name": "taxRegions",
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
                  }
                ]
              }
            }
          ],
          "doc": "Tax regions to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTaxRegionResponse",
      "members": [
        {
          "name": "bulkActionMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.BulkActionMetadata"
            }
          ],
          "doc": "Bulk action metadata."
        },
        {
          "name": "results",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-billing-v2.TaxRegions.BulkCreateTaxRegionResult"
                  }
                ]
              }
            }
          ],
          "doc": "Tax regions created by bulk action."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "BulkCreateTaxRegionResult",
      "members": [
        {
          "name": "item",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Tax region.\n\nThis field is returned if the operation was successful and\n`returnEntity` is set to `true`.\n"
        },
        {
          "name": "itemMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.ItemMetadata"
            }
          ],
          "doc": "Item metadata."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ConflictErrorDetails",
      "members": [
        {
          "name": "reasonForConflict",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Conflict details."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTaxRegionOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTaxRegionRequest",
      "members": [
        {
          "name": "taxRegion",
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Tax region to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateTaxRegionResponse",
      "members": [
        {
          "name": "taxRegion",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Created tax region."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Pointer to the next or previous page in the list of results.\n\nPass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Maximum number of items to return in the results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPagingMetadata",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.Cursors"
            }
          ],
          "doc": "Cursor strings that point to the next page, previous page, or both."
        },
        {
          "name": "hasNext",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether there are more pages to retrieve following the current page.\n\n+ `true`: Another page of results can be retrieved.\n+ `false`: This is the last page.\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQuery",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object in the following format:\n`\"filter\" : {\n\"fieldName1\": \"value1\",\n\"fieldName2\":{\"$operator\":\"value2\"}\n}`\nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-billing-v2.TaxRegions.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sort object in the following format:\n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`"
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfCursorQueryPagingMethodOneOf",
            "members": [
              "cursorPaging"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorQueryPagingMethodOneOf",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.CursorPaging"
            }
          ],
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor string pointing to the next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to the previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTaxRegionRequest",
      "members": [
        {
          "name": "taxRegionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tax region to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteTaxRegionResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Unique event ID.\nAllows clients to ignore duplicate webhooks."
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity associated with the event."
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Event timestamp."
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the event was triggered as a result of a privacy regulation application\n(for example, GDPR)."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [
        {
          "name": "deletedEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity that was deleted"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTaxRegionRequest",
      "members": [
        {
          "name": "taxRegionId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the tax region to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetTaxRegionResponse",
      "members": [
        {
          "name": "taxRegion",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Retrieved tax region."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "identityType",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Supported values:\n- `'ANONYMOUS_VISITOR'`\n- `'APP'`\n- `'MEMBER'`\n- `'UNKNOWN'`\n- `'WIX_USER'`"
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "appId",
              "memberId",
              "wixUserId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of an app."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        },
        {
          "name": "wixUserId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a Wix user (site owner, contributor, etc.)."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ItemMetadata",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Item ID. Should always be available, unless it's impossible (for example, when failing to create an item)."
        },
        {
          "name": "error",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.ApplicationError"
            }
          ],
          "doc": "Details about the error in case of failure."
        },
        {
          "name": "originalIndex",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Index of the item within the request array. Allows for correlation between request and response items."
        },
        {
          "name": "success",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether the requested action was successful for this item. When `false`, the `error` field is populated."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "MessageEnvelope",
      "members": [
        {
          "name": "data",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Stringify payload."
        },
        {
          "name": "eventType",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Event type."
        },
        {
          "name": "identity",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.IdentificationData"
            }
          ],
          "doc": "The identification type and identity data."
        },
        {
          "name": "instanceId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "App instance ID."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTaxRegionsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.CursorQuery"
            }
          ],
          "doc": "Query options."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryTaxRegionsResponse",
      "members": [
        {
          "name": "pagingMetadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.CursorPagingMetadata"
            }
          ],
          "doc": "Paging metadata."
        },
        {
          "name": "taxRegions",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
                  }
                ]
              }
            }
          ],
          "doc": "Retrieved tax regions."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "TaxRegion",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the tax region was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax region ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the tax region was last updated."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The tax calculator ID to use to calculate tax for this region.\n\nUse [List Tax Calculators](https://dev.wix.com/docs/rest/business-management/payments/tax/tax-calculation/list-tax-calculators) to retrieve a list of available calculators for your site.\n"
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in [ISO-3166 alpha-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) format."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the tax region is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the tax region.\n\nIgnored when creating a tax region."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Subdivision (such as state, prefecture, or province) in [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        },
        {
          "name": "taxIncludedInPrice",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether tax is included in the price."
        }
      ],
      "docs": {
        "description": [
          "A tax region uses a location to define a specific tax treatment.\nA location is defined by `country` and `subdivision`. The tax region also\ndictates whether or not tax is included in the displayed price."
        ]
      }
    },
    {
      "name": "UpdateTaxRegion",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the tax region was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Tax region ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the tax region was last updated."
        },
        {
          "name": "appId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The tax calculator ID to use to calculate tax for this region.\n\nUse [List Tax Calculators](https://dev.wix.com/docs/rest/business-management/payments/tax/tax-calculation/list-tax-calculators) to retrieve a list of available calculators for your site.\n"
        },
        {
          "name": "country",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "2-letter country code in [ISO-3166 alpha-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) format."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the tax region is updated.\nTo prevent conflicting changes, the current revision must be passed when updating the tax region.\n\nIgnored when creating a tax region."
        },
        {
          "name": "subdivision",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Subdivision (such as state, prefecture, or province) in [ISO-3166 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-2) format."
        },
        {
          "name": "taxIncludedInPrice",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "Whether tax is included in the price."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaxRegionOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaxRegionRequest",
      "members": [
        {
          "name": "taxRegion",
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Tax region info to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateTaxRegionResponse",
      "members": [
        {
          "name": "taxRegion",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-billing-v2.TaxRegions.TaxRegion"
            }
          ],
          "doc": "Updated tax region."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
