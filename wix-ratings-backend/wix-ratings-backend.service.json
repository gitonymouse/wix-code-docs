{
  "name": "wix-ratings-backend",
  "mixes": [],
  "callbacks": [],
  "extra": {},
  "clientId": "wix-ratings-backend",
  "docs": {},
  "relatedGuides": [],
  "properties": [],
  "operations": [
    {
      "name": "biLoggerFactory",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-ratings-backend.BiLogger"
          }
        ],
        "doc": null
      },
      "docs": {
        "description": []
      },
      "isVeloEvent": false,
      "syntaxName": "biLoggerFactory"
    },
    {
      "name": "createRating",
      "params": [
        {
          "name": "rating",
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.Rating"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "createRating example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function createRating(rating) {",
              "   try {",
              "     const result = await .createRating(rating);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "createRating"
    },
    {
      "name": "deleteRating",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "nativeType": "void"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "deleteRating example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function deleteRating(id) {",
              "   try {",
              "     const result = await .deleteRating(id);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "deleteRating"
    },
    {
      "name": "getEntitySummary",
      "params": [
        {
          "name": "identifiers",
          "type": [
            {
              "referenceType": "wix-ratings-backend.GetEntitySummaryIdentifiers"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ratings-backend.GetEntitySummaryOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.GetEntitySummaryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "getEntitySummary example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function getEntitySummary(identifiers, options) {",
              "   try {",
              "     const result = await .getEntitySummary(identifiers, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getEntitySummary"
    },
    {
      "name": "getGroupSummary",
      "params": [
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ratings-backend.GetGroupSummaryOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.GetGroupSummaryResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "getGroupSummary example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function getGroupSummary(group, options) {",
              "   try {",
              "     const result = await .getGroupSummary(group, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getGroupSummary"
    },
    {
      "name": "getRating",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.Rating"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "getRating example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function getRating(id, options) {",
              "   try {",
              "     const result = await .getRating(id, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "getRating"
    },
    {
      "name": "listAttributeAveragesByEntity",
      "params": [
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "options",
          "type": [
            {
              "referenceType": "wix-ratings-backend.ListAttributeAveragesByEntityOptions"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.ListAttributeAveragesByEntityResponse"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "listAttributeAveragesByEntity example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function listAttributeAveragesByEntity(group, options) {",
              "   try {",
              "     const result = await .listAttributeAveragesByEntity(group, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "listAttributeAveragesByEntity"
    },
    {
      "name": "queryRatings",
      "params": [],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "referenceType": "wix-ratings-backend.RatingsQueryBuilder"
          }
        ],
        "doc": null
      },
      "docs": {
        "summary": "Retrieves a list of ratings, given the provided paging, filtering, and sorting.",
        "description": [
          "100 ratings can be returned per request.",
          "",
          "Query Ratings runs with these defaults, which you can override:",
          "",
          "- `createdDate` is sorted in `ASC` order",
          "- `paging.limit` is `100`",
          "",
          "For field support for filters and sorting, see",
          "[Ratings: Supported Filters and Sorting](https://dev.wix.com/api/rest/ratings/sort-and-filter).",
          "To learn about working with _Query_ endpoints, see",
          "[API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language).",
          "",
          "",
          "|PROPERTY\t|SUPPORTED FILTERS & SORTING\t",
          "|:---:|:---:|",
          "|`_id`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`revision`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`lt()`](wix-ratings-backend..RatingsQueryBuilder#lt),[`le()`](wix-ratings-backend..RatingsQueryBuilder#le),[`gt()`](wix-ratings-backend..RatingsQueryBuilder#gt),[`ge()`](wix-ratings-backend..RatingsQueryBuilder#ge),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`namespace`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`group`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`entityId`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`attributeName`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`value`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`lt()`](wix-ratings-backend..RatingsQueryBuilder#lt),[`le()`](wix-ratings-backend..RatingsQueryBuilder#le),[`gt()`](wix-ratings-backend..RatingsQueryBuilder#gt),[`ge()`](wix-ratings-backend..RatingsQueryBuilder#ge),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`owner`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`owner.anonymousVisitorId`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`owner.memberId`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`owner.contactId`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`startsWith()`](wix-ratings-backend..RatingsQueryBuilder#startsWith),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`_createdDate`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`gt()`](wix-ratings-backend..RatingsQueryBuilder#gt),[`lt()`](wix-ratings-backend..RatingsQueryBuilder#lt),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`_updatedDate`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`gt()`](wix-ratings-backend..RatingsQueryBuilder#gt),[`lt()`](wix-ratings-backend..RatingsQueryBuilder#lt),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|",
          "|`relatedEntityIds`|[`eq()`](wix-ratings-backend..RatingsQueryBuilder#eq),[`ne()`](wix-ratings-backend..RatingsQueryBuilder#ne),[`exists()`](wix-ratings-backend..RatingsQueryBuilder#exists),[`in()`](wix-ratings-backend..RatingsQueryBuilder#in),[`hasSome()`](wix-ratings-backend..RatingsQueryBuilder#hasSome),[`hasAll()`](wix-ratings-backend..RatingsQueryBuilder#hasAll),[`ascending()`](wix-ratings-backend..RatingsQueryBuilder#ascending),[`descending()`](wix-ratings-backend..RatingsQueryBuilder#descending)|"
        ],
        "examples": [
          {
            "title": "queryRatings example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function queryRatings() {",
              "   const { items } = .queryRatings().find();",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "queryRatings"
    },
    {
      "name": "updateRating",
      "params": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "",
          "required": false
        },
        {
          "name": "rating",
          "type": [
            {
              "referenceType": "wix-ratings-backend.UpdateRating"
            }
          ],
          "doc": "",
          "required": false
        }
      ],
      "requiredFields": [],
      "ret": {
        "type": [
          {
            "complexType": {
              "nativeType": "Promise",
              "typeParams": [
                {
                  "referenceType": "wix-ratings-backend.Rating"
                }
              ]
            }
          }
        ],
        "doc": null
      },
      "docs": {
        "description": [],
        "examples": [
          {
            "title": "updateRating example",
            "body": [
              "import * as wixRatingsBackend from 'wix-ratings-backend';",
              "  ",
              " async function updateRating(id, rating, options) {",
              "   try {",
              "     const result = await .updateRating(id, rating, options);",
              "",
              "     return result;",
              "   } catch (error) {",
              "     console.error(error);",
              "     // Handle the error",
              "   }",
              " }",
              "  "
            ]
          }
        ]
      },
      "isVeloEvent": false,
      "syntaxName": "updateRating"
    }
  ],
  "messages": [
    {
      "name": "ActionEvent",
      "members": [
        {
          "name": "bodyAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "AttributeSummary",
      "members": [
        {
          "name": "attributeName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Attribute name. An attribute is a feature of an entity that can be rated individually."
        },
        {
          "name": "average",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Average rating score for the attribute."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of ratings."
        },
        {
          "name": "valueBreakdown",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.ValueBreakdown"
                  }
                ]
              }
            }
          ],
          "doc": "Details of the rating scores. This includes every rating `value` given for the attribute and the `total` number of ratings with the `value`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateRatingRequest",
      "members": [
        {
          "name": "rating",
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "Rating to create."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CreateRatingResponse",
      "members": [
        {
          "name": "rating",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "Created rating."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "CursorPaging",
      "members": [
        {
          "name": "cursor",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor returned in last query response. Should not be provided on first page request."
        },
        {
          "name": "limit",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "The number of items to load.\nCursor token returned in the query response. To be used on the next query request, but not the first query request.\n\nMax: `100` <br />\nDefault: `50`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Cursors",
      "members": [
        {
          "name": "next",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to next page in the list of results."
        },
        {
          "name": "prev",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Cursor pointing to previous page in the list of results."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteRatingRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the rating to delete."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DeleteRatingResponse",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEvent",
      "members": [
        {
          "name": "_id",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "random GUID so clients can tell if event was already handled"
        },
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "entityEventSequence",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A sequence number defining the order of updates to the underlying entity.\nFor example, given that some entity was updated at 16:00 and than again at 16:01,\nit is guaranteed that the sequence number of the second update is strictly higher than the first.\nAs the consumer, you can use this value to ensure that you handle messages in the correct order.\nTo do so, you will need to persist this number on your end, and compare the sequence number from the\nmessage against the one you have stored. Given that the stored number is higher, you should ignore the message."
        },
        {
          "name": "entityFqdn",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assumes actions are also always typed to an entity_type\nExample: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction"
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Assuming that all messages including Actions have id\nExample: The id of the specific order, the id of a specific campaign"
        },
        {
          "name": "eventTime",
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "The time of the event. Useful if there was a delay in dispatching"
        },
        {
          "name": "originatedFrom",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "If present, indicates the action that triggered the event."
        },
        {
          "name": "slug",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)\nThis is although the created/updated/deleted notion is duplication of the oneof types\nExample: created/updated/deleted/started/completed/email_opened"
        },
        {
          "name": "triggeredByAnonymizeRequest",
          "optional": true,
          "type": [
            {
              "nativeType": "boolean"
            }
          ],
          "doc": "A field that should be set if this event was triggered by an anonymize request.\nFor example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\nNOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers."
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfDomainEventBodyOneOf",
            "members": [
              "actionEvent",
              "createdEvent",
              "deletedEvent",
              "updatedEvent"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "DomainEventBodyOneOf",
      "members": [
        {
          "name": "actionEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.ActionEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "createdEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityCreatedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "deletedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityDeletedEvent"
            }
          ],
          "doc": ""
        },
        {
          "name": "updatedEvent",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.EntityUpdatedEvent"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Empty",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityAttributeSummaryUpdated",
      "members": [
        {
          "name": "attributeSummary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.AttributeSummary"
            }
          ],
          "doc": "Rating summary of the attributes."
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A group of entities in a namespace. A namespace can have one or more groups. For example, `blog` and `forum` groups in the `comments` namespace."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix module or app that the Ratings API is integrated with. For example, Wix Reviews as `reviews`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityAverage",
      "members": [
        {
          "name": "average",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Average rating for the attributes of the entity."
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity ID."
        },
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of ratings for the entity."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityCreatedEvent",
      "members": [
        {
          "name": "entityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": ""
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityDeletedEvent",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "EntityUpdatedEvent",
      "members": [
        {
          "name": "currentEntityAsJson",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\nThis means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\nWe don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitySummaryIdentifiers",
      "members": [
        {
          "name": "entityId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity ID."
        },
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of group to calculate the summaries for."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitySummaryOptions",
      "members": [
        {
          "name": "attributeNames",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of attributes for the summaries."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace for the summaries."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitySummaryRequest",
      "members": [
        {
          "name": "attributeNames",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of attributes for the summaries."
        },
        {
          "name": "entityId",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity ID."
        },
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of group to calculate the summaries for."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace for the summaries."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetEntitySummaryResponse",
      "members": [
        {
          "name": "attributeSummaries",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.AttributeSummary"
                  }
                ]
              }
            }
          ],
          "doc": "List of attribute summaries."
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Entity ID."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Group name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGroupSummaryOptions",
      "members": [
        {
          "name": "attributeNames",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of attributes for the summaries."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace for the summaries."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGroupSummaryRequest",
      "members": [
        {
          "name": "attributeNames",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "List of attributes for the summaries."
        },
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of group to calculate the rating summaries for."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace for the summaries."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetGroupSummaryResponse",
      "members": [
        {
          "name": "attributeSummaries",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.AttributeSummary"
                  }
                ]
              }
            }
          ],
          "doc": "List of attribute summaries."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Group name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRatingOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRatingRequest",
      "members": [
        {
          "name": "_id",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the rating to retrieve."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GetRatingResponse",
      "members": [
        {
          "name": "rating",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "Retrieved rating."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "GroupAttributeSummaryUpdated",
      "members": [
        {
          "name": "attributeSummary",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.AttributeSummary"
            }
          ],
          "doc": "Rating summary of the attributes."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A group of entities in a namespace. A namespace can have one or more groups. For example, `blog` and `forum` groups in the `comments` namespace."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix module or app that the Ratings API is integrated with. For example, Wix Reviews as `reviews`."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationData",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "contactId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a contact in the site's [CRM by Ascend](https://www.wix.com/ascend/crm) system."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        }
      ],
      "extra": {
        "oneOfGroups": [
          {
            "name": "oneOfIdentificationDataIdOneOf",
            "members": [
              "anonymousVisitorId",
              "memberId"
            ]
          }
        ]
      },
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "IdentificationDataIdOneOf",
      "members": [
        {
          "name": "anonymousVisitorId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has not logged in to the site."
        },
        {
          "name": "memberId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of a site visitor that has logged in to the site."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAttributeAveragesByEntityOptions",
      "members": [
        {
          "name": "attributeName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Attribute to calculate rating averages for."
        },
        {
          "name": "entityIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Entity IDs to calculate rating averages for."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace to calculate rating averages for."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAttributeAveragesByEntityRequest",
      "members": [
        {
          "name": "attributeName",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Attribute to calculate rating averages for."
        },
        {
          "name": "entityIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "Entity IDs to calculate rating averages for."
        },
        {
          "name": "group",
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of group to calculate rating averages for."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Namespace to calculate rating averages for."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ListAttributeAveragesByEntityResponse",
      "members": [
        {
          "name": "entityAverages",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.EntityAverage"
                  }
                ]
              }
            }
          ],
          "doc": "Entity averages."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Group name."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "PagingMetadataV2",
      "members": [
        {
          "name": "count",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Number of items returned in the response."
        },
        {
          "name": "cursors",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.Cursors"
            }
          ],
          "doc": "Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRatingsRequest",
      "members": [
        {
          "name": "query",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.QueryV2"
            }
          ],
          "doc": "Rating query."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryRatingsResponse",
      "members": [
        {
          "name": "metadata",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.PagingMetadataV2"
            }
          ],
          "doc": "Paging metadata."
        },
        {
          "name": "ratings",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.Rating"
                  }
                ]
              }
            }
          ],
          "doc": "List of returned ratings."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "QueryV2",
      "members": [
        {
          "name": "cursorPaging",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.CursorPaging"
            }
          ],
          "doc": "Cursor paging options."
        },
        {
          "name": "filter",
          "optional": true,
          "type": [
            {
              "nativeType": "Object"
            }
          ],
          "doc": "Filter object. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language) for more information.\nFor a detailed list of supported filters, see [Ratings: Supported Filters and Sorting](https://dev.wix.com/api/rest/ratings/sort-and-filter),"
        },
        {
          "name": "sort",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "referenceType": "wix-ratings-backend.Sorting"
                  }
                ]
              }
            }
          ],
          "doc": "Sorting options. See [Ratings: Supported Filters and Sorting](https://dev.wix.com/api/rest/ratings/sort-and-filter) for more information,"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "Rating",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the rating was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Rating ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the rating was updated."
        },
        {
          "name": "attributeName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Characteristic of an entity that can be rated individually. For example, `value for money`."
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity being rated. For example, a Wix Stores product."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A group of entities in a namespace. A namespace can have one or more groups. For example, `blog` and `forum` groups in the `comments` namespace."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix module or app that the Ratings API is integrated with. For example, Wix Reviews as `reviews`."
        },
        {
          "name": "owner",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.IdentificationData"
            }
          ],
          "doc": "Rating owner."
        },
        {
          "name": "relatedEntityIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "[Query Ratings](https://dev.wix.com/api/rest/ratings/query-ratings) can filter by this parameter."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the rating is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the rating.\nIgnored when creating a rating."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Rating score.\n\nMin = `0` <br />\nMax = `100`\n"
        }
      ],
      "docs": {
        "description": [
          "A Rating object includes all of the details related to the rating of an entity or its attributes.\nAn entity is a resource to be rated, for example, a Wix Stores product.\nYou can manage existing ratings, create new ratings, and retrieve rating data.\nRead more about ratings in this [tutorial](https://support.wix.com/en/article/velo-tutorial-capturing-and-displaying-ratings)."
        ]
      }
    },
    {
      "name": "Sorting",
      "members": [
        {
          "name": "fieldName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Name of the field to sort by."
        },
        {
          "name": "order",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Sort order.\n\nDefault: `ASC`.\n"
        }
      ],
      "docs": {
        "description": [
          "Sort options."
        ]
      }
    },
    {
      "name": "UpdateRating",
      "members": [
        {
          "name": "_createdDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the rating was created."
        },
        {
          "name": "_id",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Rating ID."
        },
        {
          "name": "_updatedDate",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "Date"
            }
          ],
          "doc": "Date and time the rating was updated."
        },
        {
          "name": "attributeName",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Characteristic of an entity that can be rated individually. For example, `value for money`."
        },
        {
          "name": "entityId",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "ID of the entity being rated. For example, a Wix Stores product."
        },
        {
          "name": "group",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "A group of entities in a namespace. A namespace can have one or more groups. For example, `blog` and `forum` groups in the `comments` namespace."
        },
        {
          "name": "namespace",
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "The Wix module or app that the Ratings API is integrated with. For example, Wix Reviews as `reviews`."
        },
        {
          "name": "owner",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.IdentificationData"
            }
          ],
          "doc": "Rating owner."
        },
        {
          "name": "relatedEntityIds",
          "optional": true,
          "type": [
            {
              "complexType": {
                "nativeType": "Array",
                "typeParams": [
                  {
                    "nativeType": "string"
                  }
                ]
              }
            }
          ],
          "doc": "[Query Ratings](https://dev.wix.com/api/rest/ratings/query-ratings) can filter by this parameter."
        },
        {
          "name": "revision",
          "readOnly": true,
          "optional": true,
          "type": [
            {
              "nativeType": "string"
            }
          ],
          "doc": "Revision number, which increments by 1 each time the rating is updated.\nTo prevent conflicting changes,\nthe current revision must be passed when updating the rating.\nIgnored when creating a rating."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Rating score.\n\nMin = `0` <br />\nMax = `100`\n"
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRatingOptions",
      "members": [],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRatingRequest",
      "members": [
        {
          "name": "rating",
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "Rating to update."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "UpdateRatingResponse",
      "members": [
        {
          "name": "rating",
          "optional": true,
          "type": [
            {
              "referenceType": "wix-ratings-backend.Rating"
            }
          ],
          "doc": "Updated rating."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    },
    {
      "name": "ValueBreakdown",
      "members": [
        {
          "name": "total",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Total number of ratings scored with the `value`."
        },
        {
          "name": "value",
          "optional": true,
          "type": [
            {
              "nativeType": "number"
            }
          ],
          "doc": "Rating score."
        }
      ],
      "docs": {
        "description": [
          ""
        ]
      }
    }
  ]
}
