{ "name": "ecom-payment-settings",
  "mixes": [],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "payment-settings-spi-index.js" },
  "docs":
    { "summary": "The eCommerce Payment Settings SPI.",
      "description":
        [ "The Payment Settings SPI allows you to apply custom payment settings during the payment process of an order. ",
          "For example, you can use the SPI to require an additional layer of security to certain orders.",
          "",
          "## Before you begin",
          "To collect payments, a Wix site must [connect a payment provider](https://support.wix.com/en/article/connecting-a-payment-provider). ",
          "Once a payment provider is connected you may use the Payment Settings SPI to enforce additional payment settings to your site's transactions. ",
          "For example, you may require additional [3d secure payments](https://support.wix.com/en/article/about-3d-secure-3ds-payments-with-third-party-payment-providers) (3DS)",
          "for certain payment methods. Note that each payment provider may have specific payment settings they accept with their Wix integration. ",
          "For example, [Tranzila](https://support.wix.com/en/article/connecting-tranzila-as-a-payment-provider) is a payment provider that ",
          "supports 3DS payments, but not all payment providers offer this feature. We recommend [contacting payment providers directly](https://support.wix.com/en/article/receiving-payouts-from-third-party-payment-providers) ",
          "to confirm which payment settings they have implemented as part of their Wix integration. Currently, the only payment setting available to customize ",
          "is whether to apply 3DS to an order.",
          "",
          "## Configuration",
          "Adding a custom extension to your site has 3 steps:",
          "1. [Add the extension to your site](https://dev.wix.com/docs/develop-websites/articles/coding-with-velo/integrations/custom-extensions-spis/custom-app-extensions-using-sp-is#step-1-create-a-new-extension-on-your-wix-site).",
          "2. Update the [`getConfig()`](https://www.wix.com/velo/reference/spis/ecom-payment-settings/getconfig) function in the **-config.js** file that is added to your site with step 1.",
          "3. Update the [`getPaymentSettings()`](https://www.wix.com/velo/reference/spis/ecom-payment-settings/getpaymentsettings) function in the **.js** file that is added to your site with step 1.",
          "",
          "## Resources",
          "+ See an example of implementing this SPI: [Tutorial: Payment Settings Custom Extension](https://support.wix.com/en/article/tutorial-payment-settings-custom-extension)",
          "+ Learn more about SPIs and Velo: [Velo: Custom App Extensions Using SPIs](https://support.wix.com/en/article/velo-custom-business-app-extensions-using-spis-beta)",
          "",
          "## Terminology",
          "",
          "| Term | Definition |",
          "| --- | --- |",
          "| 3 Domain Security (3DS) |An additional layer of security for online credit and debit card transactions. The name refers to the \"three domains\" which interact using the protocol: the card issuer, the acquiring bank, and the payment gateway that facilitates the transaction. Learn more [about 3DS payments with third-party payment providers](https://support.wix.com/en/article/about-3d-secure-3ds-payments-with-third-party-payment-providers). | ",
          "| Payment Providers |Different payment options available to your Wix site. Learn more about [accepting payments](https://support.wix.com/en/article/accepting-payments-an-overview). |" ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "getConfig",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "fallbackValueForRequires3dSecure",
              "type": "boolean",
              "doc": "The value to set for `paymentSettings.requires3dSecure` if the SPI call fails.\n\nDefault: `false`" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "ecom-payment-settings.PaymentSettingsConfigResponse" ] },
            "doc": "Fulfilled - The configuration settings." },
        "locations":
          [ { "lineno": 1,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Use this function to set the custom default values for your \n[`getPaymentSettings()`](https://www.wix.com/velo/reference/spis/ecom-payment-settings/getpaymentsettings) function.",
            "description":
              [ "When you [add the Payment Settings custom extension](https://dev.wix.com/docs/develop-websites/articles/wix-apps/wix-e-commerce-stores/tutorial-payment-settings-custom-extension#step-1-create-a-new-payment-settings-extension), ",
                "it automatically adds a folder to your site. This file contains 2 files, **<your-extension-name>-config.js** and ",
                "**<your-extension-name>.js**.",
                "",
                "Use the first of these files, **<your-extension-name>-config.js**, to set any default configurations for your implementation of the custom extension.",
                "",
                "For the payment settings extension, the available default is to set a fallback value for whether to require ",
                "3DS to an order payment if the [`getPaymentSettings()`](https://www.wix.com/velo/reference/spis/ecom-payment-settings/getpaymentsettings) ",
                "function fails. ",
                "",
                "When `fallbackValueForRequires3dSecure` is set to `true`, then in a case where the SPI call fails it will, by default, ",
                "return `paymentSettings.requires3dSecure` set to `true` which tells the payment provider to require 3DS for the order.",
                "",
                "See [Tutorial: Payment Settings Custom Extension](https://support.wix.com/en/article/tutorial-payment-settings-custom-extension) ",
                "for a step-by-step tutorial." ],
            "links": [],
            "examples":
              [ { "title": "Example of an `spi-config.js` file",
                  "body":
                    [ "export function getConfig() {",
                      "  return {",
                      "    fallbackValueForRequires3dSecure: true",
                      "  };",
                      "};" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getPaymentSettings",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "ecom-payment-settings.Options",
              "doc": "The order information." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "ecom-payment-settings.PaymentSettingsResponse" ] },
            "doc": "Fulfilled - Retrieved payment settings." },
        "locations":
          [ { "lineno": 38,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Retrieves the payment settings to apply to an order based on your custom logic. Wix passes on the settings to the payment provider.",
            "description":
              [ "When you [add the Payment Settings custom extension](https://dev.wix.com/docs/develop-websites/articles/wix-apps/wix-e-commerce-stores/tutorial-payment-settings-custom-extension#step-1-create-a-new-payment-settings-extension), ",
                "it automatically adds a folder to your site. This file contains 2 files, **<your-extension-name>-config.js** and ",
                "**<your-extension-name>.js**.",
                "",
                "Use the second of these files, **<your-extension-name>.js**, to write the code to determine which payment settings to apply to an order. ",
                "Currently, the only payment setting available to customize is whether to apply [3 domain security](https://support.wix.com/en/article/about-3d-secure-3ds-payments-with-third-party-payment-providers) (3DS) ",
                "to an order. Note that if the code fails then `requires3dSecure` sets to the value for `fallbackValueForRequires3dSecure` set in ",
                "[`getConfig()`](https://www.wix.com/velo/reference/spis/ecom-payment-settings/getconfig).",
                "",
                "See [Tutorial: Payment Settings Custom Extension](https://support.wix.com/en/article/tutorial-payment-settings-custom-extension) ",
                "for a step-by-step tutorial." ],
            "links": [],
            "examples":
              [ { "title": "Example of a `paymentSettings` return value",
                  "body":
                    [ "export const getPaymentSettings = (options) => {",
                      "",
                      "  return {",
                      "    \"paymentSettings\": {",
                      "      \"requires3dSecure\": true",
                      "    }",
                      "  };",
                      "};" ],
                  "extra":
                    {  } },
                { "title": "Require 3DS if the order is greater than $50",
                  "body":
                    [ "export const getPaymentSettings = async (options) => {",
                      "  return {",
                      "    paymentSettings: {",
                      "      // Extract the subtotal price from the order, convert it to a number ",
                      "      // and check if the price is equal or greater than $50.",
                      "      requires3dSecure: parseFloat(options.order.priceSummary.subtotal.amount) >= 50",
                      "    }",
                      "  };",
                      "};",
                      "",
                      "/* If the subtotal price is less than 50, the following payment settings are returned:",
                      " *",
                      " * {",
                      " *   \"paymentSettings\": {",
                      " *     \"requires3dSecure\": \"false\"",
                      " *   }",
                      " * }",
                      " */" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Activities",
        "locations":
          [ { "lineno": 310,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Order activities.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_createdDate",
              "type": "string",
              "doc": "Activity creation date and time." },
            { "name": "_id",
              "type": "string",
              "doc": "Activity ID." },
            { "name": "authorEmail",
              "type": "string",
              "doc": "Activity author's email." },
            { "name": "type",
              "type": "string",
              "doc": "Activity type.\n\nSupported values: `ORDER_REFUNDED`, `ORDER_PLACED`, `ORDER_PAID`, `ORDER_FULFILLED`, `ORDER_NOT_FULFILLED`, \n`ORDER_CANCELED`, `DOWNLOAD_LINK_SENT`, `TRACKING_NUMBER_ADDED`, `TRACKING_NUMBER_EDITED`, `TRACKING_LINK_ADDED`, \n`SHIPPING_CONFIRMATION_EMAIL_SENT`, `INVOICE_ADDED`, `INVOICE_REMOVED`, `INVOICE_SENT`, `FULFILLER_EMAIL_SENT`, \n`SHIPPING_ADDRESS_EDITED`, `EMAIL_EDITED`, `PICKUP_READY_EMAIL_SENT`, `CUSTOM_ACTIVITY`, `MERCHANT_COMMENT`, \n`ORDER_CREATED_FROM_EXCHANGE`, `NEW_EXCHANGE_ORDER_CREATED`, `ORDER_PARTIALLY_PAID`, `DRAFT_ORDER_CHANGES_APPLIED`" },
            { "name": "customActivity",
              "type": "ecom-payment-settings.CustomActivity",
              "doc": "Custom activity details. `activity.type` must be `CUSTOM_ACTIVITY`." },
            { "name": "merchantComment",
              "type": "ecom-payment-settings.MerchantComment",
              "doc": "Merchant comment details. `activity.type` must be `MERCHANT_COMMENT`.",
              "optional": true },
            { "name": "orderRefunded",
              "type": "ecom-payment-settings.OrderRefunded",
              "doc": "Additional info about order refunded activity. `activity.type` must be `ORDER_REFUNDED`.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "customActivity",
                  "members":
                    [ "merchantComment",
                      "orderRefunded" ] } ] },
        "labels": [] },
      { "name": "AdditionalFees",
        "locations":
          [ { "lineno": 395,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Additional fees applied to the order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Additional fee's ID." },
            { "name": "code",
              "type": "string",
              "doc": "Additional fee's unique code for future processing." },
            { "name": "lineItemIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Optional. Line items associated with this additional fee. If no `lineItemIds` are provided, the fee will be associated with the whole cart/checkout/order." },
            { "name": "name",
              "type": "string",
              "doc": "Name of additional fee." },
            { "name": "price",
              "type": "ecom-payment-settings.AdditionalFeesPrice",
              "doc": "Additional fee's price." },
            { "name": "priceBeforeTax",
              "type": "ecom-payment-settings.AdditionalFeesPrice",
              "doc": "Additional fee's price before tax." },
            { "name": "providerAppId",
              "type": "string",
              "doc": "SPI implementer's `appId`." },
            { "name": "taxDetails",
              "type": "ecom-payment-settings.AdditionalFeesTaxDetails",
              "doc": "Tax details." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AdditionalFeesPrice",
        "locations":
          [ { "lineno": 409,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Additional fee's price.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AdditionalFeesTaxDetails",
        "locations":
          [ { "lineno": 417,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Tax details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "taxableAmount",
              "type": "ecom-payment-settings.AdditionalFeesPrice",
              "doc": "Taxable amount of this line item." },
            { "name": "taxRate",
              "type": "string",
              "doc": "Tax rate percentage, as a decimal numeral between 0 and 1. For example, `0.13`." },
            { "name": "totalTax",
              "type": "ecom-payment-settings.AdditionalFeesPrice",
              "doc": "The calculated tax, based on the `taxableAmount` and `taxRate`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Address",
        "locations":
          [ { "lineno": 183,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "An object representing address information.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "country",
              "type": "string",
              "doc": "Two-letter country code in [ISO-3166 alpha-2](https://www.iso.org/obp/ui/#search/code/) format.",
              "optional": true },
            { "name": "subdivision",
              "type": "string",
              "doc": "Code for a subdivision (such as state, prefecture, or province) in [ISO 3166-2](https://www.iso.org/standard/72483.html) format.",
              "optional": true },
            { "name": "city",
              "type": "string",
              "doc": "City name.",
              "optional": true },
            { "name": "postalCode",
              "type": "string",
              "doc": "Postal or zip code.",
              "optional": true },
            { "name": "streetAddress",
              "type": "ecom-payment-settings.StreetAddress",
              "doc": "Street address.",
              "optional": true },
            { "name": "addressLine",
              "type": "string",
              "doc": "Main address line (usually street name and number).",
              "optional": true },
            { "name": "addressLine2",
              "type": "string",
              "doc": "Free text providing more detailed address info. Usually contains apt, suite, floor.",
              "optional": true },
            { "name": "countryFullname",
              "type": "string",
              "doc": "Country's full name.",
              "optional": true },
            { "name": "subdivisionFullname",
              "type": "string",
              "doc": "Subdivision full-name.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AppliedCoupon",
        "locations":
          [ { "lineno": 577,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "An object representing a coupon applied to the order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "couponId",
              "type": "string",
              "doc": "Coupon ID." },
            { "name": "name",
              "type": "string",
              "doc": "Coupon name." },
            { "name": "code",
              "type": "string",
              "doc": "Coupon code (used by a buyer to apply the coupon)." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AppliedDiscountAmounts",
        "locations":
          [ { "lineno": 302,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Amounts.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AppliedDiscountRule",
        "locations":
          [ { "lineno": 273,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Automatic discount.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Discount rule ID." },
            { "name": "name",
              "type": "ecom-payment-settings.DiscountRuleName",
              "doc": "Discount rule name." },
            { "name": "amount",
              "type": "ecom-payment-settings.AppliedDiscountAmounts",
              "doc": "Discount value." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AppliedDiscounts",
        "locations":
          [ { "lineno": 245,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Applied discounts.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Discount ID." },
            { "name": "discountType",
              "type": "string",
              "doc": "Discount type.\nOne of:\n\n + `GLOBAL`: Discount applies to entire order.\n + `SPECIFIC-ITEMS`: Discount applies to specific items.\n + `SHIPPING`: Discount applies to shipping. For example, free shipping." },
            { "name": "lineItemIds",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "IDs of line items discount applies to." },
            { "name": "coupon",
              "type": "ecom-payment-settings.AppliedDiscountsCoupon",
              "doc": "Applied coupon info.",
              "optional": true },
            { "name": "discountRule",
              "type": "ecom-payment-settings.AppliedDiscountsDiscountRule",
              "doc": "Automatic discount.",
              "optional": true },
            { "name": "merchantDiscount",
              "type": "ecom-payment-settings.AppliedMerchantDiscount",
              "doc": "Merchant discount." } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "appliedDiscount",
                  "members":
                    [ "coupon",
                      "discountRule" ] } ] },
        "labels": [] },
      { "name": "AppliedDiscountsCoupon",
        "locations":
          [ { "lineno": 263,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Applied coupon info.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Coupon ID." },
            { "name": "code",
              "type": "string",
              "doc": "Coupon code." },
            { "name": "name",
              "type": "string",
              "doc": "Coupon name." },
            { "name": "amount",
              "type": "ecom-payment-settings.AppliedDiscountAmounts",
              "doc": "Coupon value." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "AppliedMerchantDiscount",
        "locations":
          [ { "lineno": 282,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Merchant discount.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "ecom-payment-settings.AppliedDiscountAmounts",
              "doc": "Discount amount." },
            { "name": "description",
              "type": "string",
              "doc": "Discount description as free text (optional).",
              "optional": true },
            { "name": "discountReason",
              "type": "string",
              "doc": "Pre-defined discount reason (optional).\n\n + `ITEMS_EXCHANGE`: Exchange balance acquired as a result of items exchange.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "reason",
                  "members":
                    [ "description",
                      "discountReason" ] } ] },
        "labels":
          [ "changed" ] },
      { "name": "BillingInfo",
        "locations":
          [ { "lineno": 175,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Billing address and contact details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "address",
              "type": "ecom-payment-settings.Address",
              "doc": "Address.",
              "optional": true },
            { "name": "contactDetails",
              "type": "ecom-payment-settings.ContactDetails",
              "doc": "Contact Details.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "BuyerInfo",
        "locations":
          [ { "lineno": 141,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Buyer information.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactId",
              "type": "string",
              "doc": "Contact ID. Auto-created if one does not yet exist. For more information, see Contacts API.",
              "optional": true },
            { "name": "email",
              "type": "string",
              "doc": "Buyer email address.",
              "optional": true },
            { "name": "visitorId",
              "type": "string",
              "doc": "Visitor ID (if site visitor is not a member).",
              "optional": true },
            { "name": "memberId",
              "type": "string",
              "doc": "Member ID (if site visitor is a site member).",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "id",
                  "members":
                    [ "visitorId",
                      "memberId" ] } ] },
        "labels": [] },
      { "name": "ChannelInfo",
        "locations":
          [ { "lineno": 374,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Information about the sales channel that submitted this order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "externalOrderId",
              "type": "string",
              "doc": "Reference to an order ID from an external system.",
              "optional": true },
            { "name": "externalOrderUrl",
              "type": "string",
              "doc": "URL to the order in the external system.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Sales channel that submitted the order.\n\nOne of: `WEB`, `POS`, `EBAY`, `AMAZON`, `OTHER_PLATFORM`, `WIX_APP_STORE`, \n`WIX_INVOICES`, `BACKOFFICE_MERCHANT`, `WISH`, `CLASS_PASS`, `GLOBAL_E`" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ContactDetails",
        "locations":
          [ { "lineno": 206,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Contact details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "firstName",
              "type": "string",
              "doc": "First name.",
              "optional": true },
            { "name": "lastName",
              "type": "string",
              "doc": "Last name.",
              "optional": true },
            { "name": "phone",
              "type": "string",
              "doc": "Phone number.",
              "optional": true },
            { "name": "company",
              "type": "string",
              "doc": "Company name.",
              "optional": true },
            { "name": "vatId",
              "type": "ecom-payment-settings.VatId",
              "doc": "Tax information (for Brazil only). If ID is provided, `vatId.type` must also be set, `UNSPECIFIED` is not allowed.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CostAmount",
        "locations":
          [ { "lineno": 454,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "CostTaxDetails",
        "locations":
          [ { "lineno": 447,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "taxRate",
              "type": "string",
              "doc": "Tax rate percentage, as a decimal numeral between 0 and 1. For example, `0.13`." },
            { "name": "taxableAmount",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "Taxable amount of this line item." },
            { "name": "totalTax",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "The calculated tax, based on the `taxableAmount` and `taxRate`." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "CreatedBy",
        "locations":
          [ { "lineno": 363,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "ID of the order's initiator.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "userId",
              "type": "string",
              "doc": "When the order was created by a Wix user on behalf of a buyer. For example, via POS (point of service).",
              "optional": true },
            { "name": "memberId",
              "type": "string",
              "doc": "When the order was created by a **logged in** site visitor.",
              "optional": true },
            { "name": "visitorId",
              "type": "string",
              "doc": "When the order was created by a site visitor that was **not** logged in.",
              "optional": true },
            { "name": "appId",
              "type": "string",
              "doc": "When the order was created by an external application.",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "creator",
                  "members":
                    [ "userId",
                      "memberId",
                      "visitorId",
                      "appId" ] } ] },
        "labels": [] },
      { "name": "CustomActivity",
        "locations":
          [ { "lineno": 330,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Custom activity details. `activity.type` must be `CUSTOM_ACTIVITY`.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "appId",
              "type": "string",
              "doc": "ID of the app that created the custom activity." },
            { "name": "type",
              "type": "string",
              "doc": "Custom activity type. For example, `\"Ticket number set\"`." },
            { "name": "additionalData",
              "type": "Object",
              "doc": "Additional data in key-value form. For example, `{ \"Ticket number\": \"123456\" }`." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CustomFields",
        "locations":
          [ { "lineno": 386,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Custom fields.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "title",
              "type": "string",
              "doc": "Custom field title." },
            { "name": "translatedTitle",
              "type": "string",
              "doc": "Translated custom field title." },
            { "name": "value",
              "type": "string",
              "doc": "Custom field's text." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Discount",
        "locations":
          [ { "lineno": 585,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "An object representing a discount applied to the order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "appliedCoupon",
              "type": "ecom-payment-settings.AppliedCoupon",
              "doc": "Information about an applied coupon." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "DiscountRuleName",
        "locations":
          [ { "lineno": 294,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Discount rule name.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "original",
              "type": "string",
              "doc": "Original discount rule name (in site's default language)." },
            { "name": "translated",
              "type": "string",
              "doc": "Translated discount rule name according to buyer language. Defaults to `original` when not provided." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MerchantComment",
        "locations":
          [ { "lineno": 339,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Merchant comment details. `activity.type` must be `MERCHANT_COMMENT`.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "message",
              "type": "string",
              "doc": "Merchant comment message." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Options",
        "locations":
          [ { "lineno": 62,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "ecom-payment-settings.Order",
              "doc": "Order information." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Order",
        "locations":
          [ { "lineno": 80,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "An object representing an order.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Order ID.",
              "optional": true },
            { "name": "number",
              "type": "number",
              "doc": "Order number displayed in the site owner's dashboard (auto-generated).",
              "optional": true },
            { "name": "_createdDate",
              "type": "string",
              "doc": "Date and time the order was created in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601#combined_date_and_time_representations) format.",
              "optional": true },
            { "name": "_updatedDate",
              "type": "string",
              "doc": "Date and time the order was updated in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601#combined_date_and_time_representations) format.",
              "optional": true },
            { "name": "lineItems",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-payment-settings.OrderLineItem" ] },
              "doc": "Order line items.",
              "optional": true },
            { "name": "buyerInfo",
              "type": "ecom-payment-settings.BuyerInfo",
              "doc": "Buyer information.",
              "optional": true },
            { "name": "paymentStatus",
              "type": "string",
              "doc": "Order payment status.\n\nOne of:\n\n + `NOT_PAID`: This can be an order made online, but not yet paid. In such cases `order.status` will be `INITIALIZED`. This status also applies when an offline order needs to be manually marked as paid. In such cases `order.status` will be `APPROVED`.\n + `PAID`: All payments associated with this order are paid.\n + `PARTIALLY_REFUNDED`: Order was refunded, but refund amount is less than order total price.\n + `FULLY_REFUNDED`: Order fully refunded. Refund amount equals total price.\n + `PENDING`: Payments received but not yet confirmed by the payment provider.\n + `PARTIALLY_PAID`: At least one payment was received and approved, covering less than total price amount.",
              "optional": true },
            { "name": "fulfillmentStatus",
              "type": "string",
              "doc": "Order fulfillment status.\n\nOne of:\n\n + `NOT_FULFILLED`: Order is not yet fulfilled.\n + `FULFILLED`: Order was fulfilled successfully.\n + `PARTIALLY_FULFILLED`: Order was partially fulfilled. For example, when only some of the order's items were fulfilled.",
              "optional": true },
            { "name": "buyerLanguage",
              "type": "string",
              "doc": "Language for communication with the buyer. Defaults to the site language. For a site that supports multiple languages, this is the language the buyer selected.",
              "optional": true },
            { "name": "weightUnit",
              "type": "string",
              "doc": "Weight measurement unit - defaults to site's weight unit.\n\nOne of: `UNSPECIFIED_WEIGHT_UNIT`, `KG`, `LB`",
              "optional": true },
            { "name": "currency",
              "type": "string",
              "doc": "Currency used for the pricing of this order in [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217#list_of_ISO_4217_currency_codes) format.",
              "optional": true },
            { "name": "taxIncludedInPrices",
              "type": "boolean",
              "doc": "Whether tax is included in line item prices.",
              "optional": true },
            { "name": "siteLanguage",
              "type": "string",
              "doc": "Site language in which original values are shown.",
              "optional": true },
            { "name": "priceSummary",
              "type": "ecom-payment-settings.PriceSummary",
              "doc": "Order price summary.",
              "optional": true },
            { "name": "billingInfo",
              "type": "ecom-payment-settings.BillingInfo",
              "doc": "Billing address and contact details.",
              "optional": true },
            { "name": "shippingInfo",
              "type": "ecom-payment-settings.OrderShippingInfo",
              "doc": "Shipping info and selected shipping option details.",
              "optional": true },
            { "name": "buyerNote",
              "type": "string",
              "doc": "[Buyer note](https://support.wix.com/en/article/wix-stores-viewing-buyer-notes) left by the customer.",
              "optional": true },
            { "name": "status",
              "type": "string",
              "doc": "Order status.\n\nOne of:\n\n + `INITIALIZED`: Order was created, but not yet approved or declined.\n + `APPROVED`: Order was approved. This happens when either the online payment succeeded or the order is an offline order. Once an order is approved, many side effects are triggered. For example, holding of stock in the inventory and sending of notification emails.\n + `CANCELED`: Order was canceled by the user.",
              "optional": true },
            { "name": "archived",
              "type": "boolean",
              "doc": "Whether order is archived.",
              "optional": true },
            { "name": "taxSummary",
              "type": "ecom-payment-settings.TaxSummary",
              "doc": "Tax summary.",
              "optional": true },
            { "name": "appliedDiscounts",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-payment-settings.AppliedDiscounts" ] },
              "doc": "Applied discounts.",
              "optional": true },
            { "name": "activities",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-payment-settings.Activities" ] },
              "doc": "Log of updates related to the order.",
              "optional": true },
            { "name": "attributionSource",
              "type": "string",
              "doc": "Order attribution source.\n\nOne of: `UNSPECIFIED`, `FACEBOOK_ADS`",
              "optional": true },
            { "name": "createdBy",
              "type": "ecom-payment-settings.CreatedBy",
              "doc": "ID of the order's initiator.",
              "optional": true },
            { "name": "channelInfo",
              "type": "ecom-payment-settings.ChannelInfo",
              "doc": "Information about the sales channel that submitted this order.",
              "optional": true },
            { "name": "seenByAHuman",
              "type": "boolean",
              "doc": "Whether a human has seen the order. Set when an order is clicked on in the Business Manager.",
              "optional": true },
            { "name": "checkoutId",
              "type": "string",
              "doc": "Checkout ID.",
              "optional": true },
            { "name": "customFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-payment-settings.CustomFields" ] },
              "doc": "Custom fields.",
              "optional": true },
            { "name": "additionalFees",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "ecom-payment-settings.AdditionalFees" ] },
              "doc": "Additional fees applied to the order.",
              "optional": true },
            { "name": "purchaseFlowId",
              "type": "string",
              "doc": "Persistent ID that correlates between the various eCommerce elements: cart, checkout, and order.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "changed" ] },
      { "name": "OrderRefunded",
        "locations":
          [ { "lineno": 346,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Additional info about order refunded activity. `activity.type` must be `ORDER_REFUNDED`.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "ecom-payment-settings.RefundAmount",
              "doc": "Refund amount." },
            { "name": "manual",
              "type": "string",
              "doc": "Whether order was refunded manually. For example, via payment provider or using cash." },
            { "name": "reason",
              "type": "string",
              "doc": "Reason for refund." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "OrderShippingInfo",
        "locations":
          [ { "lineno": 426,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Shipping info and selected shipping option details.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "carrierId",
              "type": "string",
              "doc": "App Def ID of external provider which was a source of shipping info.",
              "optional": true },
            { "name": "code",
              "type": "string",
              "doc": "Unique code (or ID) of selected shipping option. For example, `usps_std_overnight`.",
              "optional": true },
            { "name": "cost",
              "type": "payment-settings.ShippingCost",
              "doc": "Shipping costs.",
              "optional": true },
            { "name": "logistics",
              "type": "payment-settings.ShippingLogistics",
              "doc": "Shipping logistics.",
              "optional": true },
            { "name": "region",
              "type": "payment-settings.ShippingRegion",
              "doc": "Shipping region.",
              "optional": true },
            { "name": "title",
              "type": "string",
              "doc": "Shipping option title. For example, `USPS Standard Overnight Delivery`, `Standard` or `First-Class Package International`.",
              "optional": true } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "PaymentSettings",
        "locations":
          [ { "lineno": 74,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "requires3dSecure",
              "type": "boolean",
              "doc": "Whether to apply [3D Secure](https://support.wix.com/en/article/about-3d-secure-3ds-payments-with-third-party-payment-providers) during the payment process." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentSettingsConfigResponse",
        "locations":
          [ { "lineno": 31,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "fallbackValueForRequires3dSecure",
              "type": "boolean",
              "doc": "The value to set for `paymentSettings.requires3dSecure` if the SPI call fails.\n\nDefault: `false`" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PaymentSettingsResponse",
        "locations":
          [ { "lineno": 68,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "paymentSettings",
              "type": "ecom-payment-settings.PaymentSettings",
              "doc": "Retrieved payment settings." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PriceSummary",
        "locations":
          [ { "lineno": 152,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Order price summary.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "subtotal",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Subtotal of all the line items, before discounts and before tax.",
              "optional": true },
            { "name": "shipping",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Total shipping price, before discounts and before tax.",
              "optional": true },
            { "name": "tax",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Total tax on this order.",
              "optional": true },
            { "name": "discount",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Total calculated discount value.",
              "optional": true },
            { "name": "totalPrice",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Deprecated - use `total` instead.",
              "optional": true },
            { "name": "total",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Order’s total price after discounts and tax.",
              "optional": true },
            { "name": "totalWithGiftCard",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Order's total price including gift card.",
              "optional": true },
            { "name": "totalWithoutGiftCard",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Order's total price after without gift card.",
              "optional": true },
            { "name": "totalAdditionalFees",
              "type": "ecom-payment-settings.PriceSummaryAmounts",
              "doc": "Total price of additional fees before tax.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "PriceSummaryAmounts",
        "locations":
          [ { "lineno": 167,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Price summary amounts.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RefundAmount",
        "locations":
          [ { "lineno": 355,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Refund amount.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "ShippingCost",
        "locations":
          [ { "lineno": 438,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "discount",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "Shipping discount before tax." },
            { "name": "price",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "Shipping price for display purposes." },
            { "name": "taxDetails",
              "type": "ecom-payment-settings.CostTaxDetails",
              "doc": "Tax details." },
            { "name": "totalPriceAfterTax",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "Shipping price after all discounts (if any exist), and after tax." },
            { "name": "totalPriceBeforeTax",
              "type": "ecom-payment-settings.CostAmount",
              "doc": "Deprecated. Use `totalPriceAfterTax` minus `taxDetails.totalTax` instead." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "ShippingRegion",
        "locations":
          [ { "lineno": 460,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Name of shipping region. For example, `Metropolitan London`, or `Outer Melbourne suburbs`." } ],
        "extra":
          {  },
        "labels":
          [ "new" ] },
      { "name": "StreetAddress",
        "locations":
          [ { "lineno": 198,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Street address.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "Street name.",
              "optional": true },
            { "name": "number",
              "type": "string",
              "doc": "Street number.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TaxSummary",
        "locations":
          [ { "lineno": 230,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Order price summary.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "totalTax",
              "type": "payment-settings.TaxSummaryAmounts",
              "doc": "Total tax." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "TaxSummaryAmounts",
        "locations":
          [ { "lineno": 237,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Total tax.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "amount",
              "type": "string",
              "doc": "Amount." },
            { "name": "formattedAmount",
              "type": "string",
              "doc": "Amount formatted with currency symbol." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "VatId",
        "locations":
          [ { "lineno": 217,
              "filename": "payment-settings-spi.js" } ],
        "docs":
          { "summary": "Tax information (for Brazil only). If ID is provided, `vatId.type` must also be set, `UNSPECIFIED` is not allowed.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "Customer's tax ID.",
              "optional": true },
            { "name": "type",
              "type": "string",
              "doc": "Tax type.\n\nOne of:\n\n + `CPF`: for individual tax payers\n + `CNPJ`: for corporations",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }